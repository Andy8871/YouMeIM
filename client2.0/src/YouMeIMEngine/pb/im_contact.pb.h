// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_contact.proto

#ifndef PROTOBUF_im_5fcontact_2eproto__INCLUDED
#define PROTOBUF_im_5fcontact_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include "im_common.pb.h"
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_im_5fcontact_2eproto();
void protobuf_AssignDesc_im_5fcontact_2eproto();
void protobuf_ShutdownFile_im_5fcontact_2eproto();

class YouMeIM_Command_AddContact;
class YouMeIM_Command_AddContactRequest;
class YouMeIM_Command_AddContactResponse;
class YouMeIM_Command_AddContactToBlacklist;
class YouMeIM_Command_AddContactToBlacklistResponse;
class YouMeIM_Command_AddedToBlacklist;
class YouMeIM_Command_AgreeContactInvited;
class YouMeIM_Command_DeleteContact;
class YouMeIM_Command_DeleteContactResponse;
class YouMeIM_Command_GetBlacklistList;
class YouMeIM_Command_GetBlacklistListResponse;
class YouMeIM_Command_GetContactInfo;
class YouMeIM_Command_GetContactInfoResponse;
class YouMeIM_Command_GetContactList;
class YouMeIM_Command_GetContactListResponse;
class YouMeIM_Command_InvitedResponse;
class YouMeIM_Command_KickedFromBlacklist;
class YouMeIM_Command_KickedFromBlacklistResponse;
class YouMeIM_Command_ReceiveContactInvited;
class YouMeIM_Command_RefuseContactInvited;
class YouMeIM_Command_WasDeleted;
class YouMeIM_Command_WasKickedFromBlacklist;

enum YouMeIM_AddContactEvent {
  AddContactEvent_Agree = 0,
  AddContactEvent_Refuse = 1
};
bool YouMeIM_AddContactEvent_IsValid(int value);
const YouMeIM_AddContactEvent YouMeIM_AddContactEvent_MIN = AddContactEvent_Agree;
const YouMeIM_AddContactEvent YouMeIM_AddContactEvent_MAX = AddContactEvent_Refuse;
const int YouMeIM_AddContactEvent_ARRAYSIZE = YouMeIM_AddContactEvent_MAX + 1;

// ===================================================================

class YouMeIM_Command_GetContactList : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetContactList();
  virtual ~YouMeIM_Command_GetContactList();

  YouMeIM_Command_GetContactList(const YouMeIM_Command_GetContactList& from);

  inline YouMeIM_Command_GetContactList& operator=(const YouMeIM_Command_GetContactList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetContactList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetContactList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetContactList* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetContactList* New() const { return New(NULL); }

  YouMeIM_Command_GetContactList* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetContactList& from);
  void MergeFrom(const YouMeIM_Command_GetContactList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetContactList* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetContactList)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetContactList* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetBlacklistList : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetBlacklistList();
  virtual ~YouMeIM_Command_GetBlacklistList();

  YouMeIM_Command_GetBlacklistList(const YouMeIM_Command_GetBlacklistList& from);

  inline YouMeIM_Command_GetBlacklistList& operator=(const YouMeIM_Command_GetBlacklistList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetBlacklistList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetBlacklistList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetBlacklistList* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetBlacklistList* New() const { return New(NULL); }

  YouMeIM_Command_GetBlacklistList* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetBlacklistList& from);
  void MergeFrom(const YouMeIM_Command_GetBlacklistList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetBlacklistList* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetBlacklistList)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetBlacklistList* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetContactListResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetContactListResponse();
  virtual ~YouMeIM_Command_GetContactListResponse();

  YouMeIM_Command_GetContactListResponse(const YouMeIM_Command_GetContactListResponse& from);

  inline YouMeIM_Command_GetContactListResponse& operator=(const YouMeIM_Command_GetContactListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetContactListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetContactListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetContactListResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetContactListResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetContactListResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetContactListResponse& from);
  void MergeFrom(const YouMeIM_Command_GetContactListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetContactListResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // repeated .YouMeProtocol.ContactInfo contacts = 2;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 2;
  const ::YouMeIMProtocol::ContactInfo& contacts(int index) const;
  ::YouMeIMProtocol::ContactInfo* mutable_contacts(int index);
  ::YouMeIMProtocol::ContactInfo* add_contacts();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
      mutable_contacts();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetContactListResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo > contacts_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetContactListResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetBlacklistListResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetBlacklistListResponse();
  virtual ~YouMeIM_Command_GetBlacklistListResponse();

  YouMeIM_Command_GetBlacklistListResponse(const YouMeIM_Command_GetBlacklistListResponse& from);

  inline YouMeIM_Command_GetBlacklistListResponse& operator=(const YouMeIM_Command_GetBlacklistListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetBlacklistListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetBlacklistListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetBlacklistListResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetBlacklistListResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetBlacklistListResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetBlacklistListResponse& from);
  void MergeFrom(const YouMeIM_Command_GetBlacklistListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetBlacklistListResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // repeated .YouMeProtocol.ContactInfo contacts = 2;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 2;
  const ::YouMeIMProtocol::ContactInfo& contacts(int index) const;
  ::YouMeIMProtocol::ContactInfo* mutable_contacts(int index);
  ::YouMeIMProtocol::ContactInfo* add_contacts();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
      mutable_contacts();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo > contacts_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetBlacklistListResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddContact : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddContact();
  virtual ~YouMeIM_Command_AddContact();

  YouMeIM_Command_AddContact(const YouMeIM_Command_AddContact& from);

  inline YouMeIM_Command_AddContact& operator=(const YouMeIM_Command_AddContact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddContact& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddContact* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddContact* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddContact* New() const { return New(NULL); }

  YouMeIM_Command_AddContact* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddContact& from);
  void MergeFrom(const YouMeIM_Command_AddContact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddContact* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // optional string reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddContact)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddContact* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddContactRequest : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddContactRequest();
  virtual ~YouMeIM_Command_AddContactRequest();

  YouMeIM_Command_AddContactRequest(const YouMeIM_Command_AddContactRequest& from);

  inline YouMeIM_Command_AddContactRequest& operator=(const YouMeIM_Command_AddContactRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddContactRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddContactRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddContactRequest* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddContactRequest* New() const { return New(NULL); }

  YouMeIM_Command_AddContactRequest* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddContactRequest& from);
  void MergeFrom(const YouMeIM_Command_AddContactRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddContactRequest* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddContactRequest)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddContactRequest* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ReceiveContactInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ReceiveContactInvited();
  virtual ~YouMeIM_Command_ReceiveContactInvited();

  YouMeIM_Command_ReceiveContactInvited(const YouMeIM_Command_ReceiveContactInvited& from);

  inline YouMeIM_Command_ReceiveContactInvited& operator=(const YouMeIM_Command_ReceiveContactInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ReceiveContactInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ReceiveContactInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ReceiveContactInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ReceiveContactInvited* New() const { return New(NULL); }

  YouMeIM_Command_ReceiveContactInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ReceiveContactInvited& from);
  void MergeFrom(const YouMeIM_Command_ReceiveContactInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ReceiveContactInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeProtocol.ContactInfo contactinfo = 2;
  bool has_contactinfo() const;
  void clear_contactinfo();
  static const int kContactinfoFieldNumber = 2;
  const ::YouMeIMProtocol::ContactInfo& contactinfo() const;
  ::YouMeIMProtocol::ContactInfo* mutable_contactinfo();
  ::YouMeIMProtocol::ContactInfo* release_contactinfo();
  void set_allocated_contactinfo(::YouMeIMProtocol::ContactInfo* contactinfo);

  // optional string reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_contactinfo();
  inline void clear_has_contactinfo();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::ContactInfo* contactinfo_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ReceiveContactInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AgreeContactInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AgreeContactInvited();
  virtual ~YouMeIM_Command_AgreeContactInvited();

  YouMeIM_Command_AgreeContactInvited(const YouMeIM_Command_AgreeContactInvited& from);

  inline YouMeIM_Command_AgreeContactInvited& operator=(const YouMeIM_Command_AgreeContactInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AgreeContactInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AgreeContactInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AgreeContactInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AgreeContactInvited* New() const { return New(NULL); }

  YouMeIM_Command_AgreeContactInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AgreeContactInvited& from);
  void MergeFrom(const YouMeIM_Command_AgreeContactInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AgreeContactInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AgreeContactInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AgreeContactInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_RefuseContactInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_RefuseContactInvited();
  virtual ~YouMeIM_Command_RefuseContactInvited();

  YouMeIM_Command_RefuseContactInvited(const YouMeIM_Command_RefuseContactInvited& from);

  inline YouMeIM_Command_RefuseContactInvited& operator=(const YouMeIM_Command_RefuseContactInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_RefuseContactInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_RefuseContactInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_RefuseContactInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_RefuseContactInvited* New() const { return New(NULL); }

  YouMeIM_Command_RefuseContactInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_RefuseContactInvited& from);
  void MergeFrom(const YouMeIM_Command_RefuseContactInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_RefuseContactInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // optional string reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_RefuseContactInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_RefuseContactInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_InvitedResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_InvitedResponse();
  virtual ~YouMeIM_Command_InvitedResponse();

  YouMeIM_Command_InvitedResponse(const YouMeIM_Command_InvitedResponse& from);

  inline YouMeIM_Command_InvitedResponse& operator=(const YouMeIM_Command_InvitedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_InvitedResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_InvitedResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_InvitedResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_InvitedResponse* New() const { return New(NULL); }

  YouMeIM_Command_InvitedResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_InvitedResponse& from);
  void MergeFrom(const YouMeIM_Command_InvitedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_InvitedResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeProtocol.YouMeIM_AddContactEvent evtType = 2;
  bool has_evttype() const;
  void clear_evttype();
  static const int kEvtTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_AddContactEvent evttype() const;
  void set_evttype(::YouMeIMProtocol::YouMeIM_AddContactEvent value);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_InvitedResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_evttype();
  inline void clear_has_evttype();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  int evttype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_InvitedResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddContactResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddContactResponse();
  virtual ~YouMeIM_Command_AddContactResponse();

  YouMeIM_Command_AddContactResponse(const YouMeIM_Command_AddContactResponse& from);

  inline YouMeIM_Command_AddContactResponse& operator=(const YouMeIM_Command_AddContactResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddContactResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddContactResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddContactResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddContactResponse* New() const { return New(NULL); }

  YouMeIM_Command_AddContactResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddContactResponse& from);
  void MergeFrom(const YouMeIM_Command_AddContactResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddContactResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeProtocol.YouMeIM_AddContactEvent evtType = 2;
  bool has_evttype() const;
  void clear_evttype();
  static const int kEvtTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_AddContactEvent evttype() const;
  void set_evttype(::YouMeIMProtocol::YouMeIM_AddContactEvent value);

  // optional .YouMeProtocol.ContactInfo contactinfo = 3;
  bool has_contactinfo() const;
  void clear_contactinfo();
  static const int kContactinfoFieldNumber = 3;
  const ::YouMeIMProtocol::ContactInfo& contactinfo() const;
  ::YouMeIMProtocol::ContactInfo* mutable_contactinfo();
  ::YouMeIMProtocol::ContactInfo* release_contactinfo();
  void set_allocated_contactinfo(::YouMeIMProtocol::ContactInfo* contactinfo);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddContactResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_evttype();
  inline void clear_has_evttype();
  inline void set_has_contactinfo();
  inline void clear_has_contactinfo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::ContactInfo* contactinfo_;
  int evttype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddContactResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_DeleteContact : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_DeleteContact();
  virtual ~YouMeIM_Command_DeleteContact();

  YouMeIM_Command_DeleteContact(const YouMeIM_Command_DeleteContact& from);

  inline YouMeIM_Command_DeleteContact& operator=(const YouMeIM_Command_DeleteContact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_DeleteContact& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_DeleteContact* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_DeleteContact* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_DeleteContact* New() const { return New(NULL); }

  YouMeIM_Command_DeleteContact* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_DeleteContact& from);
  void MergeFrom(const YouMeIM_Command_DeleteContact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_DeleteContact* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_DeleteContact)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_DeleteContact* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_DeleteContactResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_DeleteContactResponse();
  virtual ~YouMeIM_Command_DeleteContactResponse();

  YouMeIM_Command_DeleteContactResponse(const YouMeIM_Command_DeleteContactResponse& from);

  inline YouMeIM_Command_DeleteContactResponse& operator=(const YouMeIM_Command_DeleteContactResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_DeleteContactResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_DeleteContactResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_DeleteContactResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_DeleteContactResponse* New() const { return New(NULL); }

  YouMeIM_Command_DeleteContactResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_DeleteContactResponse& from);
  void MergeFrom(const YouMeIM_Command_DeleteContactResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_DeleteContactResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_DeleteContactResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_DeleteContactResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_WasDeleted : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_WasDeleted();
  virtual ~YouMeIM_Command_WasDeleted();

  YouMeIM_Command_WasDeleted(const YouMeIM_Command_WasDeleted& from);

  inline YouMeIM_Command_WasDeleted& operator=(const YouMeIM_Command_WasDeleted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_WasDeleted& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_WasDeleted* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_WasDeleted* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_WasDeleted* New() const { return New(NULL); }

  YouMeIM_Command_WasDeleted* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_WasDeleted& from);
  void MergeFrom(const YouMeIM_Command_WasDeleted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_WasDeleted* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_WasDeleted)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_WasDeleted* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddContactToBlacklist : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddContactToBlacklist();
  virtual ~YouMeIM_Command_AddContactToBlacklist();

  YouMeIM_Command_AddContactToBlacklist(const YouMeIM_Command_AddContactToBlacklist& from);

  inline YouMeIM_Command_AddContactToBlacklist& operator=(const YouMeIM_Command_AddContactToBlacklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddContactToBlacklist& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddContactToBlacklist* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddContactToBlacklist* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddContactToBlacklist* New() const { return New(NULL); }

  YouMeIM_Command_AddContactToBlacklist* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddContactToBlacklist& from);
  void MergeFrom(const YouMeIM_Command_AddContactToBlacklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddContactToBlacklist* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddContactToBlacklist* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddContactToBlacklistResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddContactToBlacklistResponse();
  virtual ~YouMeIM_Command_AddContactToBlacklistResponse();

  YouMeIM_Command_AddContactToBlacklistResponse(const YouMeIM_Command_AddContactToBlacklistResponse& from);

  inline YouMeIM_Command_AddContactToBlacklistResponse& operator=(const YouMeIM_Command_AddContactToBlacklistResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddContactToBlacklistResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddContactToBlacklistResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddContactToBlacklistResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddContactToBlacklistResponse* New() const { return New(NULL); }

  YouMeIM_Command_AddContactToBlacklistResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddContactToBlacklistResponse& from);
  void MergeFrom(const YouMeIM_Command_AddContactToBlacklistResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddContactToBlacklistResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddContactToBlacklistResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AddedToBlacklist : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AddedToBlacklist();
  virtual ~YouMeIM_Command_AddedToBlacklist();

  YouMeIM_Command_AddedToBlacklist(const YouMeIM_Command_AddedToBlacklist& from);

  inline YouMeIM_Command_AddedToBlacklist& operator=(const YouMeIM_Command_AddedToBlacklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AddedToBlacklist& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AddedToBlacklist* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AddedToBlacklist* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AddedToBlacklist* New() const { return New(NULL); }

  YouMeIM_Command_AddedToBlacklist* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AddedToBlacklist& from);
  void MergeFrom(const YouMeIM_Command_AddedToBlacklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AddedToBlacklist* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AddedToBlacklist)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AddedToBlacklist* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_KickedFromBlacklist : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_KickedFromBlacklist();
  virtual ~YouMeIM_Command_KickedFromBlacklist();

  YouMeIM_Command_KickedFromBlacklist(const YouMeIM_Command_KickedFromBlacklist& from);

  inline YouMeIM_Command_KickedFromBlacklist& operator=(const YouMeIM_Command_KickedFromBlacklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_KickedFromBlacklist& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_KickedFromBlacklist* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_KickedFromBlacklist* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_KickedFromBlacklist* New() const { return New(NULL); }

  YouMeIM_Command_KickedFromBlacklist* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_KickedFromBlacklist& from);
  void MergeFrom(const YouMeIM_Command_KickedFromBlacklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_KickedFromBlacklist* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_KickedFromBlacklist* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_KickedFromBlacklistResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_KickedFromBlacklistResponse();
  virtual ~YouMeIM_Command_KickedFromBlacklistResponse();

  YouMeIM_Command_KickedFromBlacklistResponse(const YouMeIM_Command_KickedFromBlacklistResponse& from);

  inline YouMeIM_Command_KickedFromBlacklistResponse& operator=(const YouMeIM_Command_KickedFromBlacklistResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_KickedFromBlacklistResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_KickedFromBlacklistResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_KickedFromBlacklistResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_KickedFromBlacklistResponse* New() const { return New(NULL); }

  YouMeIM_Command_KickedFromBlacklistResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_KickedFromBlacklistResponse& from);
  void MergeFrom(const YouMeIM_Command_KickedFromBlacklistResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_KickedFromBlacklistResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_KickedFromBlacklistResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_WasKickedFromBlacklist : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_WasKickedFromBlacklist();
  virtual ~YouMeIM_Command_WasKickedFromBlacklist();

  YouMeIM_Command_WasKickedFromBlacklist(const YouMeIM_Command_WasKickedFromBlacklist& from);

  inline YouMeIM_Command_WasKickedFromBlacklist& operator=(const YouMeIM_Command_WasKickedFromBlacklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_WasKickedFromBlacklist& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_WasKickedFromBlacklist* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_WasKickedFromBlacklist* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_WasKickedFromBlacklist* New() const { return New(NULL); }

  YouMeIM_Command_WasKickedFromBlacklist* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_WasKickedFromBlacklist& from);
  void MergeFrom(const YouMeIM_Command_WasKickedFromBlacklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_WasKickedFromBlacklist* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_WasKickedFromBlacklist* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetContactInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetContactInfo();
  virtual ~YouMeIM_Command_GetContactInfo();

  YouMeIM_Command_GetContactInfo(const YouMeIM_Command_GetContactInfo& from);

  inline YouMeIM_Command_GetContactInfo& operator=(const YouMeIM_Command_GetContactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetContactInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetContactInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetContactInfo* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetContactInfo* New() const { return New(NULL); }

  YouMeIM_Command_GetContactInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetContactInfo& from);
  void MergeFrom(const YouMeIM_Command_GetContactInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetContactInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // repeated string YOUMEID = 2;
  int youmeid_size() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid(int index) const;
  ::std::string* mutable_youmeid(int index);
  void set_youmeid(int index, const ::std::string& value);
  void set_youmeid(int index, const char* value);
  void set_youmeid(int index, const char* value, size_t size);
  ::std::string* add_youmeid();
  void add_youmeid(const ::std::string& value);
  void add_youmeid(const char* value);
  void add_youmeid(const char* value, size_t size);
  const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>& youmeid() const;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string>* mutable_youmeid();

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetContactInfo)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string> youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetContactInfo* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetContactInfoResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetContactInfoResponse();
  virtual ~YouMeIM_Command_GetContactInfoResponse();

  YouMeIM_Command_GetContactInfoResponse(const YouMeIM_Command_GetContactInfoResponse& from);

  inline YouMeIM_Command_GetContactInfoResponse& operator=(const YouMeIM_Command_GetContactInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetContactInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetContactInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetContactInfoResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetContactInfoResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetContactInfoResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetContactInfoResponse& from);
  void MergeFrom(const YouMeIM_Command_GetContactInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetContactInfoResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // repeated .YouMeProtocol.ContactInfo contactInfoList = 2;
  int contactinfolist_size() const;
  void clear_contactinfolist();
  static const int kContactInfoListFieldNumber = 2;
  const ::YouMeIMProtocol::ContactInfo& contactinfolist(int index) const;
  ::YouMeIMProtocol::ContactInfo* mutable_contactinfolist(int index);
  ::YouMeIMProtocol::ContactInfo* add_contactinfolist();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
      mutable_contactinfolist();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
      contactinfolist() const;

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo > contactinfolist_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcontact_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcontact_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcontact_2eproto();
  friend void protobuf_ShutdownFile_im_5fcontact_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetContactInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetContactList

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetContactList::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetContactList::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetContactList::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetContactList::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetContactList::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactList.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetContactList::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactList.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetContactList::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetContactList::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetContactList.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetBlacklistList

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetBlacklistList::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetBlacklistList::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetBlacklistList::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetBlacklistList::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetBlacklistList::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetBlacklistList.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetBlacklistList::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetBlacklistList.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetBlacklistList::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetBlacklistList::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetBlacklistList.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetContactListResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetContactListResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetContactListResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetContactListResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetContactListResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetContactListResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactListResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetContactListResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactListResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetContactListResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetContactListResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetContactListResponse.msgHead)
}

// repeated .YouMeProtocol.ContactInfo contacts = 2;
inline int YouMeIM_Command_GetContactListResponse::contacts_size() const {
  return contacts_.size();
}
inline void YouMeIM_Command_GetContactListResponse::clear_contacts() {
  contacts_.Clear();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_GetContactListResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactListResponse.contacts)
  return contacts_.Get(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetContactListResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactListResponse.contacts)
  return contacts_.Mutable(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetContactListResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetContactListResponse.contacts)
  return contacts_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
YouMeIM_Command_GetContactListResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetContactListResponse.contacts)
  return &contacts_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
YouMeIM_Command_GetContactListResponse::contacts() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetContactListResponse.contacts)
  return contacts_;
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetBlacklistListResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetBlacklistListResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetBlacklistListResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetBlacklistListResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetBlacklistListResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetBlacklistListResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetBlacklistListResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetBlacklistListResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetBlacklistListResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.msgHead)
}

// repeated .YouMeProtocol.ContactInfo contacts = 2;
inline int YouMeIM_Command_GetBlacklistListResponse::contacts_size() const {
  return contacts_.size();
}
inline void YouMeIM_Command_GetBlacklistListResponse::clear_contacts() {
  contacts_.Clear();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_GetBlacklistListResponse::contacts(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.contacts)
  return contacts_.Get(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetBlacklistListResponse::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.contacts)
  return contacts_.Mutable(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetBlacklistListResponse::add_contacts() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.contacts)
  return contacts_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
YouMeIM_Command_GetBlacklistListResponse::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.contacts)
  return &contacts_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
YouMeIM_Command_GetBlacklistListResponse::contacts() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetBlacklistListResponse.contacts)
  return contacts_;
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddContact

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_AddContact::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddContact::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddContact::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddContact::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_AddContact::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContact.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AddContact::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContact.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AddContact::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContact::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContact.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AddContact::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddContact::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddContact::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddContact::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AddContact::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContact::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
}
inline void YouMeIM_Command_AddContact::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
}
inline void YouMeIM_Command_AddContact::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AddContact::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddContact::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContact::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContact.YOUMEID)
}

// optional string reason = 3;
inline bool YouMeIM_Command_AddContact::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_AddContact::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_AddContact::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_AddContact::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& YouMeIM_Command_AddContact::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContact.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContact::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContact.reason)
}
inline void YouMeIM_Command_AddContact::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddContact.reason)
}
inline void YouMeIM_Command_AddContact::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddContact.reason)
}
inline ::std::string* YouMeIM_Command_AddContact::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContact.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddContact::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContact::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContact.reason)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddContactRequest

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_AddContactRequest::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddContactRequest::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddContactRequest::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddContactRequest::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_AddContactRequest::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactRequest.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactRequest::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactRequest.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactRequest::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContactRequest::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactRequest.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AddContactRequest::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddContactRequest::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddContactRequest::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddContactRequest::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AddContactRequest::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactRequest::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
}
inline void YouMeIM_Command_AddContactRequest::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
}
inline void YouMeIM_Command_AddContactRequest::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AddContactRequest::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddContactRequest::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactRequest::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactRequest.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ReceiveContactInvited

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ReceiveContactInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ReceiveContactInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ReceiveContactInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ReceiveContactInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ReceiveContactInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ReceiveContactInvited::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.msgHead)
}

// required .YouMeProtocol.ContactInfo contactinfo = 2;
inline bool YouMeIM_Command_ReceiveContactInvited::has_contactinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ReceiveContactInvited::set_has_contactinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_has_contactinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_contactinfo() {
  if (contactinfo_ != NULL) contactinfo_->::YouMeIMProtocol::ContactInfo::Clear();
  clear_has_contactinfo();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_ReceiveContactInvited::contactinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.contactinfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return contactinfo_ != NULL ? *contactinfo_ : *default_instance().contactinfo_;
#else
  return contactinfo_ != NULL ? *contactinfo_ : *default_instance_->contactinfo_;
#endif
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_ReceiveContactInvited::mutable_contactinfo() {
  set_has_contactinfo();
  if (contactinfo_ == NULL) {
    contactinfo_ = new ::YouMeIMProtocol::ContactInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.contactinfo)
  return contactinfo_;
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_ReceiveContactInvited::release_contactinfo() {
  clear_has_contactinfo();
  ::YouMeIMProtocol::ContactInfo* temp = contactinfo_;
  contactinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ReceiveContactInvited::set_allocated_contactinfo(::YouMeIMProtocol::ContactInfo* contactinfo) {
  delete contactinfo_;
  contactinfo_ = contactinfo;
  if (contactinfo) {
    set_has_contactinfo();
  } else {
    clear_has_contactinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.contactinfo)
}

// optional string reason = 3;
inline bool YouMeIM_Command_ReceiveContactInvited::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ReceiveContactInvited::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ReceiveContactInvited::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& YouMeIM_Command_ReceiveContactInvited::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ReceiveContactInvited::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
}
inline void YouMeIM_Command_ReceiveContactInvited::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
}
inline void YouMeIM_Command_ReceiveContactInvited::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
}
inline ::std::string* YouMeIM_Command_ReceiveContactInvited::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ReceiveContactInvited::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ReceiveContactInvited::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_ReceiveContactInvited.reason)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AgreeContactInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_AgreeContactInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AgreeContactInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AgreeContactInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AgreeContactInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_AgreeContactInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeContactInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeContactInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AgreeContactInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AgreeContactInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AgreeContactInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AgreeContactInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AgreeContactInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AgreeContactInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeContactInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
}
inline void YouMeIM_Command_AgreeContactInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
}
inline void YouMeIM_Command_AgreeContactInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AgreeContactInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AgreeContactInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeContactInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeContactInvited.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_RefuseContactInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_RefuseContactInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_RefuseContactInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_RefuseContactInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseContactInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseContactInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_RefuseContactInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_RefuseContactInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_RefuseContactInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_RefuseContactInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseContactInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
}
inline void YouMeIM_Command_RefuseContactInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
}
inline void YouMeIM_Command_RefuseContactInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
}
inline ::std::string* YouMeIM_Command_RefuseContactInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RefuseContactInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseContactInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.YOUMEID)
}

// optional string reason = 3;
inline bool YouMeIM_Command_RefuseContactInvited::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_RefuseContactInvited::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_RefuseContactInvited::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& YouMeIM_Command_RefuseContactInvited::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseContactInvited::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
}
inline void YouMeIM_Command_RefuseContactInvited::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
}
inline void YouMeIM_Command_RefuseContactInvited::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
}
inline ::std::string* YouMeIM_Command_RefuseContactInvited::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RefuseContactInvited::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseContactInvited::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseContactInvited.reason)
}

// -------------------------------------------------------------------

// YouMeIM_Command_InvitedResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_InvitedResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_InvitedResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_InvitedResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_InvitedResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_InvitedResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_InvitedResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_InvitedResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_InvitedResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_InvitedResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_InvitedResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_InvitedResponse.msgHead)
}

// required .YouMeProtocol.YouMeIM_AddContactEvent evtType = 2;
inline bool YouMeIM_Command_InvitedResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_InvitedResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_InvitedResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_InvitedResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
inline ::YouMeIMProtocol::YouMeIM_AddContactEvent YouMeIM_Command_InvitedResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_InvitedResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_AddContactEvent >(evttype_);
}
inline void YouMeIM_Command_InvitedResponse::set_evttype(::YouMeIMProtocol::YouMeIM_AddContactEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_AddContactEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_InvitedResponse.evtType)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_InvitedResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_InvitedResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_InvitedResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_InvitedResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_InvitedResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_InvitedResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
}
inline void YouMeIM_Command_InvitedResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
}
inline void YouMeIM_Command_InvitedResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_InvitedResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_InvitedResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_InvitedResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_InvitedResponse.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddContactResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_AddContactResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddContactResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddContactResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddContactResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_AddContactResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContactResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactResponse.msgHead)
}

// required .YouMeProtocol.YouMeIM_AddContactEvent evtType = 2;
inline bool YouMeIM_Command_AddContactResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddContactResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddContactResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddContactResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
inline ::YouMeIMProtocol::YouMeIM_AddContactEvent YouMeIM_Command_AddContactResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_AddContactEvent >(evttype_);
}
inline void YouMeIM_Command_AddContactResponse::set_evttype(::YouMeIMProtocol::YouMeIM_AddContactEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_AddContactEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContactResponse.evtType)
}

// optional .YouMeProtocol.ContactInfo contactinfo = 3;
inline bool YouMeIM_Command_AddContactResponse::has_contactinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_AddContactResponse::set_has_contactinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_AddContactResponse::clear_has_contactinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_AddContactResponse::clear_contactinfo() {
  if (contactinfo_ != NULL) contactinfo_->::YouMeIMProtocol::ContactInfo::Clear();
  clear_has_contactinfo();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_AddContactResponse::contactinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactResponse.contactinfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return contactinfo_ != NULL ? *contactinfo_ : *default_instance().contactinfo_;
#else
  return contactinfo_ != NULL ? *contactinfo_ : *default_instance_->contactinfo_;
#endif
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_AddContactResponse::mutable_contactinfo() {
  set_has_contactinfo();
  if (contactinfo_ == NULL) {
    contactinfo_ = new ::YouMeIMProtocol::ContactInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactResponse.contactinfo)
  return contactinfo_;
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_AddContactResponse::release_contactinfo() {
  clear_has_contactinfo();
  ::YouMeIMProtocol::ContactInfo* temp = contactinfo_;
  contactinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContactResponse::set_allocated_contactinfo(::YouMeIMProtocol::ContactInfo* contactinfo) {
  delete contactinfo_;
  contactinfo_ = contactinfo;
  if (contactinfo) {
    set_has_contactinfo();
  } else {
    clear_has_contactinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactResponse.contactinfo)
}

// -------------------------------------------------------------------

// YouMeIM_Command_DeleteContact

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_DeleteContact::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_DeleteContact::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_DeleteContact::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_DeleteContact::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_DeleteContact::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DeleteContact.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DeleteContact::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DeleteContact.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DeleteContact::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_DeleteContact::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DeleteContact.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_DeleteContact::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_DeleteContact::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_DeleteContact::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_DeleteContact::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_DeleteContact::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DeleteContact::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
}
inline void YouMeIM_Command_DeleteContact::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
}
inline void YouMeIM_Command_DeleteContact::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
}
inline ::std::string* YouMeIM_Command_DeleteContact::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_DeleteContact::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DeleteContact::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DeleteContact.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_DeleteContactResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_DeleteContactResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_DeleteContactResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_DeleteContactResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_DeleteContactResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_DeleteContactResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DeleteContactResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DeleteContactResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_DeleteContactResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_DeleteContactResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_DeleteContactResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_DeleteContactResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_DeleteContactResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_DeleteContactResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DeleteContactResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
}
inline void YouMeIM_Command_DeleteContactResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
}
inline void YouMeIM_Command_DeleteContactResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_DeleteContactResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_DeleteContactResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DeleteContactResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DeleteContactResponse.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_WasDeleted

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_WasDeleted::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_WasDeleted::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_WasDeleted::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_WasDeleted::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_WasDeleted::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_WasDeleted.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_WasDeleted::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_WasDeleted.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_WasDeleted::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_WasDeleted::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_WasDeleted.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_WasDeleted::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_WasDeleted::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_WasDeleted::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_WasDeleted::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_WasDeleted::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_WasDeleted::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
}
inline void YouMeIM_Command_WasDeleted::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
}
inline void YouMeIM_Command_WasDeleted::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
}
inline ::std::string* YouMeIM_Command_WasDeleted::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_WasDeleted::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_WasDeleted::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_WasDeleted.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddContactToBlacklist

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_AddContactToBlacklist::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddContactToBlacklist::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddContactToBlacklist::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddContactToBlacklist::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_AddContactToBlacklist::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AddContactToBlacklist::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AddContactToBlacklist::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContactToBlacklist::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AddContactToBlacklist::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddContactToBlacklist::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddContactToBlacklist::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddContactToBlacklist::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AddContactToBlacklist::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactToBlacklist::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
}
inline void YouMeIM_Command_AddContactToBlacklist::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
}
inline void YouMeIM_Command_AddContactToBlacklist::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AddContactToBlacklist::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddContactToBlacklist::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactToBlacklist::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactToBlacklist.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddContactToBlacklistResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_AddContactToBlacklistResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_AddContactToBlacklistResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactToBlacklistResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddContactToBlacklistResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AddContactToBlacklistResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AddContactToBlacklistResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AddContactToBlacklistResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddContactToBlacklistResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddContactToBlacklistResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddContactToBlacklistResponse.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AddedToBlacklist

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_AddedToBlacklist::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AddedToBlacklist::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AddedToBlacklist::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AddedToBlacklist::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_AddedToBlacklist::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddedToBlacklist::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_AddedToBlacklist::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AddedToBlacklist::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_AddedToBlacklist::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AddedToBlacklist::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AddedToBlacklist::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AddedToBlacklist::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AddedToBlacklist::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddedToBlacklist::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
}
inline void YouMeIM_Command_AddedToBlacklist::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
}
inline void YouMeIM_Command_AddedToBlacklist::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AddedToBlacklist::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AddedToBlacklist::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AddedToBlacklist::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AddedToBlacklist.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_KickedFromBlacklist

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_KickedFromBlacklist::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_KickedFromBlacklist::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_KickedFromBlacklist::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_KickedFromBlacklist::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_KickedFromBlacklist::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickedFromBlacklist::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickedFromBlacklist::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_KickedFromBlacklist::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_KickedFromBlacklist::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_KickedFromBlacklist::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_KickedFromBlacklist::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_KickedFromBlacklist::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_KickedFromBlacklist::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickedFromBlacklist::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
}
inline void YouMeIM_Command_KickedFromBlacklist::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
}
inline void YouMeIM_Command_KickedFromBlacklist::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
}
inline ::std::string* YouMeIM_Command_KickedFromBlacklist::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickedFromBlacklist::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickedFromBlacklist::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickedFromBlacklist.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_KickedFromBlacklistResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_KickedFromBlacklistResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_KickedFromBlacklistResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickedFromBlacklistResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickedFromBlacklistResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_KickedFromBlacklistResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_KickedFromBlacklistResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_KickedFromBlacklistResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickedFromBlacklistResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickedFromBlacklistResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickedFromBlacklistResponse.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_WasKickedFromBlacklist

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_WasKickedFromBlacklist::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_WasKickedFromBlacklist::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_WasKickedFromBlacklist::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_WasKickedFromBlacklist::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_WasKickedFromBlacklist::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_WasKickedFromBlacklist::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_WasKickedFromBlacklist::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
}
inline ::std::string* YouMeIM_Command_WasKickedFromBlacklist::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_WasKickedFromBlacklist::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_WasKickedFromBlacklist::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_WasKickedFromBlacklist.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetContactInfo

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetContactInfo::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetContactInfo::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetContactInfo::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetContactInfo::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetContactInfo::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactInfo.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetContactInfo::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactInfo.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetContactInfo::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetContactInfo::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetContactInfo.msgHead)
}

// repeated string YOUMEID = 2;
inline int YouMeIM_Command_GetContactInfo::youmeid_size() const {
  return youmeid_.size();
}
inline void YouMeIM_Command_GetContactInfo::clear_youmeid() {
  youmeid_.Clear();
}
inline const ::std::string& YouMeIM_Command_GetContactInfo::youmeid(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
  return youmeid_.Get(index);
}
inline ::std::string* YouMeIM_Command_GetContactInfo::mutable_youmeid(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
  return youmeid_.Mutable(index);
}
inline void YouMeIM_Command_GetContactInfo::set_youmeid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
  youmeid_.Mutable(index)->assign(value);
}
inline void YouMeIM_Command_GetContactInfo::set_youmeid(int index, const char* value) {
  youmeid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
}
inline void YouMeIM_Command_GetContactInfo::set_youmeid(int index, const char* value, size_t size) {
  youmeid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
}
inline ::std::string* YouMeIM_Command_GetContactInfo::add_youmeid() {
  return youmeid_.Add();
}
inline void YouMeIM_Command_GetContactInfo::add_youmeid(const ::std::string& value) {
  youmeid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
}
inline void YouMeIM_Command_GetContactInfo::add_youmeid(const char* value) {
  youmeid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
}
inline void YouMeIM_Command_GetContactInfo::add_youmeid(const char* value, size_t size) {
  youmeid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>&
YouMeIM_Command_GetContactInfo::youmeid() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
  return youmeid_;
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::std::string>*
YouMeIM_Command_GetContactInfo::mutable_youmeid() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetContactInfo.YOUMEID)
  return &youmeid_;
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetContactInfoResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetContactInfoResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetContactInfoResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetContactInfoResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetContactInfoResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetContactInfoResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetContactInfoResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetContactInfoResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetContactInfoResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.msgHead)
}

// repeated .YouMeProtocol.ContactInfo contactInfoList = 2;
inline int YouMeIM_Command_GetContactInfoResponse::contactinfolist_size() const {
  return contactinfolist_.size();
}
inline void YouMeIM_Command_GetContactInfoResponse::clear_contactinfolist() {
  contactinfolist_.Clear();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_GetContactInfoResponse::contactinfolist(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.contactInfoList)
  return contactinfolist_.Get(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetContactInfoResponse::mutable_contactinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.contactInfoList)
  return contactinfolist_.Mutable(index);
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_GetContactInfoResponse::add_contactinfolist() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.contactInfoList)
  return contactinfolist_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >*
YouMeIM_Command_GetContactInfoResponse::mutable_contactinfolist() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.contactInfoList)
  return &contactinfolist_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::ContactInfo >&
YouMeIM_Command_GetContactInfoResponse::contactinfolist() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetContactInfoResponse.contactInfoList)
  return contactinfolist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeProtocol

#ifndef SWIG
namespace youmecommon {
namespace protobuf {

template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_AddContactEvent> : ::youmecommon::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_im_5fcontact_2eproto__INCLUDED
