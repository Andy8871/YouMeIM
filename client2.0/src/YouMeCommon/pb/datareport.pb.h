// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datareport.proto

#ifndef PROTOBUF_datareport_2eproto__INCLUDED
#define PROTOBUF_datareport_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace YouMeCommonProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_datareport_2eproto();
void protobuf_AssignDesc_datareport_2eproto();
void protobuf_ShutdownFile_datareport_2eproto();

class DataReportRequest;
class DataReportResponse;

// ===================================================================

class DataReportRequest : public ::youmecommon::protobuf::MessageLite {
 public:
  DataReportRequest();
  virtual ~DataReportRequest();

  DataReportRequest(const DataReportRequest& from);

  inline DataReportRequest& operator=(const DataReportRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DataReportRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DataReportRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DataReportRequest* other);

  // implements Message ----------------------------------------------

  inline DataReportRequest* New() const { return New(NULL); }

  DataReportRequest* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const DataReportRequest& from);
  void MergeFrom(const DataReportRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataReportRequest* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeCommonProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeCommonProtocol::PacketHead& msghead() const;
  ::YouMeCommonProtocol::PacketHead* mutable_msghead();
  ::YouMeCommonProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeCommonProtocol::PacketHead* msghead);

  // repeated .YouMeCommonProtocol.NameValue contents = 2;
  int contents_size() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::YouMeCommonProtocol::NameValue& contents(int index) const;
  ::YouMeCommonProtocol::NameValue* mutable_contents(int index);
  ::YouMeCommonProtocol::NameValue* add_contents();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeCommonProtocol::NameValue >*
      mutable_contents();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeCommonProtocol::NameValue >&
      contents() const;

  // optional int64 reportTime = 3;
  bool has_reporttime() const;
  void clear_reporttime();
  static const int kReportTimeFieldNumber = 3;
  ::youmecommon::protobuf::int64 reporttime() const;
  void set_reporttime(::youmecommon::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:YouMeCommonProtocol.DataReportRequest)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_reporttime();
  inline void clear_has_reporttime();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeCommonProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeCommonProtocol::NameValue > contents_;
  ::youmecommon::protobuf::int64 reporttime_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_datareport_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_datareport_2eproto();
  #endif
  friend void protobuf_AssignDesc_datareport_2eproto();
  friend void protobuf_ShutdownFile_datareport_2eproto();

  void InitAsDefaultInstance();
  static DataReportRequest* default_instance_;
};
// -------------------------------------------------------------------

class DataReportResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  DataReportResponse();
  virtual ~DataReportResponse();

  DataReportResponse(const DataReportResponse& from);

  inline DataReportResponse& operator=(const DataReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const DataReportResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DataReportResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DataReportResponse* other);

  // implements Message ----------------------------------------------

  inline DataReportResponse* New() const { return New(NULL); }

  DataReportResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const DataReportResponse& from);
  void MergeFrom(const DataReportResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataReportResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeCommonProtocol.ServerPacketHead serverHead = 1;
  bool has_serverhead() const;
  void clear_serverhead();
  static const int kServerHeadFieldNumber = 1;
  const ::YouMeCommonProtocol::ServerPacketHead& serverhead() const;
  ::YouMeCommonProtocol::ServerPacketHead* mutable_serverhead();
  ::YouMeCommonProtocol::ServerPacketHead* release_serverhead();
  void set_allocated_serverhead(::YouMeCommonProtocol::ServerPacketHead* serverhead);

  // @@protoc_insertion_point(class_scope:YouMeCommonProtocol.DataReportResponse)
 private:
  inline void set_has_serverhead();
  inline void clear_has_serverhead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeCommonProtocol::ServerPacketHead* serverhead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_datareport_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_datareport_2eproto();
  #endif
  friend void protobuf_AssignDesc_datareport_2eproto();
  friend void protobuf_ShutdownFile_datareport_2eproto();

  void InitAsDefaultInstance();
  static DataReportResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DataReportRequest

// required .YouMeCommonProtocol.PacketHead msgHead = 1;
inline bool DataReportRequest::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataReportRequest::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataReportRequest::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataReportRequest::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeCommonProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeCommonProtocol::PacketHead& DataReportRequest::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeCommonProtocol.DataReportRequest.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeCommonProtocol::PacketHead* DataReportRequest::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeCommonProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeCommonProtocol.DataReportRequest.msgHead)
  return msghead_;
}
inline ::YouMeCommonProtocol::PacketHead* DataReportRequest::release_msghead() {
  clear_has_msghead();
  ::YouMeCommonProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void DataReportRequest::set_allocated_msghead(::YouMeCommonProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeCommonProtocol.DataReportRequest.msgHead)
}

// repeated .YouMeCommonProtocol.NameValue contents = 2;
inline int DataReportRequest::contents_size() const {
  return contents_.size();
}
inline void DataReportRequest::clear_contents() {
  contents_.Clear();
}
inline const ::YouMeCommonProtocol::NameValue& DataReportRequest::contents(int index) const {
  // @@protoc_insertion_point(field_get:YouMeCommonProtocol.DataReportRequest.contents)
  return contents_.Get(index);
}
inline ::YouMeCommonProtocol::NameValue* DataReportRequest::mutable_contents(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeCommonProtocol.DataReportRequest.contents)
  return contents_.Mutable(index);
}
inline ::YouMeCommonProtocol::NameValue* DataReportRequest::add_contents() {
  // @@protoc_insertion_point(field_add:YouMeCommonProtocol.DataReportRequest.contents)
  return contents_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeCommonProtocol::NameValue >*
DataReportRequest::mutable_contents() {
  // @@protoc_insertion_point(field_mutable_list:YouMeCommonProtocol.DataReportRequest.contents)
  return &contents_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeCommonProtocol::NameValue >&
DataReportRequest::contents() const {
  // @@protoc_insertion_point(field_list:YouMeCommonProtocol.DataReportRequest.contents)
  return contents_;
}

// optional int64 reportTime = 3;
inline bool DataReportRequest::has_reporttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataReportRequest::set_has_reporttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataReportRequest::clear_has_reporttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataReportRequest::clear_reporttime() {
  reporttime_ = GOOGLE_LONGLONG(0);
  clear_has_reporttime();
}
inline ::youmecommon::protobuf::int64 DataReportRequest::reporttime() const {
  // @@protoc_insertion_point(field_get:YouMeCommonProtocol.DataReportRequest.reportTime)
  return reporttime_;
}
inline void DataReportRequest::set_reporttime(::youmecommon::protobuf::int64 value) {
  set_has_reporttime();
  reporttime_ = value;
  // @@protoc_insertion_point(field_set:YouMeCommonProtocol.DataReportRequest.reportTime)
}

// -------------------------------------------------------------------

// DataReportResponse

// required .YouMeCommonProtocol.ServerPacketHead serverHead = 1;
inline bool DataReportResponse::has_serverhead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataReportResponse::set_has_serverhead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataReportResponse::clear_has_serverhead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataReportResponse::clear_serverhead() {
  if (serverhead_ != NULL) serverhead_->::YouMeCommonProtocol::ServerPacketHead::Clear();
  clear_has_serverhead();
}
inline const ::YouMeCommonProtocol::ServerPacketHead& DataReportResponse::serverhead() const {
  // @@protoc_insertion_point(field_get:YouMeCommonProtocol.DataReportResponse.serverHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return serverhead_ != NULL ? *serverhead_ : *default_instance().serverhead_;
#else
  return serverhead_ != NULL ? *serverhead_ : *default_instance_->serverhead_;
#endif
}
inline ::YouMeCommonProtocol::ServerPacketHead* DataReportResponse::mutable_serverhead() {
  set_has_serverhead();
  if (serverhead_ == NULL) {
    serverhead_ = new ::YouMeCommonProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeCommonProtocol.DataReportResponse.serverHead)
  return serverhead_;
}
inline ::YouMeCommonProtocol::ServerPacketHead* DataReportResponse::release_serverhead() {
  clear_has_serverhead();
  ::YouMeCommonProtocol::ServerPacketHead* temp = serverhead_;
  serverhead_ = NULL;
  return temp;
}
inline void DataReportResponse::set_allocated_serverhead(::YouMeCommonProtocol::ServerPacketHead* serverhead) {
  delete serverhead_;
  serverhead_ = serverhead;
  if (serverhead) {
    set_has_serverhead();
  } else {
    clear_has_serverhead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeCommonProtocol.DataReportResponse.serverHead)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeCommonProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datareport_2eproto__INCLUDED
