// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_common.proto

#ifndef PROTOBUF_im_5fcommon_2eproto__INCLUDED
#define PROTOBUF_im_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_im_5fcommon_2eproto();
void protobuf_AssignDesc_im_5fcommon_2eproto();
void protobuf_ShutdownFile_im_5fcommon_2eproto();

class ContactInfo;
class NameValue;
class PacketHead;
class ReqHead;
class ServerPacketHead;
class ServerReqHead;
class YouMeIM_Command_ClientToServerAck;
class YouMeIM_Command_ContactLogin;
class YouMeIM_Command_ContactLogout;
class YouMeIM_Command_DisConnectNotify;
class YouMeIM_Command_Heart;
class YouMeIM_Command_HeartResponse;
class YouMeIM_Command_Login;
class YouMeIM_Command_LoginResponse;
class YouMeIM_Command_Logout;
class YouMeIM_Command_LogoutResponse;
class YouMeIM_Command_PackageAck;

enum NAME_TYPE {
  NAME_UNKNOW = 0,
  NAME_INT32 = 1,
  NAME_UIN32 = 2,
  NAME_INT64 = 3,
  NAME_UINT64 = 4,
  NAME_STRING = 5,
  NAME_BYTES = 6,
  NAME_BOOL = 7
};
bool NAME_TYPE_IsValid(int value);
const NAME_TYPE NAME_TYPE_MIN = NAME_UNKNOW;
const NAME_TYPE NAME_TYPE_MAX = NAME_BOOL;
const int NAME_TYPE_ARRAYSIZE = NAME_TYPE_MAX + 1;

enum Device_Platform {
  Platform_Unknow = 0,
  Platform_Android = 1,
  Platform_IOS = 2,
  Platform_Windows = 3,
  Platform_OSX = 4,
  Platform_Linux = 5
};
bool Device_Platform_IsValid(int value);
const Device_Platform Device_Platform_MIN = Platform_Unknow;
const Device_Platform Device_Platform_MAX = Platform_Linux;
const int Device_Platform_ARRAYSIZE = Device_Platform_MAX + 1;

enum NetworkType {
  NetworkType_Unknow = 0,
  NetworkType_3G = 1,
  NetworkType_Wifi = 2
};
bool NetworkType_IsValid(int value);
const NetworkType NetworkType_MIN = NetworkType_Unknow;
const NetworkType NetworkType_MAX = NetworkType_Wifi;
const int NetworkType_ARRAYSIZE = NetworkType_MAX + 1;

enum Command_TYPE {
  Command_Unknow = 0,
  Command_Login = 1,
  Command_LogOut = 2,
  Command_LoginResponse = 3,
  Command_LogOutResponse = 4,
  Command_ContactLogin = 5,
  Command_ContactLogOut = 6,
  Command_Heart = 7,
  Command_HeartResponse = 8,
  Command_PackageAck = 9,
  Command_SessionExpire = 10,
  Command_ClientToServerPackageAck = 11,
  Command_Redirect = 12,
  Command_RedirectResponse = 13,
  Command_GetContactList = 1000,
  Command_GetContactListResponse = 1001,
  Command_GetBlacklistList = 1002,
  Command_GetBlacklistListResponse = 1003,
  Command_AddContact = 1004,
  Command_AddContactRequest = 1005,
  Command_ReceiveInvitedApplication = 1006,
  Command_AgreeContactInvited = 1007,
  Command_RefuseContactInvited = 1008,
  Command_InvitedResponse = 1009,
  Command_AddContactResponse = 1010,
  Command_DeleteContact = 1011,
  Command_DeleteContactResponse = 1012,
  Command_WasDeleted = 1013,
  Command_AddToBlacklist = 1014,
  Command_AddToBlacklistResponse = 1015,
  Command_AddedToBlacklist = 1016,
  Command_KickoutFromBlacklist = 1017,
  Command_KickoutFromBlacklistResponse = 1018,
  Command_KickoutedFromBlacklist = 1019,
  Command_GetContactInfo = 1020,
  Command_GetContactInfoResponse = 1021,
  Command_GetGroupInfo = 2000,
  Command_GetGroupInfoResponse = 2001,
  Command_GetAllGroup = 2002,
  Command_GetAllGroupResponse = 2003,
  Command_CreateGroup = 2004,
  Command_CreateGroupResponse = 2005,
  Command_DestroyGroup = 2006,
  Command_DestroyGroupResponse = 2007,
  Command_GroupDestroyed = 2008,
  Command_JoinGroup = 2009,
  Command_JoinGroupRequest = 2010,
  Command_JoinGroupResponse = 2011,
  Command_OtherJoinGroup = 2012,
  Command_LeaveGroup = 2013,
  Command_LeaveGroupResponse = 2014,
  Command_OtherLeaveGroup = 2015,
  Command_KickoutMember = 2016,
  Command_KickoutMemberResponse = 2017,
  Command_OtherKickoutedFromGroup = 2018,
  Command_GetGroupMembers = 2019,
  Command_GetGroupMembersResponse = 2020,
  Command_ModifyGroupInfo = 2021,
  Command_ModifyGroupInfoResponse = 2022,
  Command_GroupInfoModifyed = 2023,
  Command_AgreeGroupInvited = 2024,
  Command_RefuseGroupInvited = 2025,
  Command_GroupInvitedResponse = 2026,
  Command_ModifyMemberInfo = 2027,
  Command_ModifyMemberInfoResponse = 2028,
  Command_MemberInfoModifyed = 2029,
  Command_ReceiveGroupInvitedApplication = 2030,
  Commnad_Chat_Custom = 3000,
  Commnad_Chat_Text = 3001,
  Commnad_Chat_Emoji = 3002,
  Commnad_Chat_File = 3003,
  Commnad_SendMessage = 3004,
  Commnad_Chat_Voice = 3005,
  Commnad_Chat_Custom_Server = 3101,
  Commnad_Chat_Text_Server = 3102,
  Commnad_Chat_Emoji_Server = 3103,
  Commnad_Chat_File_Server = 3104,
  Commnad_RecvMessage = 3105,
  Commnad_Chat_Voice_Server = 3106,
  Commnad_GetMessage_Notify = 3107,
  Command_GetOfflineMessageResponse = 3205,
  Command_GetOfflineMessage = 3206,
  Command_MessageToServerACK = 3207,
  Command_GetUploadtoken = 3208,
  Command_GetUploadtokenResponse = 3209,
  Command_GetDownloadtoken = 3210,
  Command_GetDownloadtokenResponse = 3211,
  Command_Download = 3212,
  Command_ServerForwardMsg = 10001,
  Command_ServerForwardGroupMsg = 10002,
  Command_ServerForwardRommMsg = 10003,
  Command_QueryServerRunStatus = 10100,
  Command_QueryServerRunStatusResponse = 10101
};
bool Command_TYPE_IsValid(int value);
const Command_TYPE Command_TYPE_MIN = Command_Unknow;
const Command_TYPE Command_TYPE_MAX = Command_QueryServerRunStatusResponse;
const int Command_TYPE_ARRAYSIZE = Command_TYPE_MAX + 1;

enum ConnectEventType {
  EventType_Unknow = 0,
  EventType_AcountDeleted = 1,
  EventType_AcountKickout = 2
};
bool ConnectEventType_IsValid(int value);
const ConnectEventType ConnectEventType_MIN = EventType_Unknow;
const ConnectEventType ConnectEventType_MAX = EventType_AcountKickout;
const int ConnectEventType_ARRAYSIZE = ConnectEventType_MAX + 1;

// ===================================================================

class NameValue : public ::youmecommon::protobuf::MessageLite {
 public:
  NameValue();
  virtual ~NameValue();

  NameValue(const NameValue& from);

  inline NameValue& operator=(const NameValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const NameValue& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NameValue* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NameValue* other);

  // implements Message ----------------------------------------------

  inline NameValue* New() const { return New(NULL); }

  NameValue* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const NameValue& from);
  void MergeFrom(const NameValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NameValue* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required .YouMeIMProtocol.NAME_TYPE type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::YouMeIMProtocol::NAME_TYPE type() const;
  void set_type(::YouMeIMProtocol::NAME_TYPE value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.NameValue)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr name_;
  ::youmecommon::protobuf::internal::ArenaStringPtr value_;
  int type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static NameValue* default_instance_;
};
// -------------------------------------------------------------------

class ContactInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  ContactInfo();
  virtual ~ContactInfo();

  ContactInfo(const ContactInfo& from);

  inline ContactInfo& operator=(const ContactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ContactInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ContactInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ContactInfo* other);

  // implements Message ----------------------------------------------

  inline ContactInfo* New() const { return New(NULL); }

  ContactInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const ContactInfo& from);
  void MergeFrom(const ContactInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContactInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string YOUMEID = 1;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 1;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::youmecommon::protobuf::int32 status() const;
  void set_status(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.ContactInfo)
 private:
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static ContactInfo* default_instance_;
};
// -------------------------------------------------------------------

class PacketHead : public ::youmecommon::protobuf::MessageLite {
 public:
  PacketHead();
  virtual ~PacketHead();

  PacketHead(const PacketHead& from);

  inline PacketHead& operator=(const PacketHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PacketHead& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PacketHead* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PacketHead* other);

  // implements Message ----------------------------------------------

  inline PacketHead* New() const { return New(NULL); }

  PacketHead* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const PacketHead& from);
  void MergeFrom(const PacketHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PacketHead* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.Command_TYPE msgtype = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::YouMeIMProtocol::Command_TYPE msgtype() const;
  void set_msgtype(::YouMeIMProtocol::Command_TYPE value);

  // required int32 msgversion = 2;
  bool has_msgversion() const;
  void clear_msgversion();
  static const int kMsgversionFieldNumber = 2;
  ::youmecommon::protobuf::int32 msgversion() const;
  void set_msgversion(::youmecommon::protobuf::int32 value);

  // required .YouMeIMProtocol.Device_Platform platform = 3;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  ::YouMeIMProtocol::Device_Platform platform() const;
  void set_platform(::YouMeIMProtocol::Device_Platform value);

  // required string Brand = 4;
  bool has_brand() const;
  void clear_brand();
  static const int kBrandFieldNumber = 4;
  const ::std::string& brand() const;
  void set_brand(const ::std::string& value);
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  ::std::string* mutable_brand();
  ::std::string* release_brand();
  void set_allocated_brand(::std::string* brand);

  // required string SysVersion = 5;
  bool has_sysversion() const;
  void clear_sysversion();
  static const int kSysVersionFieldNumber = 5;
  const ::std::string& sysversion() const;
  void set_sysversion(const ::std::string& value);
  void set_sysversion(const char* value);
  void set_sysversion(const char* value, size_t size);
  ::std::string* mutable_sysversion();
  ::std::string* release_sysversion();
  void set_allocated_sysversion(::std::string* sysversion);

  // required int32 YmSdkVersion = 6;
  bool has_ymsdkversion() const;
  void clear_ymsdkversion();
  static const int kYmSdkVersionFieldNumber = 6;
  ::youmecommon::protobuf::int32 ymsdkversion() const;
  void set_ymsdkversion(::youmecommon::protobuf::int32 value);

  // required string CpuArch = 7;
  bool has_cpuarch() const;
  void clear_cpuarch();
  static const int kCpuArchFieldNumber = 7;
  const ::std::string& cpuarch() const;
  void set_cpuarch(const ::std::string& value);
  void set_cpuarch(const char* value);
  void set_cpuarch(const char* value, size_t size);
  ::std::string* mutable_cpuarch();
  ::std::string* release_cpuarch();
  void set_allocated_cpuarch(::std::string* cpuarch);

  // required string PackageName = 8;
  bool has_packagename() const;
  void clear_packagename();
  static const int kPackageNameFieldNumber = 8;
  const ::std::string& packagename() const;
  void set_packagename(const ::std::string& value);
  void set_packagename(const char* value);
  void set_packagename(const char* value, size_t size);
  ::std::string* mutable_packagename();
  ::std::string* release_packagename();
  void set_allocated_packagename(::std::string* packagename);

  // required string Identify = 9;
  bool has_identify() const;
  void clear_identify();
  static const int kIdentifyFieldNumber = 9;
  const ::std::string& identify() const;
  void set_identify(const ::std::string& value);
  void set_identify(const char* value);
  void set_identify(const char* value, size_t size);
  ::std::string* mutable_identify();
  ::std::string* release_identify();
  void set_allocated_identify(::std::string* identify);

  // required string AppKey = 10;
  bool has_appkey() const;
  void clear_appkey();
  static const int kAppKeyFieldNumber = 10;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // required string SDKName = 11;
  bool has_sdkname() const;
  void clear_sdkname();
  static const int kSDKNameFieldNumber = 11;
  const ::std::string& sdkname() const;
  void set_sdkname(const ::std::string& value);
  void set_sdkname(const char* value);
  void set_sdkname(const char* value, size_t size);
  ::std::string* mutable_sdkname();
  ::std::string* release_sdkname();
  void set_allocated_sdkname(::std::string* sdkname);

  // required string Model = 12;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 12;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // required .YouMeIMProtocol.NetworkType NetworkType = 13;
  bool has_networktype() const;
  void clear_networktype();
  static const int kNetworkTypeFieldNumber = 13;
  ::YouMeIMProtocol::NetworkType networktype() const;
  void set_networktype(::YouMeIMProtocol::NetworkType value);

  // required string CPUChip = 14;
  bool has_cpuchip() const;
  void clear_cpuchip();
  static const int kCPUChipFieldNumber = 14;
  const ::std::string& cpuchip() const;
  void set_cpuchip(const ::std::string& value);
  void set_cpuchip(const char* value);
  void set_cpuchip(const char* value, size_t size);
  ::std::string* mutable_cpuchip();
  ::std::string* release_cpuchip();
  void set_allocated_cpuchip(::std::string* cpuchip);

  // required int64 msgSerialNum = 15;
  bool has_msgserialnum() const;
  void clear_msgserialnum();
  static const int kMsgSerialNumFieldNumber = 15;
  ::youmecommon::protobuf::int64 msgserialnum() const;
  void set_msgserialnum(::youmecommon::protobuf::int64 value);

  // required string SessionID = 16;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 16;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // required string YOUMEID = 17;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 17;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // optional int64 localtime = 18;
  bool has_localtime() const;
  void clear_localtime();
  static const int kLocaltimeFieldNumber = 18;
  ::youmecommon::protobuf::int64 localtime() const;
  void set_localtime(::youmecommon::protobuf::int64 value);

  // optional int64 serverSerialNum = 19;
  bool has_serverserialnum() const;
  void clear_serverserialnum();
  static const int kServerSerialNumFieldNumber = 19;
  ::youmecommon::protobuf::int64 serverserialnum() const;
  void set_serverserialnum(::youmecommon::protobuf::int64 value);

  // repeated .YouMeIMProtocol.NameValue params = 20;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 20;
  const ::YouMeIMProtocol::NameValue& params(int index) const;
  ::YouMeIMProtocol::NameValue* mutable_params(int index);
  ::YouMeIMProtocol::NameValue* add_params();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
      mutable_params();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
      params() const;

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.PacketHead)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_msgversion();
  inline void clear_has_msgversion();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_sysversion();
  inline void clear_has_sysversion();
  inline void set_has_ymsdkversion();
  inline void clear_has_ymsdkversion();
  inline void set_has_cpuarch();
  inline void clear_has_cpuarch();
  inline void set_has_packagename();
  inline void clear_has_packagename();
  inline void set_has_identify();
  inline void clear_has_identify();
  inline void set_has_appkey();
  inline void clear_has_appkey();
  inline void set_has_sdkname();
  inline void clear_has_sdkname();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_networktype();
  inline void clear_has_networktype();
  inline void set_has_cpuchip();
  inline void clear_has_cpuchip();
  inline void set_has_msgserialnum();
  inline void clear_has_msgserialnum();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_localtime();
  inline void clear_has_localtime();
  inline void set_has_serverserialnum();
  inline void clear_has_serverserialnum();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::youmecommon::protobuf::int32 msgversion_;
  ::youmecommon::protobuf::internal::ArenaStringPtr brand_;
  int platform_;
  ::youmecommon::protobuf::int32 ymsdkversion_;
  ::youmecommon::protobuf::internal::ArenaStringPtr sysversion_;
  ::youmecommon::protobuf::internal::ArenaStringPtr cpuarch_;
  ::youmecommon::protobuf::internal::ArenaStringPtr packagename_;
  ::youmecommon::protobuf::internal::ArenaStringPtr identify_;
  ::youmecommon::protobuf::internal::ArenaStringPtr appkey_;
  ::youmecommon::protobuf::internal::ArenaStringPtr sdkname_;
  ::youmecommon::protobuf::internal::ArenaStringPtr model_;
  ::youmecommon::protobuf::internal::ArenaStringPtr cpuchip_;
  ::youmecommon::protobuf::int64 msgserialnum_;
  ::youmecommon::protobuf::internal::ArenaStringPtr sessionid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::int64 localtime_;
  ::youmecommon::protobuf::int64 serverserialnum_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue > params_;
  int networktype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PacketHead* default_instance_;
};
// -------------------------------------------------------------------

class ReqHead : public ::youmecommon::protobuf::MessageLite {
 public:
  ReqHead();
  virtual ~ReqHead();

  ReqHead(const ReqHead& from);

  inline ReqHead& operator=(const ReqHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ReqHead& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReqHead* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReqHead* other);

  // implements Message ----------------------------------------------

  inline ReqHead* New() const { return New(NULL); }

  ReqHead* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const ReqHead& from);
  void MergeFrom(const ReqHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqHead* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& head() const;
  ::YouMeIMProtocol::PacketHead* mutable_head();
  ::YouMeIMProtocol::PacketHead* release_head();
  void set_allocated_head(::YouMeIMProtocol::PacketHead* head);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.ReqHead)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* head_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static ReqHead* default_instance_;
};
// -------------------------------------------------------------------

class ServerPacketHead : public ::youmecommon::protobuf::MessageLite {
 public:
  ServerPacketHead();
  virtual ~ServerPacketHead();

  ServerPacketHead(const ServerPacketHead& from);

  inline ServerPacketHead& operator=(const ServerPacketHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ServerPacketHead& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ServerPacketHead* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ServerPacketHead* other);

  // implements Message ----------------------------------------------

  inline ServerPacketHead* New() const { return New(NULL); }

  ServerPacketHead* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const ServerPacketHead& from);
  void MergeFrom(const ServerPacketHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerPacketHead* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.Command_TYPE msgtype = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::YouMeIMProtocol::Command_TYPE msgtype() const;
  void set_msgtype(::YouMeIMProtocol::Command_TYPE value);

  // required int32 msgversion = 2;
  bool has_msgversion() const;
  void clear_msgversion();
  static const int kMsgversionFieldNumber = 2;
  ::youmecommon::protobuf::int32 msgversion() const;
  void set_msgversion(::youmecommon::protobuf::int32 value);

  // required int64 msgSerialNum = 3;
  bool has_msgserialnum() const;
  void clear_msgserialnum();
  static const int kMsgSerialNumFieldNumber = 3;
  ::youmecommon::protobuf::int64 msgserialnum() const;
  void set_msgserialnum(::youmecommon::protobuf::int64 value);

  // required int32 code = 4;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  ::youmecommon::protobuf::int32 code() const;
  void set_code(::youmecommon::protobuf::int32 value);

  // optional int64 clientSerialNum = 5;
  bool has_clientserialnum() const;
  void clear_clientserialnum();
  static const int kClientSerialNumFieldNumber = 5;
  ::youmecommon::protobuf::int64 clientserialnum() const;
  void set_clientserialnum(::youmecommon::protobuf::int64 value);

  // optional int64 servertime = 6;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServertimeFieldNumber = 6;
  ::youmecommon::protobuf::int64 servertime() const;
  void set_servertime(::youmecommon::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.ServerPacketHead)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_msgversion();
  inline void clear_has_msgversion();
  inline void set_has_msgserialnum();
  inline void clear_has_msgserialnum();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_clientserialnum();
  inline void clear_has_clientserialnum();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::youmecommon::protobuf::int32 msgversion_;
  ::youmecommon::protobuf::int64 msgserialnum_;
  ::youmecommon::protobuf::int64 clientserialnum_;
  ::youmecommon::protobuf::int64 servertime_;
  ::youmecommon::protobuf::int32 code_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static ServerPacketHead* default_instance_;
};
// -------------------------------------------------------------------

class ServerReqHead : public ::youmecommon::protobuf::MessageLite {
 public:
  ServerReqHead();
  virtual ~ServerReqHead();

  ServerReqHead(const ServerReqHead& from);

  inline ServerReqHead& operator=(const ServerReqHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const ServerReqHead& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ServerReqHead* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ServerReqHead* other);

  // implements Message ----------------------------------------------

  inline ServerReqHead* New() const { return New(NULL); }

  ServerReqHead* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const ServerReqHead& from);
  void MergeFrom(const ServerReqHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerReqHead* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& head() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_head();
  ::YouMeIMProtocol::ServerPacketHead* release_head();
  void set_allocated_head(::YouMeIMProtocol::ServerPacketHead* head);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.ServerReqHead)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* head_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static ServerReqHead* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_Login : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_Login();
  virtual ~YouMeIM_Command_Login();

  YouMeIM_Command_Login(const YouMeIM_Command_Login& from);

  inline YouMeIM_Command_Login& operator=(const YouMeIM_Command_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_Login& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_Login* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_Login* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_Login* New() const { return New(NULL); }

  YouMeIM_Command_Login* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_Login& from);
  void MergeFrom(const YouMeIM_Command_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_Login* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string userPasswd = 2;
  bool has_userpasswd() const;
  void clear_userpasswd();
  static const int kUserPasswdFieldNumber = 2;
  const ::std::string& userpasswd() const;
  void set_userpasswd(const ::std::string& value);
  void set_userpasswd(const char* value);
  void set_userpasswd(const char* value, size_t size);
  ::std::string* mutable_userpasswd();
  ::std::string* release_userpasswd();
  void set_allocated_userpasswd(::std::string* userpasswd);

  // optional string olduserPasswd = 3;
  bool has_olduserpasswd() const;
  void clear_olduserpasswd();
  static const int kOlduserPasswdFieldNumber = 3;
  const ::std::string& olduserpasswd() const;
  void set_olduserpasswd(const ::std::string& value);
  void set_olduserpasswd(const char* value);
  void set_olduserpasswd(const char* value, size_t size);
  ::std::string* mutable_olduserpasswd();
  ::std::string* release_olduserpasswd();
  void set_allocated_olduserpasswd(::std::string* olduserpasswd);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_Login)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_userpasswd();
  inline void clear_has_userpasswd();
  inline void set_has_olduserpasswd();
  inline void clear_has_olduserpasswd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr userpasswd_;
  ::youmecommon::protobuf::internal::ArenaStringPtr olduserpasswd_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_Login* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_LoginResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_LoginResponse();
  virtual ~YouMeIM_Command_LoginResponse();

  YouMeIM_Command_LoginResponse(const YouMeIM_Command_LoginResponse& from);

  inline YouMeIM_Command_LoginResponse& operator=(const YouMeIM_Command_LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_LoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_LoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_LoginResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_LoginResponse* New() const { return New(NULL); }

  YouMeIM_Command_LoginResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_LoginResponse& from);
  void MergeFrom(const YouMeIM_Command_LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_LoginResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string sessionID = 2;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // required .YouMeIMProtocol.ContactInfo userInfo = 3;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 3;
  const ::YouMeIMProtocol::ContactInfo& userinfo() const;
  ::YouMeIMProtocol::ContactInfo* mutable_userinfo();
  ::YouMeIMProtocol::ContactInfo* release_userinfo();
  void set_allocated_userinfo(::YouMeIMProtocol::ContactInfo* userinfo);

  // required string secrect = 4;
  bool has_secrect() const;
  void clear_secrect();
  static const int kSecrectFieldNumber = 4;
  const ::std::string& secrect() const;
  void set_secrect(const ::std::string& value);
  void set_secrect(const char* value);
  void set_secrect(const char* value, size_t size);
  ::std::string* mutable_secrect();
  ::std::string* release_secrect();
  void set_allocated_secrect(::std::string* secrect);

  // optional string errorDescription = 5;
  bool has_errordescription() const;
  void clear_errordescription();
  static const int kErrorDescriptionFieldNumber = 5;
  const ::std::string& errordescription() const;
  void set_errordescription(const ::std::string& value);
  void set_errordescription(const char* value);
  void set_errordescription(const char* value, size_t size);
  ::std::string* mutable_errordescription();
  ::std::string* release_errordescription();
  void set_allocated_errordescription(::std::string* errordescription);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_LoginResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_secrect();
  inline void clear_has_secrect();
  inline void set_has_errordescription();
  inline void clear_has_errordescription();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr sessionid_;
  ::YouMeIMProtocol::ContactInfo* userinfo_;
  ::youmecommon::protobuf::internal::ArenaStringPtr secrect_;
  ::youmecommon::protobuf::internal::ArenaStringPtr errordescription_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_LoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_Logout : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_Logout();
  virtual ~YouMeIM_Command_Logout();

  YouMeIM_Command_Logout(const YouMeIM_Command_Logout& from);

  inline YouMeIM_Command_Logout& operator=(const YouMeIM_Command_Logout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_Logout& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_Logout* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_Logout* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_Logout* New() const { return New(NULL); }

  YouMeIM_Command_Logout* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_Logout& from);
  void MergeFrom(const YouMeIM_Command_Logout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_Logout* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_Logout)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_Logout* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_LogoutResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_LogoutResponse();
  virtual ~YouMeIM_Command_LogoutResponse();

  YouMeIM_Command_LogoutResponse(const YouMeIM_Command_LogoutResponse& from);

  inline YouMeIM_Command_LogoutResponse& operator=(const YouMeIM_Command_LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_LogoutResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_LogoutResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_LogoutResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_LogoutResponse* New() const { return New(NULL); }

  YouMeIM_Command_LogoutResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_LogoutResponse& from);
  void MergeFrom(const YouMeIM_Command_LogoutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_LogoutResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::youmecommon::protobuf::int32 status() const;
  void set_status(::youmecommon::protobuf::int32 value);

  // optional string errorDescription = 3;
  bool has_errordescription() const;
  void clear_errordescription();
  static const int kErrorDescriptionFieldNumber = 3;
  const ::std::string& errordescription() const;
  void set_errordescription(const ::std::string& value);
  void set_errordescription(const char* value);
  void set_errordescription(const char* value, size_t size);
  ::std::string* mutable_errordescription();
  ::std::string* release_errordescription();
  void set_allocated_errordescription(::std::string* errordescription);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_LogoutResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_errordescription();
  inline void clear_has_errordescription();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr errordescription_;
  ::youmecommon::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_LogoutResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_DisConnectNotify : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_DisConnectNotify();
  virtual ~YouMeIM_Command_DisConnectNotify();

  YouMeIM_Command_DisConnectNotify(const YouMeIM_Command_DisConnectNotify& from);

  inline YouMeIM_Command_DisConnectNotify& operator=(const YouMeIM_Command_DisConnectNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_DisConnectNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_DisConnectNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_DisConnectNotify* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_DisConnectNotify* New() const { return New(NULL); }

  YouMeIM_Command_DisConnectNotify* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_DisConnectNotify& from);
  void MergeFrom(const YouMeIM_Command_DisConnectNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_DisConnectNotify* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.ConnectEventType evtType = 2;
  bool has_evttype() const;
  void clear_evttype();
  static const int kEvtTypeFieldNumber = 2;
  ::YouMeIMProtocol::ConnectEventType evttype() const;
  void set_evttype(::YouMeIMProtocol::ConnectEventType value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_evttype();
  inline void clear_has_evttype();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  int evttype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_DisConnectNotify* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_Heart : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_Heart();
  virtual ~YouMeIM_Command_Heart();

  YouMeIM_Command_Heart(const YouMeIM_Command_Heart& from);

  inline YouMeIM_Command_Heart& operator=(const YouMeIM_Command_Heart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_Heart& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_Heart* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_Heart* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_Heart* New() const { return New(NULL); }

  YouMeIM_Command_Heart* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_Heart& from);
  void MergeFrom(const YouMeIM_Command_Heart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_Heart* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_Heart)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_Heart* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_HeartResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_HeartResponse();
  virtual ~YouMeIM_Command_HeartResponse();

  YouMeIM_Command_HeartResponse(const YouMeIM_Command_HeartResponse& from);

  inline YouMeIM_Command_HeartResponse& operator=(const YouMeIM_Command_HeartResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_HeartResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_HeartResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_HeartResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_HeartResponse* New() const { return New(NULL); }

  YouMeIM_Command_HeartResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_HeartResponse& from);
  void MergeFrom(const YouMeIM_Command_HeartResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_HeartResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_HeartResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_HeartResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_PackageAck : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_PackageAck();
  virtual ~YouMeIM_Command_PackageAck();

  YouMeIM_Command_PackageAck(const YouMeIM_Command_PackageAck& from);

  inline YouMeIM_Command_PackageAck& operator=(const YouMeIM_Command_PackageAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_PackageAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_PackageAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_PackageAck* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_PackageAck* New() const { return New(NULL); }

  YouMeIM_Command_PackageAck* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_PackageAck& from);
  void MergeFrom(const YouMeIM_Command_PackageAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_PackageAck* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_PackageAck)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_PackageAck* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerAck : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerAck();
  virtual ~YouMeIM_Command_ClientToServerAck();

  YouMeIM_Command_ClientToServerAck(const YouMeIM_Command_ClientToServerAck& from);

  inline YouMeIM_Command_ClientToServerAck& operator=(const YouMeIM_Command_ClientToServerAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerAck* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerAck* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerAck* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerAck& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerAck* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerAck)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerAck* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ContactLogin : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ContactLogin();
  virtual ~YouMeIM_Command_ContactLogin();

  YouMeIM_Command_ContactLogin(const YouMeIM_Command_ContactLogin& from);

  inline YouMeIM_Command_ContactLogin& operator=(const YouMeIM_Command_ContactLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ContactLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ContactLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ContactLogin* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ContactLogin* New() const { return New(NULL); }

  YouMeIM_Command_ContactLogin* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ContactLogin& from);
  void MergeFrom(const YouMeIM_Command_ContactLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ContactLogin* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ContactLogin)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ContactLogin* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ContactLogout : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ContactLogout();
  virtual ~YouMeIM_Command_ContactLogout();

  YouMeIM_Command_ContactLogout(const YouMeIM_Command_ContactLogout& from);

  inline YouMeIM_Command_ContactLogout& operator=(const YouMeIM_Command_ContactLogout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ContactLogout& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ContactLogout* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ContactLogout* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ContactLogout* New() const { return New(NULL); }

  YouMeIM_Command_ContactLogout* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ContactLogout& from);
  void MergeFrom(const YouMeIM_Command_ContactLogout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ContactLogout* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string YOUMEID = 2;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 2;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ContactLogout)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fcommon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fcommon_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_im_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ContactLogout* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NameValue

// required string name = 1;
inline bool NameValue::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NameValue::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NameValue::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NameValue::clear_name() {
  name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& NameValue::name() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.NameValue.name)
  return name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NameValue::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.NameValue.name)
}
inline void NameValue::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.NameValue.name)
}
inline void NameValue::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.NameValue.name)
}
inline ::std::string* NameValue::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.NameValue.name)
  return name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NameValue::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NameValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.NameValue.name)
}

// required string value = 2;
inline bool NameValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NameValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NameValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NameValue::clear_value() {
  value_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& NameValue::value() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.NameValue.value)
  return value_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NameValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.NameValue.value)
}
inline void NameValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.NameValue.value)
}
inline void NameValue::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.NameValue.value)
}
inline ::std::string* NameValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.NameValue.value)
  return value_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NameValue::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NameValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.NameValue.value)
}

// required .YouMeIMProtocol.NAME_TYPE type = 3;
inline bool NameValue::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NameValue::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NameValue::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NameValue::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::YouMeIMProtocol::NAME_TYPE NameValue::type() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.NameValue.type)
  return static_cast< ::YouMeIMProtocol::NAME_TYPE >(type_);
}
inline void NameValue::set_type(::YouMeIMProtocol::NAME_TYPE value) {
  assert(::YouMeIMProtocol::NAME_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.NameValue.type)
}

// -------------------------------------------------------------------

// ContactInfo

// required string YOUMEID = 1;
inline bool ContactInfo::has_youmeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactInfo::set_has_youmeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactInfo::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactInfo::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& ContactInfo::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ContactInfo.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ContactInfo.YOUMEID)
}
inline void ContactInfo::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.ContactInfo.YOUMEID)
}
inline void ContactInfo::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.ContactInfo.YOUMEID)
}
inline ::std::string* ContactInfo::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.ContactInfo.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.ContactInfo.YOUMEID)
}

// required int32 status = 2;
inline bool ContactInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::youmecommon::protobuf::int32 ContactInfo::status() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ContactInfo.status)
  return status_;
}
inline void ContactInfo::set_status(::youmecommon::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ContactInfo.status)
}

// -------------------------------------------------------------------

// PacketHead

// required .YouMeIMProtocol.Command_TYPE msgtype = 1;
inline bool PacketHead::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketHead::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketHead::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketHead::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::Command_TYPE PacketHead::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.msgtype)
  return static_cast< ::YouMeIMProtocol::Command_TYPE >(msgtype_);
}
inline void PacketHead::set_msgtype(::YouMeIMProtocol::Command_TYPE value) {
  assert(::YouMeIMProtocol::Command_TYPE_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.msgtype)
}

// required int32 msgversion = 2;
inline bool PacketHead::has_msgversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketHead::set_has_msgversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketHead::clear_has_msgversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketHead::clear_msgversion() {
  msgversion_ = 0;
  clear_has_msgversion();
}
inline ::youmecommon::protobuf::int32 PacketHead::msgversion() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.msgversion)
  return msgversion_;
}
inline void PacketHead::set_msgversion(::youmecommon::protobuf::int32 value) {
  set_has_msgversion();
  msgversion_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.msgversion)
}

// required .YouMeIMProtocol.Device_Platform platform = 3;
inline bool PacketHead::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketHead::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketHead::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketHead::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::YouMeIMProtocol::Device_Platform PacketHead::platform() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.platform)
  return static_cast< ::YouMeIMProtocol::Device_Platform >(platform_);
}
inline void PacketHead::set_platform(::YouMeIMProtocol::Device_Platform value) {
  assert(::YouMeIMProtocol::Device_Platform_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.platform)
}

// required string Brand = 4;
inline bool PacketHead::has_brand() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketHead::set_has_brand() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketHead::clear_has_brand() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketHead::clear_brand() {
  brand_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brand();
}
inline const ::std::string& PacketHead::brand() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.Brand)
  return brand_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_brand(const ::std::string& value) {
  set_has_brand();
  brand_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.Brand)
}
inline void PacketHead::set_brand(const char* value) {
  set_has_brand();
  brand_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.Brand)
}
inline void PacketHead::set_brand(const char* value, size_t size) {
  set_has_brand();
  brand_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.Brand)
}
inline ::std::string* PacketHead::mutable_brand() {
  set_has_brand();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.Brand)
  return brand_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_brand() {
  clear_has_brand();
  return brand_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_brand(::std::string* brand) {
  if (brand != NULL) {
    set_has_brand();
  } else {
    clear_has_brand();
  }
  brand_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.Brand)
}

// required string SysVersion = 5;
inline bool PacketHead::has_sysversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketHead::set_has_sysversion() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketHead::clear_has_sysversion() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketHead::clear_sysversion() {
  sysversion_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sysversion();
}
inline const ::std::string& PacketHead::sysversion() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.SysVersion)
  return sysversion_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_sysversion(const ::std::string& value) {
  set_has_sysversion();
  sysversion_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.SysVersion)
}
inline void PacketHead::set_sysversion(const char* value) {
  set_has_sysversion();
  sysversion_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.SysVersion)
}
inline void PacketHead::set_sysversion(const char* value, size_t size) {
  set_has_sysversion();
  sysversion_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.SysVersion)
}
inline ::std::string* PacketHead::mutable_sysversion() {
  set_has_sysversion();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.SysVersion)
  return sysversion_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_sysversion() {
  clear_has_sysversion();
  return sysversion_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_sysversion(::std::string* sysversion) {
  if (sysversion != NULL) {
    set_has_sysversion();
  } else {
    clear_has_sysversion();
  }
  sysversion_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), sysversion);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.SysVersion)
}

// required int32 YmSdkVersion = 6;
inline bool PacketHead::has_ymsdkversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PacketHead::set_has_ymsdkversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PacketHead::clear_has_ymsdkversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PacketHead::clear_ymsdkversion() {
  ymsdkversion_ = 0;
  clear_has_ymsdkversion();
}
inline ::youmecommon::protobuf::int32 PacketHead::ymsdkversion() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.YmSdkVersion)
  return ymsdkversion_;
}
inline void PacketHead::set_ymsdkversion(::youmecommon::protobuf::int32 value) {
  set_has_ymsdkversion();
  ymsdkversion_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.YmSdkVersion)
}

// required string CpuArch = 7;
inline bool PacketHead::has_cpuarch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PacketHead::set_has_cpuarch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PacketHead::clear_has_cpuarch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PacketHead::clear_cpuarch() {
  cpuarch_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cpuarch();
}
inline const ::std::string& PacketHead::cpuarch() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.CpuArch)
  return cpuarch_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_cpuarch(const ::std::string& value) {
  set_has_cpuarch();
  cpuarch_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.CpuArch)
}
inline void PacketHead::set_cpuarch(const char* value) {
  set_has_cpuarch();
  cpuarch_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.CpuArch)
}
inline void PacketHead::set_cpuarch(const char* value, size_t size) {
  set_has_cpuarch();
  cpuarch_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.CpuArch)
}
inline ::std::string* PacketHead::mutable_cpuarch() {
  set_has_cpuarch();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.CpuArch)
  return cpuarch_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_cpuarch() {
  clear_has_cpuarch();
  return cpuarch_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_cpuarch(::std::string* cpuarch) {
  if (cpuarch != NULL) {
    set_has_cpuarch();
  } else {
    clear_has_cpuarch();
  }
  cpuarch_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), cpuarch);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.CpuArch)
}

// required string PackageName = 8;
inline bool PacketHead::has_packagename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PacketHead::set_has_packagename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PacketHead::clear_has_packagename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PacketHead::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_packagename();
}
inline const ::std::string& PacketHead::packagename() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.PackageName)
  return packagename_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_packagename(const ::std::string& value) {
  set_has_packagename();
  packagename_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.PackageName)
}
inline void PacketHead::set_packagename(const char* value) {
  set_has_packagename();
  packagename_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.PackageName)
}
inline void PacketHead::set_packagename(const char* value, size_t size) {
  set_has_packagename();
  packagename_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.PackageName)
}
inline ::std::string* PacketHead::mutable_packagename() {
  set_has_packagename();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.PackageName)
  return packagename_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_packagename() {
  clear_has_packagename();
  return packagename_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    set_has_packagename();
  } else {
    clear_has_packagename();
  }
  packagename_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.PackageName)
}

// required string Identify = 9;
inline bool PacketHead::has_identify() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PacketHead::set_has_identify() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PacketHead::clear_has_identify() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PacketHead::clear_identify() {
  identify_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identify();
}
inline const ::std::string& PacketHead::identify() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.Identify)
  return identify_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_identify(const ::std::string& value) {
  set_has_identify();
  identify_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.Identify)
}
inline void PacketHead::set_identify(const char* value) {
  set_has_identify();
  identify_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.Identify)
}
inline void PacketHead::set_identify(const char* value, size_t size) {
  set_has_identify();
  identify_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.Identify)
}
inline ::std::string* PacketHead::mutable_identify() {
  set_has_identify();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.Identify)
  return identify_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_identify() {
  clear_has_identify();
  return identify_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_identify(::std::string* identify) {
  if (identify != NULL) {
    set_has_identify();
  } else {
    clear_has_identify();
  }
  identify_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), identify);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.Identify)
}

// required string AppKey = 10;
inline bool PacketHead::has_appkey() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PacketHead::set_has_appkey() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PacketHead::clear_has_appkey() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PacketHead::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appkey();
}
inline const ::std::string& PacketHead::appkey() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.AppKey)
  return appkey_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_appkey(const ::std::string& value) {
  set_has_appkey();
  appkey_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.AppKey)
}
inline void PacketHead::set_appkey(const char* value) {
  set_has_appkey();
  appkey_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.AppKey)
}
inline void PacketHead::set_appkey(const char* value, size_t size) {
  set_has_appkey();
  appkey_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.AppKey)
}
inline ::std::string* PacketHead::mutable_appkey() {
  set_has_appkey();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.AppKey)
  return appkey_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_appkey() {
  clear_has_appkey();
  return appkey_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    set_has_appkey();
  } else {
    clear_has_appkey();
  }
  appkey_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.AppKey)
}

// required string SDKName = 11;
inline bool PacketHead::has_sdkname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PacketHead::set_has_sdkname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PacketHead::clear_has_sdkname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PacketHead::clear_sdkname() {
  sdkname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdkname();
}
inline const ::std::string& PacketHead::sdkname() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.SDKName)
  return sdkname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_sdkname(const ::std::string& value) {
  set_has_sdkname();
  sdkname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.SDKName)
}
inline void PacketHead::set_sdkname(const char* value) {
  set_has_sdkname();
  sdkname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.SDKName)
}
inline void PacketHead::set_sdkname(const char* value, size_t size) {
  set_has_sdkname();
  sdkname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.SDKName)
}
inline ::std::string* PacketHead::mutable_sdkname() {
  set_has_sdkname();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.SDKName)
  return sdkname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_sdkname() {
  clear_has_sdkname();
  return sdkname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_sdkname(::std::string* sdkname) {
  if (sdkname != NULL) {
    set_has_sdkname();
  } else {
    clear_has_sdkname();
  }
  sdkname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), sdkname);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.SDKName)
}

// required string Model = 12;
inline bool PacketHead::has_model() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PacketHead::set_has_model() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PacketHead::clear_has_model() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PacketHead::clear_model() {
  model_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& PacketHead::model() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.Model)
  return model_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.Model)
}
inline void PacketHead::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.Model)
}
inline void PacketHead::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.Model)
}
inline ::std::string* PacketHead::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.Model)
  return model_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_model() {
  clear_has_model();
  return model_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.Model)
}

// required .YouMeIMProtocol.NetworkType NetworkType = 13;
inline bool PacketHead::has_networktype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PacketHead::set_has_networktype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PacketHead::clear_has_networktype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PacketHead::clear_networktype() {
  networktype_ = 0;
  clear_has_networktype();
}
inline ::YouMeIMProtocol::NetworkType PacketHead::networktype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.NetworkType)
  return static_cast< ::YouMeIMProtocol::NetworkType >(networktype_);
}
inline void PacketHead::set_networktype(::YouMeIMProtocol::NetworkType value) {
  assert(::YouMeIMProtocol::NetworkType_IsValid(value));
  set_has_networktype();
  networktype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.NetworkType)
}

// required string CPUChip = 14;
inline bool PacketHead::has_cpuchip() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PacketHead::set_has_cpuchip() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PacketHead::clear_has_cpuchip() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PacketHead::clear_cpuchip() {
  cpuchip_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cpuchip();
}
inline const ::std::string& PacketHead::cpuchip() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.CPUChip)
  return cpuchip_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_cpuchip(const ::std::string& value) {
  set_has_cpuchip();
  cpuchip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.CPUChip)
}
inline void PacketHead::set_cpuchip(const char* value) {
  set_has_cpuchip();
  cpuchip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.CPUChip)
}
inline void PacketHead::set_cpuchip(const char* value, size_t size) {
  set_has_cpuchip();
  cpuchip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.CPUChip)
}
inline ::std::string* PacketHead::mutable_cpuchip() {
  set_has_cpuchip();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.CPUChip)
  return cpuchip_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_cpuchip() {
  clear_has_cpuchip();
  return cpuchip_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_cpuchip(::std::string* cpuchip) {
  if (cpuchip != NULL) {
    set_has_cpuchip();
  } else {
    clear_has_cpuchip();
  }
  cpuchip_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), cpuchip);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.CPUChip)
}

// required int64 msgSerialNum = 15;
inline bool PacketHead::has_msgserialnum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PacketHead::set_has_msgserialnum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PacketHead::clear_has_msgserialnum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PacketHead::clear_msgserialnum() {
  msgserialnum_ = GOOGLE_LONGLONG(0);
  clear_has_msgserialnum();
}
inline ::youmecommon::protobuf::int64 PacketHead::msgserialnum() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.msgSerialNum)
  return msgserialnum_;
}
inline void PacketHead::set_msgserialnum(::youmecommon::protobuf::int64 value) {
  set_has_msgserialnum();
  msgserialnum_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.msgSerialNum)
}

// required string SessionID = 16;
inline bool PacketHead::has_sessionid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PacketHead::set_has_sessionid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PacketHead::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PacketHead::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
inline const ::std::string& PacketHead::sessionid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.SessionID)
  return sessionid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.SessionID)
}
inline void PacketHead::set_sessionid(const char* value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.SessionID)
}
inline void PacketHead::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.SessionID)
}
inline ::std::string* PacketHead::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.SessionID)
  return sessionid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_sessionid() {
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.SessionID)
}

// required string YOUMEID = 17;
inline bool PacketHead::has_youmeid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PacketHead::set_has_youmeid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PacketHead::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PacketHead::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& PacketHead::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.YOUMEID)
}
inline void PacketHead::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.PacketHead.YOUMEID)
}
inline void PacketHead::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.PacketHead.YOUMEID)
}
inline ::std::string* PacketHead::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHead::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHead::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.PacketHead.YOUMEID)
}

// optional int64 localtime = 18;
inline bool PacketHead::has_localtime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PacketHead::set_has_localtime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PacketHead::clear_has_localtime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PacketHead::clear_localtime() {
  localtime_ = GOOGLE_LONGLONG(0);
  clear_has_localtime();
}
inline ::youmecommon::protobuf::int64 PacketHead::localtime() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.localtime)
  return localtime_;
}
inline void PacketHead::set_localtime(::youmecommon::protobuf::int64 value) {
  set_has_localtime();
  localtime_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.localtime)
}

// optional int64 serverSerialNum = 19;
inline bool PacketHead::has_serverserialnum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PacketHead::set_has_serverserialnum() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PacketHead::clear_has_serverserialnum() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PacketHead::clear_serverserialnum() {
  serverserialnum_ = GOOGLE_LONGLONG(0);
  clear_has_serverserialnum();
}
inline ::youmecommon::protobuf::int64 PacketHead::serverserialnum() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.serverSerialNum)
  return serverserialnum_;
}
inline void PacketHead::set_serverserialnum(::youmecommon::protobuf::int64 value) {
  set_has_serverserialnum();
  serverserialnum_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.PacketHead.serverSerialNum)
}

// repeated .YouMeIMProtocol.NameValue params = 20;
inline int PacketHead::params_size() const {
  return params_.size();
}
inline void PacketHead::clear_params() {
  params_.Clear();
}
inline const ::YouMeIMProtocol::NameValue& PacketHead::params(int index) const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.PacketHead.params)
  return params_.Get(index);
}
inline ::YouMeIMProtocol::NameValue* PacketHead::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.PacketHead.params)
  return params_.Mutable(index);
}
inline ::YouMeIMProtocol::NameValue* PacketHead::add_params() {
  // @@protoc_insertion_point(field_add:YouMeIMProtocol.PacketHead.params)
  return params_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
PacketHead::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:YouMeIMProtocol.PacketHead.params)
  return &params_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
PacketHead::params() const {
  // @@protoc_insertion_point(field_list:YouMeIMProtocol.PacketHead.params)
  return params_;
}

// -------------------------------------------------------------------

// ReqHead

// required .YouMeIMProtocol.PacketHead head = 1;
inline bool ReqHead::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHead::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHead::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHead::clear_head() {
  if (head_ != NULL) head_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_head();
}
inline const ::YouMeIMProtocol::PacketHead& ReqHead::head() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ReqHead.head)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return head_ != NULL ? *head_ : *default_instance().head_;
#else
  return head_ != NULL ? *head_ : *default_instance_->head_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* ReqHead::mutable_head() {
  set_has_head();
  if (head_ == NULL) {
    head_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.ReqHead.head)
  return head_;
}
inline ::YouMeIMProtocol::PacketHead* ReqHead::release_head() {
  clear_has_head();
  ::YouMeIMProtocol::PacketHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void ReqHead::set_allocated_head(::YouMeIMProtocol::PacketHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.ReqHead.head)
}

// -------------------------------------------------------------------

// ServerPacketHead

// required .YouMeIMProtocol.Command_TYPE msgtype = 1;
inline bool ServerPacketHead::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerPacketHead::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerPacketHead::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerPacketHead::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::Command_TYPE ServerPacketHead::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.msgtype)
  return static_cast< ::YouMeIMProtocol::Command_TYPE >(msgtype_);
}
inline void ServerPacketHead::set_msgtype(::YouMeIMProtocol::Command_TYPE value) {
  assert(::YouMeIMProtocol::Command_TYPE_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.msgtype)
}

// required int32 msgversion = 2;
inline bool ServerPacketHead::has_msgversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerPacketHead::set_has_msgversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerPacketHead::clear_has_msgversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerPacketHead::clear_msgversion() {
  msgversion_ = 0;
  clear_has_msgversion();
}
inline ::youmecommon::protobuf::int32 ServerPacketHead::msgversion() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.msgversion)
  return msgversion_;
}
inline void ServerPacketHead::set_msgversion(::youmecommon::protobuf::int32 value) {
  set_has_msgversion();
  msgversion_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.msgversion)
}

// required int64 msgSerialNum = 3;
inline bool ServerPacketHead::has_msgserialnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerPacketHead::set_has_msgserialnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerPacketHead::clear_has_msgserialnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerPacketHead::clear_msgserialnum() {
  msgserialnum_ = GOOGLE_LONGLONG(0);
  clear_has_msgserialnum();
}
inline ::youmecommon::protobuf::int64 ServerPacketHead::msgserialnum() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.msgSerialNum)
  return msgserialnum_;
}
inline void ServerPacketHead::set_msgserialnum(::youmecommon::protobuf::int64 value) {
  set_has_msgserialnum();
  msgserialnum_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.msgSerialNum)
}

// required int32 code = 4;
inline bool ServerPacketHead::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerPacketHead::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerPacketHead::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerPacketHead::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::youmecommon::protobuf::int32 ServerPacketHead::code() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.code)
  return code_;
}
inline void ServerPacketHead::set_code(::youmecommon::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.code)
}

// optional int64 clientSerialNum = 5;
inline bool ServerPacketHead::has_clientserialnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerPacketHead::set_has_clientserialnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerPacketHead::clear_has_clientserialnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerPacketHead::clear_clientserialnum() {
  clientserialnum_ = GOOGLE_LONGLONG(0);
  clear_has_clientserialnum();
}
inline ::youmecommon::protobuf::int64 ServerPacketHead::clientserialnum() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.clientSerialNum)
  return clientserialnum_;
}
inline void ServerPacketHead::set_clientserialnum(::youmecommon::protobuf::int64 value) {
  set_has_clientserialnum();
  clientserialnum_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.clientSerialNum)
}

// optional int64 servertime = 6;
inline bool ServerPacketHead::has_servertime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerPacketHead::set_has_servertime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerPacketHead::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerPacketHead::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
  clear_has_servertime();
}
inline ::youmecommon::protobuf::int64 ServerPacketHead::servertime() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerPacketHead.servertime)
  return servertime_;
}
inline void ServerPacketHead::set_servertime(::youmecommon::protobuf::int64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.ServerPacketHead.servertime)
}

// -------------------------------------------------------------------

// ServerReqHead

// required .YouMeIMProtocol.ServerPacketHead head = 1;
inline bool ServerReqHead::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerReqHead::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerReqHead::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerReqHead::clear_head() {
  if (head_ != NULL) head_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_head();
}
inline const ::YouMeIMProtocol::ServerPacketHead& ServerReqHead::head() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.ServerReqHead.head)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return head_ != NULL ? *head_ : *default_instance().head_;
#else
  return head_ != NULL ? *head_ : *default_instance_->head_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* ServerReqHead::mutable_head() {
  set_has_head();
  if (head_ == NULL) {
    head_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.ServerReqHead.head)
  return head_;
}
inline ::YouMeIMProtocol::ServerPacketHead* ServerReqHead::release_head() {
  clear_has_head();
  ::YouMeIMProtocol::ServerPacketHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void ServerReqHead::set_allocated_head(::YouMeIMProtocol::ServerPacketHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.ServerReqHead.head)
}

// -------------------------------------------------------------------

// YouMeIM_Command_Login

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_Login::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_Login::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_Login::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_Login::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_Login::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_Login.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Login::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_Login.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Login::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_Login::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_Login.msgHead)
}

// required string userPasswd = 2;
inline bool YouMeIM_Command_Login::has_userpasswd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_Login::set_has_userpasswd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_Login::clear_has_userpasswd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_Login::clear_userpasswd() {
  userpasswd_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userpasswd();
}
inline const ::std::string& YouMeIM_Command_Login::userpasswd() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
  return userpasswd_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_Login::set_userpasswd(const ::std::string& value) {
  set_has_userpasswd();
  userpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
}
inline void YouMeIM_Command_Login::set_userpasswd(const char* value) {
  set_has_userpasswd();
  userpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
}
inline void YouMeIM_Command_Login::set_userpasswd(const char* value, size_t size) {
  set_has_userpasswd();
  userpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
}
inline ::std::string* YouMeIM_Command_Login::mutable_userpasswd() {
  set_has_userpasswd();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
  return userpasswd_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_Login::release_userpasswd() {
  clear_has_userpasswd();
  return userpasswd_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_Login::set_allocated_userpasswd(::std::string* userpasswd) {
  if (userpasswd != NULL) {
    set_has_userpasswd();
  } else {
    clear_has_userpasswd();
  }
  userpasswd_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), userpasswd);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_Login.userPasswd)
}

// optional string olduserPasswd = 3;
inline bool YouMeIM_Command_Login::has_olduserpasswd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_Login::set_has_olduserpasswd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_Login::clear_has_olduserpasswd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_Login::clear_olduserpasswd() {
  olduserpasswd_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_olduserpasswd();
}
inline const ::std::string& YouMeIM_Command_Login::olduserpasswd() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
  return olduserpasswd_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_Login::set_olduserpasswd(const ::std::string& value) {
  set_has_olduserpasswd();
  olduserpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
}
inline void YouMeIM_Command_Login::set_olduserpasswd(const char* value) {
  set_has_olduserpasswd();
  olduserpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
}
inline void YouMeIM_Command_Login::set_olduserpasswd(const char* value, size_t size) {
  set_has_olduserpasswd();
  olduserpasswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
}
inline ::std::string* YouMeIM_Command_Login::mutable_olduserpasswd() {
  set_has_olduserpasswd();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
  return olduserpasswd_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_Login::release_olduserpasswd() {
  clear_has_olduserpasswd();
  return olduserpasswd_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_Login::set_allocated_olduserpasswd(::std::string* olduserpasswd) {
  if (olduserpasswd != NULL) {
    set_has_olduserpasswd();
  } else {
    clear_has_olduserpasswd();
  }
  olduserpasswd_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), olduserpasswd);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_Login.olduserPasswd)
}

// -------------------------------------------------------------------

// YouMeIM_Command_LoginResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_LoginResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_LoginResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_LoginResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_LoginResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_LoginResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LoginResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LoginResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LoginResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LoginResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_LoginResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LoginResponse.msgHead)
}

// required string sessionID = 2;
inline bool YouMeIM_Command_LoginResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_LoginResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_LoginResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_LoginResponse::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
inline const ::std::string& YouMeIM_Command_LoginResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
  return sessionid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
}
inline void YouMeIM_Command_LoginResponse::set_sessionid(const char* value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
}
inline void YouMeIM_Command_LoginResponse::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
}
inline ::std::string* YouMeIM_Command_LoginResponse::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
  return sessionid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LoginResponse::release_sessionid() {
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LoginResponse.sessionID)
}

// required .YouMeIMProtocol.ContactInfo userInfo = 3;
inline bool YouMeIM_Command_LoginResponse::has_userinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_LoginResponse::set_has_userinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_LoginResponse::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_LoginResponse::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::YouMeIMProtocol::ContactInfo::Clear();
  clear_has_userinfo();
}
inline const ::YouMeIMProtocol::ContactInfo& YouMeIM_Command_LoginResponse::userinfo() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LoginResponse.userInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return userinfo_ != NULL ? *userinfo_ : *default_instance().userinfo_;
#else
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
#endif
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_LoginResponse::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::YouMeIMProtocol::ContactInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LoginResponse.userInfo)
  return userinfo_;
}
inline ::YouMeIMProtocol::ContactInfo* YouMeIM_Command_LoginResponse::release_userinfo() {
  clear_has_userinfo();
  ::YouMeIMProtocol::ContactInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_LoginResponse::set_allocated_userinfo(::YouMeIMProtocol::ContactInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LoginResponse.userInfo)
}

// required string secrect = 4;
inline bool YouMeIM_Command_LoginResponse::has_secrect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_LoginResponse::set_has_secrect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_LoginResponse::clear_has_secrect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_LoginResponse::clear_secrect() {
  secrect_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secrect();
}
inline const ::std::string& YouMeIM_Command_LoginResponse::secrect() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
  return secrect_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_secrect(const ::std::string& value) {
  set_has_secrect();
  secrect_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
}
inline void YouMeIM_Command_LoginResponse::set_secrect(const char* value) {
  set_has_secrect();
  secrect_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
}
inline void YouMeIM_Command_LoginResponse::set_secrect(const char* value, size_t size) {
  set_has_secrect();
  secrect_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
}
inline ::std::string* YouMeIM_Command_LoginResponse::mutable_secrect() {
  set_has_secrect();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
  return secrect_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LoginResponse::release_secrect() {
  clear_has_secrect();
  return secrect_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_allocated_secrect(::std::string* secrect) {
  if (secrect != NULL) {
    set_has_secrect();
  } else {
    clear_has_secrect();
  }
  secrect_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), secrect);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LoginResponse.secrect)
}

// optional string errorDescription = 5;
inline bool YouMeIM_Command_LoginResponse::has_errordescription() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_LoginResponse::set_has_errordescription() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_LoginResponse::clear_has_errordescription() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_LoginResponse::clear_errordescription() {
  errordescription_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errordescription();
}
inline const ::std::string& YouMeIM_Command_LoginResponse::errordescription() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
  return errordescription_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_errordescription(const ::std::string& value) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
}
inline void YouMeIM_Command_LoginResponse::set_errordescription(const char* value) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
}
inline void YouMeIM_Command_LoginResponse::set_errordescription(const char* value, size_t size) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
}
inline ::std::string* YouMeIM_Command_LoginResponse::mutable_errordescription() {
  set_has_errordescription();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
  return errordescription_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LoginResponse::release_errordescription() {
  clear_has_errordescription();
  return errordescription_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LoginResponse::set_allocated_errordescription(::std::string* errordescription) {
  if (errordescription != NULL) {
    set_has_errordescription();
  } else {
    clear_has_errordescription();
  }
  errordescription_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), errordescription);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LoginResponse.errorDescription)
}

// -------------------------------------------------------------------

// YouMeIM_Command_Logout

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_Logout::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_Logout::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_Logout::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_Logout::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_Logout::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_Logout.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Logout::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_Logout.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Logout::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_Logout::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_Logout.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_LogoutResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_LogoutResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_LogoutResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_LogoutResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_LogoutResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_LogoutResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LogoutResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LogoutResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_LogoutResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.msgHead)
}

// required int32 status = 2;
inline bool YouMeIM_Command_LogoutResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_LogoutResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_LogoutResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_LogoutResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::youmecommon::protobuf::int32 YouMeIM_Command_LogoutResponse::status() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.status)
  return status_;
}
inline void YouMeIM_Command_LogoutResponse::set_status(::youmecommon::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.status)
}

// optional string errorDescription = 3;
inline bool YouMeIM_Command_LogoutResponse::has_errordescription() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_LogoutResponse::set_has_errordescription() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_LogoutResponse::clear_has_errordescription() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_LogoutResponse::clear_errordescription() {
  errordescription_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errordescription();
}
inline const ::std::string& YouMeIM_Command_LogoutResponse::errordescription() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
  return errordescription_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LogoutResponse::set_errordescription(const ::std::string& value) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
}
inline void YouMeIM_Command_LogoutResponse::set_errordescription(const char* value) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
}
inline void YouMeIM_Command_LogoutResponse::set_errordescription(const char* value, size_t size) {
  set_has_errordescription();
  errordescription_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
}
inline ::std::string* YouMeIM_Command_LogoutResponse::mutable_errordescription() {
  set_has_errordescription();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
  return errordescription_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LogoutResponse::release_errordescription() {
  clear_has_errordescription();
  return errordescription_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LogoutResponse::set_allocated_errordescription(::std::string* errordescription) {
  if (errordescription != NULL) {
    set_has_errordescription();
  } else {
    clear_has_errordescription();
  }
  errordescription_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), errordescription);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_LogoutResponse.errorDescription)
}

// -------------------------------------------------------------------

// YouMeIM_Command_DisConnectNotify

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_DisConnectNotify::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_DisConnectNotify::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_DisConnectNotify::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_DisConnectNotify::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_DisConnectNotify::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DisConnectNotify::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DisConnectNotify::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_DisConnectNotify::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify.msgHead)
}

// required .YouMeIMProtocol.ConnectEventType evtType = 2;
inline bool YouMeIM_Command_DisConnectNotify::has_evttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_DisConnectNotify::set_has_evttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_DisConnectNotify::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_DisConnectNotify::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
inline ::YouMeIMProtocol::ConnectEventType YouMeIM_Command_DisConnectNotify::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify.evtType)
  return static_cast< ::YouMeIMProtocol::ConnectEventType >(evttype_);
}
inline void YouMeIM_Command_DisConnectNotify::set_evttype(::YouMeIMProtocol::ConnectEventType value) {
  assert(::YouMeIMProtocol::ConnectEventType_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_DisConnectNotify.evtType)
}

// -------------------------------------------------------------------

// YouMeIM_Command_Heart

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_Heart::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_Heart::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_Heart::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_Heart::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_Heart::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_Heart.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Heart::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_Heart.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Heart::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_Heart::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_Heart.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_HeartResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_HeartResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_HeartResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_HeartResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_HeartResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_HeartResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_HeartResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_HeartResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_HeartResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_HeartResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_HeartResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_HeartResponse.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_PackageAck

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_PackageAck::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_PackageAck::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_PackageAck::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_PackageAck::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_PackageAck::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_PackageAck.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_PackageAck::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_PackageAck.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_PackageAck::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_PackageAck::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_PackageAck.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerAck

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerAck::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerAck::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerAck::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerAck::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerAck::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerAck.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerAck::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerAck.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerAck::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerAck::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerAck.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ContactLogin

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ContactLogin::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ContactLogin::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ContactLogin::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ContactLogin::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ContactLogin::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ContactLogin.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ContactLogin::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ContactLogin.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ContactLogin::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ContactLogin::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ContactLogin.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_ContactLogin::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ContactLogin::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ContactLogin::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ContactLogin::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_ContactLogin::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ContactLogin::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
}
inline void YouMeIM_Command_ContactLogin::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
}
inline void YouMeIM_Command_ContactLogin::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
}
inline ::std::string* YouMeIM_Command_ContactLogin::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ContactLogin::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ContactLogin::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ContactLogin.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ContactLogout

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ContactLogout::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ContactLogout::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ContactLogout::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ContactLogout::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ContactLogout::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ContactLogout.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ContactLogout::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ContactLogout.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ContactLogout::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ContactLogout::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ContactLogout.msgHead)
}

// required string YOUMEID = 2;
inline bool YouMeIM_Command_ContactLogout::has_youmeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ContactLogout::set_has_youmeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ContactLogout::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ContactLogout::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_ContactLogout::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ContactLogout::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
}
inline void YouMeIM_Command_ContactLogout::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
}
inline void YouMeIM_Command_ContactLogout::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
}
inline ::std::string* YouMeIM_Command_ContactLogout::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ContactLogout::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ContactLogout::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ContactLogout.YOUMEID)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeIMProtocol

#ifndef SWIG
namespace youmecommon {
namespace protobuf {

template <> struct is_proto_enum< ::YouMeIMProtocol::NAME_TYPE> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::Device_Platform> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::NetworkType> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::Command_TYPE> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::ConnectEventType> : ::youmecommon::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_im_5fcommon_2eproto__INCLUDED
