// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_message.proto

#ifndef PROTOBUF_im_5fmessage_2eproto__INCLUDED
#define PROTOBUF_im_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include "im_common.pb.h"
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_im_5fmessage_2eproto();
void protobuf_AssignDesc_im_5fmessage_2eproto();
void protobuf_ShutdownFile_im_5fmessage_2eproto();

class YouMeIM_Command_ClientToServerCustom;
class YouMeIM_Command_ClientToServerEmoji;
class YouMeIM_Command_ClientToServerFile;
class YouMeIM_Command_ClientToServerText;
class YouMeIM_Command_ClientToServerVoice;
class YouMeIM_Command_GetDownloadToken;
class YouMeIM_Command_GetDownloadTokenResponse;
class YouMeIM_Command_GetMessageNotify;
class YouMeIM_Command_GetOfflineMsg;
class YouMeIM_Command_GetOfflineMsgResponse;
class YouMeIM_Command_GetUploadToken;
class YouMeIM_Command_GetUploadTokenResponse;
class YouMeIM_Command_MessageAck;
class YouMeIM_Command_ServerToClientCustom;
class YouMeIM_Command_ServerToClientEmoji;
class YouMeIM_Command_ServerToClientFile;
class YouMeIM_Command_ServerToClientText;
class YouMeIM_Command_ServerToClientVoice;
class YouMeIM_MessageBodyCustom;
class YouMeIM_MessageBodyEmoji;
class YouMeIM_MessageBodyFile;
class YouMeIM_MessageBodyText;
class YouMeIM_MessageBodyVoice;

enum YouMeIM_ChatType {
  ChatType_Unknow = 0,
  ChatType_PrivateChat = 1,
  ChatType_GroupChat = 2,
  ChatType_RoomChat = 3
};
bool YouMeIM_ChatType_IsValid(int value);
const YouMeIM_ChatType YouMeIM_ChatType_MIN = ChatType_Unknow;
const YouMeIM_ChatType YouMeIM_ChatType_MAX = ChatType_RoomChat;
const int YouMeIM_ChatType_ARRAYSIZE = YouMeIM_ChatType_MAX + 1;

enum YouMeIM_MessageBodyType {
  MessageBodyType_Unknow = 0,
  MessageBodyType_TXT = 1,
  MessageBodyType_CustomMesssage = 2,
  MessageBodyType_Emoji = 3,
  MessageBodyType_Image = 4,
  MessageBodyType_Voice = 5,
  MessageBodyType_Video = 6,
  MessageBodyType_File = 7
};
bool YouMeIM_MessageBodyType_IsValid(int value);
const YouMeIM_MessageBodyType YouMeIM_MessageBodyType_MIN = MessageBodyType_Unknow;
const YouMeIM_MessageBodyType YouMeIM_MessageBodyType_MAX = MessageBodyType_File;
const int YouMeIM_MessageBodyType_ARRAYSIZE = YouMeIM_MessageBodyType_MAX + 1;

// ===================================================================

class YouMeIM_MessageBodyCustom : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MessageBodyCustom();
  virtual ~YouMeIM_MessageBodyCustom();

  YouMeIM_MessageBodyCustom(const YouMeIM_MessageBodyCustom& from);

  inline YouMeIM_MessageBodyCustom& operator=(const YouMeIM_MessageBodyCustom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MessageBodyCustom& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MessageBodyCustom* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MessageBodyCustom* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MessageBodyCustom* New() const { return New(NULL); }

  YouMeIM_MessageBodyCustom* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MessageBodyCustom& from);
  void MergeFrom(const YouMeIM_MessageBodyCustom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MessageBodyCustom* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::YouMeIMProtocol::YouMeIM_MessageBodyType msgtype() const;
  void set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value);

  // required bytes customContent = 2;
  bool has_customcontent() const;
  void clear_customcontent();
  static const int kCustomContentFieldNumber = 2;
  const ::std::string& customcontent() const;
  void set_customcontent(const ::std::string& value);
  void set_customcontent(const char* value);
  void set_customcontent(const void* value, size_t size);
  ::std::string* mutable_customcontent();
  ::std::string* release_customcontent();
  void set_allocated_customcontent(::std::string* customcontent);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_MessageBodyCustom)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_customcontent();
  inline void clear_has_customcontent();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr customcontent_;
  int msgtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MessageBodyCustom* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_MessageBodyText : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MessageBodyText();
  virtual ~YouMeIM_MessageBodyText();

  YouMeIM_MessageBodyText(const YouMeIM_MessageBodyText& from);

  inline YouMeIM_MessageBodyText& operator=(const YouMeIM_MessageBodyText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MessageBodyText& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MessageBodyText* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MessageBodyText* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MessageBodyText* New() const { return New(NULL); }

  YouMeIM_MessageBodyText* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MessageBodyText& from);
  void MergeFrom(const YouMeIM_MessageBodyText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MessageBodyText* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::YouMeIMProtocol::YouMeIM_MessageBodyType msgtype() const;
  void set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value);

  // required string content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_MessageBodyText)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_content();
  inline void clear_has_content();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr content_;
  int msgtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MessageBodyText* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_MessageBodyEmoji : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MessageBodyEmoji();
  virtual ~YouMeIM_MessageBodyEmoji();

  YouMeIM_MessageBodyEmoji(const YouMeIM_MessageBodyEmoji& from);

  inline YouMeIM_MessageBodyEmoji& operator=(const YouMeIM_MessageBodyEmoji& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MessageBodyEmoji& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MessageBodyEmoji* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MessageBodyEmoji* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MessageBodyEmoji* New() const { return New(NULL); }

  YouMeIM_MessageBodyEmoji* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MessageBodyEmoji& from);
  void MergeFrom(const YouMeIM_MessageBodyEmoji& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MessageBodyEmoji* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::YouMeIMProtocol::YouMeIM_MessageBodyType msgtype() const;
  void set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value);

  // required int32 emojiID = 2;
  bool has_emojiid() const;
  void clear_emojiid();
  static const int kEmojiIDFieldNumber = 2;
  ::youmecommon::protobuf::int32 emojiid() const;
  void set_emojiid(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_MessageBodyEmoji)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_emojiid();
  inline void clear_has_emojiid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::youmecommon::protobuf::int32 emojiid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MessageBodyEmoji* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_MessageBodyFile : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MessageBodyFile();
  virtual ~YouMeIM_MessageBodyFile();

  YouMeIM_MessageBodyFile(const YouMeIM_MessageBodyFile& from);

  inline YouMeIM_MessageBodyFile& operator=(const YouMeIM_MessageBodyFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MessageBodyFile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MessageBodyFile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MessageBodyFile* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MessageBodyFile* New() const { return New(NULL); }

  YouMeIM_MessageBodyFile* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MessageBodyFile& from);
  void MergeFrom(const YouMeIM_MessageBodyFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MessageBodyFile* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::YouMeIMProtocol::YouMeIM_MessageBodyType msgtype() const;
  void set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value);

  // required string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 areaCode = 3;
  bool has_areacode() const;
  void clear_areacode();
  static const int kAreaCodeFieldNumber = 3;
  ::youmecommon::protobuf::uint32 areacode() const;
  void set_areacode(::youmecommon::protobuf::uint32 value);

  // optional string md5 = 4;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 4;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // optional string suffix = 5;
  bool has_suffix() const;
  void clear_suffix();
  static const int kSuffixFieldNumber = 5;
  const ::std::string& suffix() const;
  void set_suffix(const ::std::string& value);
  void set_suffix(const char* value);
  void set_suffix(const char* value, size_t size);
  ::std::string* mutable_suffix();
  ::std::string* release_suffix();
  void set_allocated_suffix(::std::string* suffix);

  // optional uint32 fileSize = 6;
  bool has_filesize() const;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 6;
  ::youmecommon::protobuf::uint32 filesize() const;
  void set_filesize(::youmecommon::protobuf::uint32 value);

  // repeated .YouMeIMProtocol.NameValue extend = 7;
  int extend_size() const;
  void clear_extend();
  static const int kExtendFieldNumber = 7;
  const ::YouMeIMProtocol::NameValue& extend(int index) const;
  ::YouMeIMProtocol::NameValue* mutable_extend(int index);
  ::YouMeIMProtocol::NameValue* add_extend();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
      mutable_extend();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
      extend() const;

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_MessageBodyFile)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_areacode();
  inline void clear_has_areacode();
  inline void set_has_md5();
  inline void clear_has_md5();
  inline void set_has_suffix();
  inline void clear_has_suffix();
  inline void set_has_filesize();
  inline void clear_has_filesize();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr url_;
  int msgtype_;
  ::youmecommon::protobuf::uint32 areacode_;
  ::youmecommon::protobuf::internal::ArenaStringPtr md5_;
  ::youmecommon::protobuf::internal::ArenaStringPtr suffix_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue > extend_;
  ::youmecommon::protobuf::uint32 filesize_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MessageBodyFile* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_MessageBodyVoice : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MessageBodyVoice();
  virtual ~YouMeIM_MessageBodyVoice();

  YouMeIM_MessageBodyVoice(const YouMeIM_MessageBodyVoice& from);

  inline YouMeIM_MessageBodyVoice& operator=(const YouMeIM_MessageBodyVoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MessageBodyVoice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MessageBodyVoice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MessageBodyVoice* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MessageBodyVoice* New() const { return New(NULL); }

  YouMeIM_MessageBodyVoice* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MessageBodyVoice& from);
  void MergeFrom(const YouMeIM_MessageBodyVoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MessageBodyVoice* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::YouMeIMProtocol::YouMeIM_MessageBodyType msgtype() const;
  void set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value);

  // required string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string downloadurl = 3;
  bool has_downloadurl() const;
  void clear_downloadurl();
  static const int kDownloadurlFieldNumber = 3;
  const ::std::string& downloadurl() const;
  void set_downloadurl(const ::std::string& value);
  void set_downloadurl(const char* value);
  void set_downloadurl(const char* value, size_t size);
  ::std::string* mutable_downloadurl();
  ::std::string* release_downloadurl();
  void set_allocated_downloadurl(::std::string* downloadurl);

  // optional string characters = 4;
  bool has_characters() const;
  void clear_characters();
  static const int kCharactersFieldNumber = 4;
  const ::std::string& characters() const;
  void set_characters(const ::std::string& value);
  void set_characters(const char* value);
  void set_characters(const char* value, size_t size);
  ::std::string* mutable_characters();
  ::std::string* release_characters();
  void set_allocated_characters(::std::string* characters);

  // optional string param = 5;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 5;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // optional uint32 time = 6;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  ::youmecommon::protobuf::uint32 time() const;
  void set_time(::youmecommon::protobuf::uint32 value);

  // optional uint32 areaCode = 7;
  bool has_areacode() const;
  void clear_areacode();
  static const int kAreaCodeFieldNumber = 7;
  ::youmecommon::protobuf::uint32 areacode() const;
  void set_areacode(::youmecommon::protobuf::uint32 value);

  // optional uint32 fileSize = 8;
  bool has_filesize() const;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 8;
  ::youmecommon::protobuf::uint32 filesize() const;
  void set_filesize(::youmecommon::protobuf::uint32 value);

  // optional string md5 = 9;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 9;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // optional string suffix = 10;
  bool has_suffix() const;
  void clear_suffix();
  static const int kSuffixFieldNumber = 10;
  const ::std::string& suffix() const;
  void set_suffix(const ::std::string& value);
  void set_suffix(const char* value);
  void set_suffix(const char* value, size_t size);
  ::std::string* mutable_suffix();
  ::std::string* release_suffix();
  void set_allocated_suffix(::std::string* suffix);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_MessageBodyVoice)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_downloadurl();
  inline void clear_has_downloadurl();
  inline void set_has_characters();
  inline void clear_has_characters();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_areacode();
  inline void clear_has_areacode();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_md5();
  inline void clear_has_md5();
  inline void set_has_suffix();
  inline void clear_has_suffix();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr key_;
  ::youmecommon::protobuf::internal::ArenaStringPtr downloadurl_;
  int msgtype_;
  ::youmecommon::protobuf::uint32 time_;
  ::youmecommon::protobuf::internal::ArenaStringPtr characters_;
  ::youmecommon::protobuf::internal::ArenaStringPtr param_;
  ::youmecommon::protobuf::uint32 areacode_;
  ::youmecommon::protobuf::uint32 filesize_;
  ::youmecommon::protobuf::internal::ArenaStringPtr md5_;
  ::youmecommon::protobuf::internal::ArenaStringPtr suffix_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MessageBodyVoice* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerCustom : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerCustom();
  virtual ~YouMeIM_Command_ClientToServerCustom();

  YouMeIM_Command_ClientToServerCustom(const YouMeIM_Command_ClientToServerCustom& from);

  inline YouMeIM_Command_ClientToServerCustom& operator=(const YouMeIM_Command_ClientToServerCustom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerCustom& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerCustom* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerCustom* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerCustom* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerCustom* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerCustom& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerCustom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerCustom* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyCustom messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyCustom& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 4;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 4;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerCustom* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerText : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerText();
  virtual ~YouMeIM_Command_ClientToServerText();

  YouMeIM_Command_ClientToServerText(const YouMeIM_Command_ClientToServerText& from);

  inline YouMeIM_Command_ClientToServerText& operator=(const YouMeIM_Command_ClientToServerText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerText& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerText* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerText* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerText* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerText* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerText& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerText* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyText messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyText& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 4;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 4;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerText)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerText* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerEmoji : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerEmoji();
  virtual ~YouMeIM_Command_ClientToServerEmoji();

  YouMeIM_Command_ClientToServerEmoji(const YouMeIM_Command_ClientToServerEmoji& from);

  inline YouMeIM_Command_ClientToServerEmoji& operator=(const YouMeIM_Command_ClientToServerEmoji& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerEmoji& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerEmoji* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerEmoji* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerEmoji* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerEmoji* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerEmoji& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerEmoji& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerEmoji* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyEmoji messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 4;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 4;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerEmoji* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerFile : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerFile();
  virtual ~YouMeIM_Command_ClientToServerFile();

  YouMeIM_Command_ClientToServerFile(const YouMeIM_Command_ClientToServerFile& from);

  inline YouMeIM_Command_ClientToServerFile& operator=(const YouMeIM_Command_ClientToServerFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerFile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerFile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerFile* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerFile* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerFile* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerFile& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerFile* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyFile messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyFile& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 4;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 4;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerFile* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ClientToServerVoice : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ClientToServerVoice();
  virtual ~YouMeIM_Command_ClientToServerVoice();

  YouMeIM_Command_ClientToServerVoice(const YouMeIM_Command_ClientToServerVoice& from);

  inline YouMeIM_Command_ClientToServerVoice& operator=(const YouMeIM_Command_ClientToServerVoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ClientToServerVoice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ClientToServerVoice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ClientToServerVoice* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ClientToServerVoice* New() const { return New(NULL); }

  YouMeIM_Command_ClientToServerVoice* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ClientToServerVoice& from);
  void MergeFrom(const YouMeIM_Command_ClientToServerVoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ClientToServerVoice* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyVoice messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyVoice& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 4;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 4;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ClientToServerVoice* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ServerToClientCustom : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ServerToClientCustom();
  virtual ~YouMeIM_Command_ServerToClientCustom();

  YouMeIM_Command_ServerToClientCustom(const YouMeIM_Command_ServerToClientCustom& from);

  inline YouMeIM_Command_ServerToClientCustom& operator=(const YouMeIM_Command_ServerToClientCustom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ServerToClientCustom& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ServerToClientCustom* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ServerToClientCustom* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ServerToClientCustom* New() const { return New(NULL); }

  YouMeIM_Command_ServerToClientCustom* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ServerToClientCustom& from);
  void MergeFrom(const YouMeIM_Command_ServerToClientCustom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ServerToClientCustom* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyCustom messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyCustom& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody);

  // required string senderYOUMEID = 3;
  bool has_senderyoumeid() const;
  void clear_senderyoumeid();
  static const int kSenderYOUMEIDFieldNumber = 3;
  const ::std::string& senderyoumeid() const;
  void set_senderyoumeid(const ::std::string& value);
  void set_senderyoumeid(const char* value);
  void set_senderyoumeid(const char* value, size_t size);
  ::std::string* mutable_senderyoumeid();
  ::std::string* release_senderyoumeid();
  void set_allocated_senderyoumeid(::std::string* senderyoumeid);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 5;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 5;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_senderyoumeid();
  inline void clear_has_senderyoumeid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr senderyoumeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ServerToClientCustom* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ServerToClientText : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ServerToClientText();
  virtual ~YouMeIM_Command_ServerToClientText();

  YouMeIM_Command_ServerToClientText(const YouMeIM_Command_ServerToClientText& from);

  inline YouMeIM_Command_ServerToClientText& operator=(const YouMeIM_Command_ServerToClientText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ServerToClientText& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ServerToClientText* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ServerToClientText* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ServerToClientText* New() const { return New(NULL); }

  YouMeIM_Command_ServerToClientText* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ServerToClientText& from);
  void MergeFrom(const YouMeIM_Command_ServerToClientText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ServerToClientText* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyText messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyText& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody);

  // required string senderYOUMEID = 3;
  bool has_senderyoumeid() const;
  void clear_senderyoumeid();
  static const int kSenderYOUMEIDFieldNumber = 3;
  const ::std::string& senderyoumeid() const;
  void set_senderyoumeid(const ::std::string& value);
  void set_senderyoumeid(const char* value);
  void set_senderyoumeid(const char* value, size_t size);
  ::std::string* mutable_senderyoumeid();
  ::std::string* release_senderyoumeid();
  void set_allocated_senderyoumeid(::std::string* senderyoumeid);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 5;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 5;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ServerToClientText)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_senderyoumeid();
  inline void clear_has_senderyoumeid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr senderyoumeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ServerToClientText* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ServerToClientEmoji : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ServerToClientEmoji();
  virtual ~YouMeIM_Command_ServerToClientEmoji();

  YouMeIM_Command_ServerToClientEmoji(const YouMeIM_Command_ServerToClientEmoji& from);

  inline YouMeIM_Command_ServerToClientEmoji& operator=(const YouMeIM_Command_ServerToClientEmoji& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ServerToClientEmoji& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ServerToClientEmoji* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ServerToClientEmoji* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ServerToClientEmoji* New() const { return New(NULL); }

  YouMeIM_Command_ServerToClientEmoji* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ServerToClientEmoji& from);
  void MergeFrom(const YouMeIM_Command_ServerToClientEmoji& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ServerToClientEmoji* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyEmoji messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody);

  // required string senderYOUMEID = 3;
  bool has_senderyoumeid() const;
  void clear_senderyoumeid();
  static const int kSenderYOUMEIDFieldNumber = 3;
  const ::std::string& senderyoumeid() const;
  void set_senderyoumeid(const ::std::string& value);
  void set_senderyoumeid(const char* value);
  void set_senderyoumeid(const char* value, size_t size);
  ::std::string* mutable_senderyoumeid();
  ::std::string* release_senderyoumeid();
  void set_allocated_senderyoumeid(::std::string* senderyoumeid);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 5;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 5;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_senderyoumeid();
  inline void clear_has_senderyoumeid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr senderyoumeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ServerToClientEmoji* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ServerToClientFile : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ServerToClientFile();
  virtual ~YouMeIM_Command_ServerToClientFile();

  YouMeIM_Command_ServerToClientFile(const YouMeIM_Command_ServerToClientFile& from);

  inline YouMeIM_Command_ServerToClientFile& operator=(const YouMeIM_Command_ServerToClientFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ServerToClientFile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ServerToClientFile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ServerToClientFile* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ServerToClientFile* New() const { return New(NULL); }

  YouMeIM_Command_ServerToClientFile* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ServerToClientFile& from);
  void MergeFrom(const YouMeIM_Command_ServerToClientFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ServerToClientFile* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyFile messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyFile& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody);

  // required string senderYOUMEID = 3;
  bool has_senderyoumeid() const;
  void clear_senderyoumeid();
  static const int kSenderYOUMEIDFieldNumber = 3;
  const ::std::string& senderyoumeid() const;
  void set_senderyoumeid(const ::std::string& value);
  void set_senderyoumeid(const char* value);
  void set_senderyoumeid(const char* value, size_t size);
  ::std::string* mutable_senderyoumeid();
  ::std::string* release_senderyoumeid();
  void set_allocated_senderyoumeid(::std::string* senderyoumeid);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 5;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 5;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_senderyoumeid();
  inline void clear_has_senderyoumeid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr senderyoumeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ServerToClientFile* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_ServerToClientVoice : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_ServerToClientVoice();
  virtual ~YouMeIM_Command_ServerToClientVoice();

  YouMeIM_Command_ServerToClientVoice(const YouMeIM_Command_ServerToClientVoice& from);

  inline YouMeIM_Command_ServerToClientVoice& operator=(const YouMeIM_Command_ServerToClientVoice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_ServerToClientVoice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_ServerToClientVoice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_ServerToClientVoice* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_ServerToClientVoice* New() const { return New(NULL); }

  YouMeIM_Command_ServerToClientVoice* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_ServerToClientVoice& from);
  void MergeFrom(const YouMeIM_Command_ServerToClientVoice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_ServerToClientVoice* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_MessageBodyVoice messageBody = 2;
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_MessageBodyVoice& messagebody() const;
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* mutable_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* release_messagebody();
  void set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody);

  // required string senderYOUMEID = 3;
  bool has_senderyoumeid() const;
  void clear_senderyoumeid();
  static const int kSenderYOUMEIDFieldNumber = 3;
  const ::std::string& senderyoumeid() const;
  void set_senderyoumeid(const ::std::string& value);
  void set_senderyoumeid(const char* value);
  void set_senderyoumeid(const char* value, size_t size);
  ::std::string* mutable_senderyoumeid();
  ::std::string* release_senderyoumeid();
  void set_allocated_senderyoumeid(::std::string* senderyoumeid);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 5;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 5;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_senderyoumeid();
  inline void clear_has_senderyoumeid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody_;
  ::youmecommon::protobuf::internal::ArenaStringPtr senderyoumeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_ServerToClientVoice* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_MessageAck : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_MessageAck();
  virtual ~YouMeIM_Command_MessageAck();

  YouMeIM_Command_MessageAck(const YouMeIM_Command_MessageAck& from);

  inline YouMeIM_Command_MessageAck& operator=(const YouMeIM_Command_MessageAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_MessageAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_MessageAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_MessageAck* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_MessageAck* New() const { return New(NULL); }

  YouMeIM_Command_MessageAck* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_MessageAck& from);
  void MergeFrom(const YouMeIM_Command_MessageAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_MessageAck* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_MessageAck)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_MessageAck* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetOfflineMsg : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetOfflineMsg();
  virtual ~YouMeIM_Command_GetOfflineMsg();

  YouMeIM_Command_GetOfflineMsg(const YouMeIM_Command_GetOfflineMsg& from);

  inline YouMeIM_Command_GetOfflineMsg& operator=(const YouMeIM_Command_GetOfflineMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetOfflineMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetOfflineMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetOfflineMsg* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetOfflineMsg* New() const { return New(NULL); }

  YouMeIM_Command_GetOfflineMsg* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetOfflineMsg& from);
  void MergeFrom(const YouMeIM_Command_GetOfflineMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetOfflineMsg* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 2;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 3;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 3;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // optional uint64 lastMsgSerial = 4;
  bool has_lastmsgserial() const;
  void clear_lastmsgserial();
  static const int kLastMsgSerialFieldNumber = 4;
  ::youmecommon::protobuf::uint64 lastmsgserial() const;
  void set_lastmsgserial(::youmecommon::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();
  inline void set_has_lastmsgserial();
  inline void clear_has_lastmsgserial();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  ::youmecommon::protobuf::uint64 lastmsgserial_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetOfflineMsg* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetOfflineMsgResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetOfflineMsgResponse();
  virtual ~YouMeIM_Command_GetOfflineMsgResponse();

  YouMeIM_Command_GetOfflineMsgResponse(const YouMeIM_Command_GetOfflineMsgResponse& from);

  inline YouMeIM_Command_GetOfflineMsgResponse& operator=(const YouMeIM_Command_GetOfflineMsgResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetOfflineMsgResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetOfflineMsgResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetOfflineMsgResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetOfflineMsgResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetOfflineMsgResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetOfflineMsgResponse& from);
  void MergeFrom(const YouMeIM_Command_GetOfflineMsgResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetOfflineMsgResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeIMProtocol.YouMeIM_ChatType chatType = 2;
  bool has_chattype() const;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_ChatType chattype() const;
  void set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value);

  // required string YOUMEGROUPID = 3;
  bool has_youmegroupid() const;
  void clear_youmegroupid();
  static const int kYOUMEGROUPIDFieldNumber = 3;
  const ::std::string& youmegroupid() const;
  void set_youmegroupid(const ::std::string& value);
  void set_youmegroupid(const char* value);
  void set_youmegroupid(const char* value, size_t size);
  ::std::string* mutable_youmegroupid();
  ::std::string* release_youmegroupid();
  void set_allocated_youmegroupid(::std::string* youmegroupid);

  // repeated bytes msgLists = 4;
  int msglists_size() const;
  void clear_msglists();
  static const int kMsgListsFieldNumber = 4;
  const ::std::string& msglists(int index) const;
  ::std::string* mutable_msglists(int index);
  void set_msglists(int index, const ::std::string& value);
  void set_msglists(int index, const char* value);
  void set_msglists(int index, const void* value, size_t size);
  ::std::string* add_msglists();
  void add_msglists(const ::std::string& value);
  void add_msglists(const char* value);
  void add_msglists(const void* value, size_t size);
  const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>& msglists() const;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string>* mutable_msglists();

  // optional uint64 lastMsgSerial = 5;
  bool has_lastmsgserial() const;
  void clear_lastmsgserial();
  static const int kLastMsgSerialFieldNumber = 5;
  ::youmecommon::protobuf::uint64 lastmsgserial() const;
  void set_lastmsgserial(::youmecommon::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_youmegroupid();
  inline void clear_has_youmegroupid();
  inline void set_has_lastmsgserial();
  inline void clear_has_lastmsgserial();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmegroupid_;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string> msglists_;
  ::youmecommon::protobuf::uint64 lastmsgserial_;
  int chattype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetOfflineMsgResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetUploadToken : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetUploadToken();
  virtual ~YouMeIM_Command_GetUploadToken();

  YouMeIM_Command_GetUploadToken(const YouMeIM_Command_GetUploadToken& from);

  inline YouMeIM_Command_GetUploadToken& operator=(const YouMeIM_Command_GetUploadToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetUploadToken& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetUploadToken* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetUploadToken* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetUploadToken* New() const { return New(NULL); }

  YouMeIM_Command_GetUploadToken* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetUploadToken& from);
  void MergeFrom(const YouMeIM_Command_GetUploadToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetUploadToken* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // optional string uploadpolicy = 2;
  bool has_uploadpolicy() const;
  void clear_uploadpolicy();
  static const int kUploadpolicyFieldNumber = 2;
  const ::std::string& uploadpolicy() const;
  void set_uploadpolicy(const ::std::string& value);
  void set_uploadpolicy(const char* value);
  void set_uploadpolicy(const char* value, size_t size);
  ::std::string* mutable_uploadpolicy();
  ::std::string* release_uploadpolicy();
  void set_allocated_uploadpolicy(::std::string* uploadpolicy);

  // optional uint32 areaCode = 3;
  bool has_areacode() const;
  void clear_areacode();
  static const int kAreaCodeFieldNumber = 3;
  ::youmecommon::protobuf::uint32 areacode() const;
  void set_areacode(::youmecommon::protobuf::uint32 value);

  // optional uint32 fileSize = 4;
  bool has_filesize() const;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 4;
  ::youmecommon::protobuf::uint32 filesize() const;
  void set_filesize(::youmecommon::protobuf::uint32 value);

  // optional string md5 = 5;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 5;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // optional string suffix = 6;
  bool has_suffix() const;
  void clear_suffix();
  static const int kSuffixFieldNumber = 6;
  const ::std::string& suffix() const;
  void set_suffix(const ::std::string& value);
  void set_suffix(const char* value);
  void set_suffix(const char* value, size_t size);
  ::std::string* mutable_suffix();
  ::std::string* release_suffix();
  void set_allocated_suffix(::std::string* suffix);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetUploadToken)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_uploadpolicy();
  inline void clear_has_uploadpolicy();
  inline void set_has_areacode();
  inline void clear_has_areacode();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_md5();
  inline void clear_has_md5();
  inline void set_has_suffix();
  inline void clear_has_suffix();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr uploadpolicy_;
  ::youmecommon::protobuf::uint32 areacode_;
  ::youmecommon::protobuf::uint32 filesize_;
  ::youmecommon::protobuf::internal::ArenaStringPtr md5_;
  ::youmecommon::protobuf::internal::ArenaStringPtr suffix_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetUploadToken* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetUploadTokenResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetUploadTokenResponse();
  virtual ~YouMeIM_Command_GetUploadTokenResponse();

  YouMeIM_Command_GetUploadTokenResponse(const YouMeIM_Command_GetUploadTokenResponse& from);

  inline YouMeIM_Command_GetUploadTokenResponse& operator=(const YouMeIM_Command_GetUploadTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetUploadTokenResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetUploadTokenResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetUploadTokenResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetUploadTokenResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetUploadTokenResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetUploadTokenResponse& from);
  void MergeFrom(const YouMeIM_Command_GetUploadTokenResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetUploadTokenResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string uploadtoken = 2;
  bool has_uploadtoken() const;
  void clear_uploadtoken();
  static const int kUploadtokenFieldNumber = 2;
  const ::std::string& uploadtoken() const;
  void set_uploadtoken(const ::std::string& value);
  void set_uploadtoken(const char* value);
  void set_uploadtoken(const char* value, size_t size);
  ::std::string* mutable_uploadtoken();
  ::std::string* release_uploadtoken();
  void set_allocated_uploadtoken(::std::string* uploadtoken);

  // repeated .YouMeIMProtocol.NameValue headInfo = 3;
  int headinfo_size() const;
  void clear_headinfo();
  static const int kHeadInfoFieldNumber = 3;
  const ::YouMeIMProtocol::NameValue& headinfo(int index) const;
  ::YouMeIMProtocol::NameValue* mutable_headinfo(int index);
  ::YouMeIMProtocol::NameValue* add_headinfo();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
      mutable_headinfo();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
      headinfo() const;

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_uploadtoken();
  inline void clear_has_uploadtoken();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr uploadtoken_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue > headinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetUploadTokenResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetDownloadToken : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetDownloadToken();
  virtual ~YouMeIM_Command_GetDownloadToken();

  YouMeIM_Command_GetDownloadToken(const YouMeIM_Command_GetDownloadToken& from);

  inline YouMeIM_Command_GetDownloadToken& operator=(const YouMeIM_Command_GetDownloadToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetDownloadToken& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetDownloadToken* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetDownloadToken* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetDownloadToken* New() const { return New(NULL); }

  YouMeIM_Command_GetDownloadToken* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetDownloadToken& from);
  void MergeFrom(const YouMeIM_Command_GetDownloadToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetDownloadToken* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_key();
  inline void clear_has_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr key_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetDownloadToken* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetDownloadTokenResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetDownloadTokenResponse();
  virtual ~YouMeIM_Command_GetDownloadTokenResponse();

  YouMeIM_Command_GetDownloadTokenResponse(const YouMeIM_Command_GetDownloadTokenResponse& from);

  inline YouMeIM_Command_GetDownloadTokenResponse& operator=(const YouMeIM_Command_GetDownloadTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetDownloadTokenResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetDownloadTokenResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetDownloadTokenResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetDownloadTokenResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetDownloadTokenResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetDownloadTokenResponse& from);
  void MergeFrom(const YouMeIM_Command_GetDownloadTokenResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetDownloadTokenResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string downloadurl = 2;
  bool has_downloadurl() const;
  void clear_downloadurl();
  static const int kDownloadurlFieldNumber = 2;
  const ::std::string& downloadurl() const;
  void set_downloadurl(const ::std::string& value);
  void set_downloadurl(const char* value);
  void set_downloadurl(const char* value, size_t size);
  ::std::string* mutable_downloadurl();
  ::std::string* release_downloadurl();
  void set_allocated_downloadurl(::std::string* downloadurl);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_downloadurl();
  inline void clear_has_downloadurl();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr downloadurl_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetDownloadTokenResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetMessageNotify : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetMessageNotify();
  virtual ~YouMeIM_Command_GetMessageNotify();

  YouMeIM_Command_GetMessageNotify(const YouMeIM_Command_GetMessageNotify& from);

  inline YouMeIM_Command_GetMessageNotify& operator=(const YouMeIM_Command_GetMessageNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetMessageNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetMessageNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetMessageNotify* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetMessageNotify* New() const { return New(NULL); }

  YouMeIM_Command_GetMessageNotify* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetMessageNotify& from);
  void MergeFrom(const YouMeIM_Command_GetMessageNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetMessageNotify* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeIMProtocol.YouMeIM_Command_GetMessageNotify)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fmessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fmessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_im_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetMessageNotify* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_MessageBodyCustom

// required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
inline bool YouMeIM_MessageBodyCustom::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MessageBodyCustom::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MessageBodyCustom::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MessageBodyCustom::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyType YouMeIM_MessageBodyCustom::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyCustom.msgType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_MessageBodyType >(msgtype_);
}
inline void YouMeIM_MessageBodyCustom::set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value) {
  assert(::YouMeIMProtocol::YouMeIM_MessageBodyType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyCustom.msgType)
}

// required bytes customContent = 2;
inline bool YouMeIM_MessageBodyCustom::has_customcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MessageBodyCustom::set_has_customcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MessageBodyCustom::clear_has_customcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MessageBodyCustom::clear_customcontent() {
  customcontent_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_customcontent();
}
inline const ::std::string& YouMeIM_MessageBodyCustom::customcontent() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
  return customcontent_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyCustom::set_customcontent(const ::std::string& value) {
  set_has_customcontent();
  customcontent_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
}
inline void YouMeIM_MessageBodyCustom::set_customcontent(const char* value) {
  set_has_customcontent();
  customcontent_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
}
inline void YouMeIM_MessageBodyCustom::set_customcontent(const void* value, size_t size) {
  set_has_customcontent();
  customcontent_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
}
inline ::std::string* YouMeIM_MessageBodyCustom::mutable_customcontent() {
  set_has_customcontent();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
  return customcontent_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyCustom::release_customcontent() {
  clear_has_customcontent();
  return customcontent_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyCustom::set_allocated_customcontent(::std::string* customcontent) {
  if (customcontent != NULL) {
    set_has_customcontent();
  } else {
    clear_has_customcontent();
  }
  customcontent_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), customcontent);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyCustom.customContent)
}

// -------------------------------------------------------------------

// YouMeIM_MessageBodyText

// required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
inline bool YouMeIM_MessageBodyText::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MessageBodyText::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MessageBodyText::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MessageBodyText::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyType YouMeIM_MessageBodyText::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyText.msgType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_MessageBodyType >(msgtype_);
}
inline void YouMeIM_MessageBodyText::set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value) {
  assert(::YouMeIMProtocol::YouMeIM_MessageBodyType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyText.msgType)
}

// required string content = 2;
inline bool YouMeIM_MessageBodyText::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MessageBodyText::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MessageBodyText::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MessageBodyText::clear_content() {
  content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& YouMeIM_MessageBodyText::content() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
  return content_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyText::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
}
inline void YouMeIM_MessageBodyText::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
}
inline void YouMeIM_MessageBodyText::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
}
inline ::std::string* YouMeIM_MessageBodyText::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
  return content_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyText::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyText::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyText.content)
}

// -------------------------------------------------------------------

// YouMeIM_MessageBodyEmoji

// required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
inline bool YouMeIM_MessageBodyEmoji::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MessageBodyEmoji::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MessageBodyEmoji::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MessageBodyEmoji::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyType YouMeIM_MessageBodyEmoji::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyEmoji.msgType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_MessageBodyType >(msgtype_);
}
inline void YouMeIM_MessageBodyEmoji::set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value) {
  assert(::YouMeIMProtocol::YouMeIM_MessageBodyType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyEmoji.msgType)
}

// required int32 emojiID = 2;
inline bool YouMeIM_MessageBodyEmoji::has_emojiid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MessageBodyEmoji::set_has_emojiid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MessageBodyEmoji::clear_has_emojiid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MessageBodyEmoji::clear_emojiid() {
  emojiid_ = 0;
  clear_has_emojiid();
}
inline ::youmecommon::protobuf::int32 YouMeIM_MessageBodyEmoji::emojiid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyEmoji.emojiID)
  return emojiid_;
}
inline void YouMeIM_MessageBodyEmoji::set_emojiid(::youmecommon::protobuf::int32 value) {
  set_has_emojiid();
  emojiid_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyEmoji.emojiID)
}

// -------------------------------------------------------------------

// YouMeIM_MessageBodyFile

// required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
inline bool YouMeIM_MessageBodyFile::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MessageBodyFile::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MessageBodyFile::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyType YouMeIM_MessageBodyFile::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.msgType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_MessageBodyType >(msgtype_);
}
inline void YouMeIM_MessageBodyFile::set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value) {
  assert(::YouMeIMProtocol::YouMeIM_MessageBodyType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.msgType)
}

// required string url = 2;
inline bool YouMeIM_MessageBodyFile::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MessageBodyFile::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MessageBodyFile::clear_url() {
  url_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& YouMeIM_MessageBodyFile::url() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
  return url_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
}
inline void YouMeIM_MessageBodyFile::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
}
inline void YouMeIM_MessageBodyFile::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
}
inline ::std::string* YouMeIM_MessageBodyFile::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
  return url_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyFile::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyFile.url)
}

// optional uint32 areaCode = 3;
inline bool YouMeIM_MessageBodyFile::has_areacode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_areacode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_MessageBodyFile::clear_has_areacode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_MessageBodyFile::clear_areacode() {
  areacode_ = 0u;
  clear_has_areacode();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_MessageBodyFile::areacode() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.areaCode)
  return areacode_;
}
inline void YouMeIM_MessageBodyFile::set_areacode(::youmecommon::protobuf::uint32 value) {
  set_has_areacode();
  areacode_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.areaCode)
}

// optional string md5 = 4;
inline bool YouMeIM_MessageBodyFile::has_md5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_md5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_MessageBodyFile::clear_has_md5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_MessageBodyFile::clear_md5() {
  md5_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& YouMeIM_MessageBodyFile::md5() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
  return md5_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
}
inline void YouMeIM_MessageBodyFile::set_md5(const char* value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
}
inline void YouMeIM_MessageBodyFile::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
}
inline ::std::string* YouMeIM_MessageBodyFile::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
  return md5_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyFile::release_md5() {
  clear_has_md5();
  return md5_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyFile.md5)
}

// optional string suffix = 5;
inline bool YouMeIM_MessageBodyFile::has_suffix() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_suffix() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_MessageBodyFile::clear_has_suffix() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_MessageBodyFile::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suffix();
}
inline const ::std::string& YouMeIM_MessageBodyFile::suffix() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
  return suffix_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_suffix(const ::std::string& value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
}
inline void YouMeIM_MessageBodyFile::set_suffix(const char* value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
}
inline void YouMeIM_MessageBodyFile::set_suffix(const char* value, size_t size) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
}
inline ::std::string* YouMeIM_MessageBodyFile::mutable_suffix() {
  set_has_suffix();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
  return suffix_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyFile::release_suffix() {
  clear_has_suffix();
  return suffix_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyFile::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    set_has_suffix();
  } else {
    clear_has_suffix();
  }
  suffix_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyFile.suffix)
}

// optional uint32 fileSize = 6;
inline bool YouMeIM_MessageBodyFile::has_filesize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YouMeIM_MessageBodyFile::set_has_filesize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YouMeIM_MessageBodyFile::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YouMeIM_MessageBodyFile::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_MessageBodyFile::filesize() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.fileSize)
  return filesize_;
}
inline void YouMeIM_MessageBodyFile::set_filesize(::youmecommon::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyFile.fileSize)
}

// repeated .YouMeIMProtocol.NameValue extend = 7;
inline int YouMeIM_MessageBodyFile::extend_size() const {
  return extend_.size();
}
inline void YouMeIM_MessageBodyFile::clear_extend() {
  extend_.Clear();
}
inline const ::YouMeIMProtocol::NameValue& YouMeIM_MessageBodyFile::extend(int index) const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyFile.extend)
  return extend_.Get(index);
}
inline ::YouMeIMProtocol::NameValue* YouMeIM_MessageBodyFile::mutable_extend(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyFile.extend)
  return extend_.Mutable(index);
}
inline ::YouMeIMProtocol::NameValue* YouMeIM_MessageBodyFile::add_extend() {
  // @@protoc_insertion_point(field_add:YouMeIMProtocol.YouMeIM_MessageBodyFile.extend)
  return extend_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
YouMeIM_MessageBodyFile::mutable_extend() {
  // @@protoc_insertion_point(field_mutable_list:YouMeIMProtocol.YouMeIM_MessageBodyFile.extend)
  return &extend_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
YouMeIM_MessageBodyFile::extend() const {
  // @@protoc_insertion_point(field_list:YouMeIMProtocol.YouMeIM_MessageBodyFile.extend)
  return extend_;
}

// -------------------------------------------------------------------

// YouMeIM_MessageBodyVoice

// required .YouMeIMProtocol.YouMeIM_MessageBodyType msgType = 1;
inline bool YouMeIM_MessageBodyVoice::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MessageBodyVoice::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyType YouMeIM_MessageBodyVoice::msgtype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.msgType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_MessageBodyType >(msgtype_);
}
inline void YouMeIM_MessageBodyVoice::set_msgtype(::YouMeIMProtocol::YouMeIM_MessageBodyType value) {
  assert(::YouMeIMProtocol::YouMeIM_MessageBodyType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.msgType)
}

// required string key = 2;
inline bool YouMeIM_MessageBodyVoice::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MessageBodyVoice::clear_key() {
  key_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::key() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
  return key_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
}
inline void YouMeIM_MessageBodyVoice::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
}
inline void YouMeIM_MessageBodyVoice::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
  return key_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.key)
}

// required string downloadurl = 3;
inline bool YouMeIM_MessageBodyVoice::has_downloadurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_downloadurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_MessageBodyVoice::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::downloadurl() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
  return downloadurl_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
}
inline void YouMeIM_MessageBodyVoice::set_downloadurl(const char* value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
}
inline void YouMeIM_MessageBodyVoice::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
  return downloadurl_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_downloadurl() {
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.downloadurl)
}

// optional string characters = 4;
inline bool YouMeIM_MessageBodyVoice::has_characters() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_characters() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_characters() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_MessageBodyVoice::clear_characters() {
  characters_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_characters();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::characters() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
  return characters_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_characters(const ::std::string& value) {
  set_has_characters();
  characters_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
}
inline void YouMeIM_MessageBodyVoice::set_characters(const char* value) {
  set_has_characters();
  characters_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
}
inline void YouMeIM_MessageBodyVoice::set_characters(const char* value, size_t size) {
  set_has_characters();
  characters_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_characters() {
  set_has_characters();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
  return characters_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_characters() {
  clear_has_characters();
  return characters_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_characters(::std::string* characters) {
  if (characters != NULL) {
    set_has_characters();
  } else {
    clear_has_characters();
  }
  characters_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), characters);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.characters)
}

// optional string param = 5;
inline bool YouMeIM_MessageBodyVoice::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_MessageBodyVoice::clear_param() {
  param_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::param() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
  return param_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
}
inline void YouMeIM_MessageBodyVoice::set_param(const char* value) {
  set_has_param();
  param_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
}
inline void YouMeIM_MessageBodyVoice::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
  return param_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_param() {
  clear_has_param();
  return param_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.param)
}

// optional uint32 time = 6;
inline bool YouMeIM_MessageBodyVoice::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YouMeIM_MessageBodyVoice::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_MessageBodyVoice::time() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.time)
  return time_;
}
inline void YouMeIM_MessageBodyVoice::set_time(::youmecommon::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.time)
}

// optional uint32 areaCode = 7;
inline bool YouMeIM_MessageBodyVoice::has_areacode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_areacode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_areacode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YouMeIM_MessageBodyVoice::clear_areacode() {
  areacode_ = 0u;
  clear_has_areacode();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_MessageBodyVoice::areacode() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.areaCode)
  return areacode_;
}
inline void YouMeIM_MessageBodyVoice::set_areacode(::youmecommon::protobuf::uint32 value) {
  set_has_areacode();
  areacode_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.areaCode)
}

// optional uint32 fileSize = 8;
inline bool YouMeIM_MessageBodyVoice::has_filesize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_filesize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void YouMeIM_MessageBodyVoice::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_MessageBodyVoice::filesize() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.fileSize)
  return filesize_;
}
inline void YouMeIM_MessageBodyVoice::set_filesize(::youmecommon::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.fileSize)
}

// optional string md5 = 9;
inline bool YouMeIM_MessageBodyVoice::has_md5() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_md5() {
  _has_bits_[0] |= 0x00000100u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_md5() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void YouMeIM_MessageBodyVoice::clear_md5() {
  md5_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::md5() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
  return md5_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
}
inline void YouMeIM_MessageBodyVoice::set_md5(const char* value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
}
inline void YouMeIM_MessageBodyVoice::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
  return md5_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_md5() {
  clear_has_md5();
  return md5_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.md5)
}

// optional string suffix = 10;
inline bool YouMeIM_MessageBodyVoice::has_suffix() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void YouMeIM_MessageBodyVoice::set_has_suffix() {
  _has_bits_[0] |= 0x00000200u;
}
inline void YouMeIM_MessageBodyVoice::clear_has_suffix() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void YouMeIM_MessageBodyVoice::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suffix();
}
inline const ::std::string& YouMeIM_MessageBodyVoice::suffix() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
  return suffix_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_suffix(const ::std::string& value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
}
inline void YouMeIM_MessageBodyVoice::set_suffix(const char* value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
}
inline void YouMeIM_MessageBodyVoice::set_suffix(const char* value, size_t size) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
}
inline ::std::string* YouMeIM_MessageBodyVoice::mutable_suffix() {
  set_has_suffix();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
  return suffix_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MessageBodyVoice::release_suffix() {
  clear_has_suffix();
  return suffix_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MessageBodyVoice::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    set_has_suffix();
  } else {
    clear_has_suffix();
  }
  suffix_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_MessageBodyVoice.suffix)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerCustom

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerCustom::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerCustom::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerCustom::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerCustom::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerCustom::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerCustom::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyCustom messageBody = 2;
inline bool YouMeIM_Command_ClientToServerCustom::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ClientToServerCustom::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyCustom::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyCustom& YouMeIM_Command_ClientToServerCustom::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* YouMeIM_Command_ClientToServerCustom::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyCustom;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* YouMeIM_Command_ClientToServerCustom::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerCustom::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.messageBody)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
inline bool YouMeIM_Command_ClientToServerCustom::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ClientToServerCustom::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ClientToServerCustom::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ClientToServerCustom::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.chatType)
}

// required string YOUMEGROUPID = 4;
inline bool YouMeIM_Command_ClientToServerCustom::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ClientToServerCustom::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ClientToServerCustom::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ClientToServerCustom::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerCustom::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerCustom::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerCustom::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ClientToServerCustom::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ClientToServerCustom::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerCustom::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerCustom.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerText

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerText::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerText::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerText::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerText::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerText::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerText::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerText::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerText::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyText messageBody = 2;
inline bool YouMeIM_Command_ClientToServerText::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ClientToServerText::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ClientToServerText::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ClientToServerText::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyText::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyText& YouMeIM_Command_ClientToServerText::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyText* YouMeIM_Command_ClientToServerText::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyText;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyText* YouMeIM_Command_ClientToServerText::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerText::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.messageBody)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
inline bool YouMeIM_Command_ClientToServerText::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ClientToServerText::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ClientToServerText::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ClientToServerText::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ClientToServerText::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ClientToServerText::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.chatType)
}

// required string YOUMEGROUPID = 4;
inline bool YouMeIM_Command_ClientToServerText::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ClientToServerText::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ClientToServerText::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ClientToServerText::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ClientToServerText::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerText::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerText::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerText::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ClientToServerText::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ClientToServerText::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerText::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerText.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerEmoji

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerEmoji::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerEmoji::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerEmoji::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerEmoji::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyEmoji messageBody = 2;
inline bool YouMeIM_Command_ClientToServerEmoji::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyEmoji::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji& YouMeIM_Command_ClientToServerEmoji::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* YouMeIM_Command_ClientToServerEmoji::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* YouMeIM_Command_ClientToServerEmoji::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.messageBody)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
inline bool YouMeIM_Command_ClientToServerEmoji::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ClientToServerEmoji::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ClientToServerEmoji::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.chatType)
}

// required string YOUMEGROUPID = 4;
inline bool YouMeIM_Command_ClientToServerEmoji::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ClientToServerEmoji::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ClientToServerEmoji::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ClientToServerEmoji::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerEmoji::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerEmoji::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerEmoji::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ClientToServerEmoji::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ClientToServerEmoji::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerEmoji::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerEmoji.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerFile

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerFile::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerFile::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerFile::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerFile::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerFile::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerFile::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyFile messageBody = 2;
inline bool YouMeIM_Command_ClientToServerFile::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ClientToServerFile::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyFile::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyFile& YouMeIM_Command_ClientToServerFile::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyFile* YouMeIM_Command_ClientToServerFile::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyFile;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyFile* YouMeIM_Command_ClientToServerFile::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerFile::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.messageBody)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
inline bool YouMeIM_Command_ClientToServerFile::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ClientToServerFile::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ClientToServerFile::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ClientToServerFile::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.chatType)
}

// required string YOUMEGROUPID = 4;
inline bool YouMeIM_Command_ClientToServerFile::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ClientToServerFile::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ClientToServerFile::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ClientToServerFile::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerFile::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerFile::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerFile::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ClientToServerFile::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ClientToServerFile::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerFile::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerFile.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ClientToServerVoice

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_ClientToServerVoice::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ClientToServerVoice::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_ClientToServerVoice::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerVoice::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_ClientToServerVoice::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerVoice::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyVoice messageBody = 2;
inline bool YouMeIM_Command_ClientToServerVoice::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ClientToServerVoice::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyVoice::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyVoice& YouMeIM_Command_ClientToServerVoice::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* YouMeIM_Command_ClientToServerVoice::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyVoice;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* YouMeIM_Command_ClientToServerVoice::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ClientToServerVoice::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.messageBody)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 3;
inline bool YouMeIM_Command_ClientToServerVoice::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ClientToServerVoice::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ClientToServerVoice::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ClientToServerVoice::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.chatType)
}

// required string YOUMEGROUPID = 4;
inline bool YouMeIM_Command_ClientToServerVoice::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ClientToServerVoice::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ClientToServerVoice::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ClientToServerVoice::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerVoice::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerVoice::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
}
inline void YouMeIM_Command_ClientToServerVoice::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ClientToServerVoice::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ClientToServerVoice::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ClientToServerVoice::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ClientToServerVoice.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ServerToClientCustom

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ServerToClientCustom::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ServerToClientCustom::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ServerToClientCustom::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientCustom::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientCustom::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientCustom::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyCustom messageBody = 2;
inline bool YouMeIM_Command_ServerToClientCustom::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ServerToClientCustom::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyCustom::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyCustom& YouMeIM_Command_ServerToClientCustom::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* YouMeIM_Command_ServerToClientCustom::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyCustom;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* YouMeIM_Command_ServerToClientCustom::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyCustom* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientCustom::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyCustom* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.messageBody)
}

// required string senderYOUMEID = 3;
inline bool YouMeIM_Command_ServerToClientCustom::has_senderyoumeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ServerToClientCustom::set_has_senderyoumeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_has_senderyoumeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_senderyoumeid() {
  senderyoumeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderyoumeid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientCustom::senderyoumeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
  return senderyoumeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientCustom::set_senderyoumeid(const ::std::string& value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientCustom::set_senderyoumeid(const char* value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientCustom::set_senderyoumeid(const char* value, size_t size) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
}
inline ::std::string* YouMeIM_Command_ServerToClientCustom::mutable_senderyoumeid() {
  set_has_senderyoumeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
  return senderyoumeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientCustom::release_senderyoumeid() {
  clear_has_senderyoumeid();
  return senderyoumeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientCustom::set_allocated_senderyoumeid(::std::string* senderyoumeid) {
  if (senderyoumeid != NULL) {
    set_has_senderyoumeid();
  } else {
    clear_has_senderyoumeid();
  }
  senderyoumeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), senderyoumeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.senderYOUMEID)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
inline bool YouMeIM_Command_ServerToClientCustom::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ServerToClientCustom::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ServerToClientCustom::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ServerToClientCustom::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.chatType)
}

// required string YOUMEGROUPID = 5;
inline bool YouMeIM_Command_ServerToClientCustom::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_ServerToClientCustom::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_ServerToClientCustom::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientCustom::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientCustom::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientCustom::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientCustom::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ServerToClientCustom::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientCustom::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientCustom::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientCustom.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ServerToClientText

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ServerToClientText::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ServerToClientText::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ServerToClientText::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ServerToClientText::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ServerToClientText::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientText::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientText::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientText::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyText messageBody = 2;
inline bool YouMeIM_Command_ServerToClientText::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ServerToClientText::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ServerToClientText::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ServerToClientText::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyText::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyText& YouMeIM_Command_ServerToClientText::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyText* YouMeIM_Command_ServerToClientText::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyText;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyText* YouMeIM_Command_ServerToClientText::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyText* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientText::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyText* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.messageBody)
}

// required string senderYOUMEID = 3;
inline bool YouMeIM_Command_ServerToClientText::has_senderyoumeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ServerToClientText::set_has_senderyoumeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ServerToClientText::clear_has_senderyoumeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ServerToClientText::clear_senderyoumeid() {
  senderyoumeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderyoumeid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientText::senderyoumeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
  return senderyoumeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientText::set_senderyoumeid(const ::std::string& value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientText::set_senderyoumeid(const char* value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientText::set_senderyoumeid(const char* value, size_t size) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
}
inline ::std::string* YouMeIM_Command_ServerToClientText::mutable_senderyoumeid() {
  set_has_senderyoumeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
  return senderyoumeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientText::release_senderyoumeid() {
  clear_has_senderyoumeid();
  return senderyoumeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientText::set_allocated_senderyoumeid(::std::string* senderyoumeid) {
  if (senderyoumeid != NULL) {
    set_has_senderyoumeid();
  } else {
    clear_has_senderyoumeid();
  }
  senderyoumeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), senderyoumeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.senderYOUMEID)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
inline bool YouMeIM_Command_ServerToClientText::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ServerToClientText::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ServerToClientText::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ServerToClientText::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ServerToClientText::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ServerToClientText::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.chatType)
}

// required string YOUMEGROUPID = 5;
inline bool YouMeIM_Command_ServerToClientText::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_ServerToClientText::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_ServerToClientText::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_ServerToClientText::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientText::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientText::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientText::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientText::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ServerToClientText::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientText::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientText::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientText.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ServerToClientEmoji

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ServerToClientEmoji::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ServerToClientEmoji::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientEmoji::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientEmoji::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyEmoji messageBody = 2;
inline bool YouMeIM_Command_ServerToClientEmoji::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyEmoji::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji& YouMeIM_Command_ServerToClientEmoji::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* YouMeIM_Command_ServerToClientEmoji::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* YouMeIM_Command_ServerToClientEmoji::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyEmoji* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.messageBody)
}

// required string senderYOUMEID = 3;
inline bool YouMeIM_Command_ServerToClientEmoji::has_senderyoumeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_has_senderyoumeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_has_senderyoumeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_senderyoumeid() {
  senderyoumeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderyoumeid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientEmoji::senderyoumeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
  return senderyoumeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientEmoji::set_senderyoumeid(const ::std::string& value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientEmoji::set_senderyoumeid(const char* value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientEmoji::set_senderyoumeid(const char* value, size_t size) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
}
inline ::std::string* YouMeIM_Command_ServerToClientEmoji::mutable_senderyoumeid() {
  set_has_senderyoumeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
  return senderyoumeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientEmoji::release_senderyoumeid() {
  clear_has_senderyoumeid();
  return senderyoumeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientEmoji::set_allocated_senderyoumeid(::std::string* senderyoumeid) {
  if (senderyoumeid != NULL) {
    set_has_senderyoumeid();
  } else {
    clear_has_senderyoumeid();
  }
  senderyoumeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), senderyoumeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.senderYOUMEID)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
inline bool YouMeIM_Command_ServerToClientEmoji::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ServerToClientEmoji::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ServerToClientEmoji::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.chatType)
}

// required string YOUMEGROUPID = 5;
inline bool YouMeIM_Command_ServerToClientEmoji::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_ServerToClientEmoji::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_ServerToClientEmoji::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientEmoji::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientEmoji::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientEmoji::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientEmoji::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ServerToClientEmoji::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientEmoji::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientEmoji::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientEmoji.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ServerToClientFile

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ServerToClientFile::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ServerToClientFile::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ServerToClientFile::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientFile::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientFile::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientFile::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyFile messageBody = 2;
inline bool YouMeIM_Command_ServerToClientFile::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ServerToClientFile::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyFile::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyFile& YouMeIM_Command_ServerToClientFile::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyFile* YouMeIM_Command_ServerToClientFile::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyFile;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyFile* YouMeIM_Command_ServerToClientFile::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyFile* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientFile::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyFile* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.messageBody)
}

// required string senderYOUMEID = 3;
inline bool YouMeIM_Command_ServerToClientFile::has_senderyoumeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ServerToClientFile::set_has_senderyoumeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_has_senderyoumeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_senderyoumeid() {
  senderyoumeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderyoumeid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientFile::senderyoumeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
  return senderyoumeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientFile::set_senderyoumeid(const ::std::string& value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientFile::set_senderyoumeid(const char* value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientFile::set_senderyoumeid(const char* value, size_t size) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
}
inline ::std::string* YouMeIM_Command_ServerToClientFile::mutable_senderyoumeid() {
  set_has_senderyoumeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
  return senderyoumeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientFile::release_senderyoumeid() {
  clear_has_senderyoumeid();
  return senderyoumeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientFile::set_allocated_senderyoumeid(::std::string* senderyoumeid) {
  if (senderyoumeid != NULL) {
    set_has_senderyoumeid();
  } else {
    clear_has_senderyoumeid();
  }
  senderyoumeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), senderyoumeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.senderYOUMEID)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
inline bool YouMeIM_Command_ServerToClientFile::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ServerToClientFile::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ServerToClientFile::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ServerToClientFile::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.chatType)
}

// required string YOUMEGROUPID = 5;
inline bool YouMeIM_Command_ServerToClientFile::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_ServerToClientFile::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_ServerToClientFile::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientFile::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientFile::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientFile::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientFile::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ServerToClientFile::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientFile::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientFile::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientFile.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_ServerToClientVoice

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_ServerToClientVoice::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_ServerToClientVoice::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_ServerToClientVoice::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientVoice::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_ServerToClientVoice::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientVoice::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_MessageBodyVoice messageBody = 2;
inline bool YouMeIM_Command_ServerToClientVoice::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_ServerToClientVoice::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_messagebody() {
  if (messagebody_ != NULL) messagebody_->::YouMeIMProtocol::YouMeIM_MessageBodyVoice::Clear();
  clear_has_messagebody();
}
inline const ::YouMeIMProtocol::YouMeIM_MessageBodyVoice& YouMeIM_Command_ServerToClientVoice::messagebody() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.messageBody)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return messagebody_ != NULL ? *messagebody_ : *default_instance().messagebody_;
#else
  return messagebody_ != NULL ? *messagebody_ : *default_instance_->messagebody_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* YouMeIM_Command_ServerToClientVoice::mutable_messagebody() {
  set_has_messagebody();
  if (messagebody_ == NULL) {
    messagebody_ = new ::YouMeIMProtocol::YouMeIM_MessageBodyVoice;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.messageBody)
  return messagebody_;
}
inline ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* YouMeIM_Command_ServerToClientVoice::release_messagebody() {
  clear_has_messagebody();
  ::YouMeIMProtocol::YouMeIM_MessageBodyVoice* temp = messagebody_;
  messagebody_ = NULL;
  return temp;
}
inline void YouMeIM_Command_ServerToClientVoice::set_allocated_messagebody(::YouMeIMProtocol::YouMeIM_MessageBodyVoice* messagebody) {
  delete messagebody_;
  messagebody_ = messagebody;
  if (messagebody) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.messageBody)
}

// required string senderYOUMEID = 3;
inline bool YouMeIM_Command_ServerToClientVoice::has_senderyoumeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_ServerToClientVoice::set_has_senderyoumeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_has_senderyoumeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_senderyoumeid() {
  senderyoumeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderyoumeid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientVoice::senderyoumeid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
  return senderyoumeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientVoice::set_senderyoumeid(const ::std::string& value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientVoice::set_senderyoumeid(const char* value) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
}
inline void YouMeIM_Command_ServerToClientVoice::set_senderyoumeid(const char* value, size_t size) {
  set_has_senderyoumeid();
  senderyoumeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
}
inline ::std::string* YouMeIM_Command_ServerToClientVoice::mutable_senderyoumeid() {
  set_has_senderyoumeid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
  return senderyoumeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientVoice::release_senderyoumeid() {
  clear_has_senderyoumeid();
  return senderyoumeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientVoice::set_allocated_senderyoumeid(::std::string* senderyoumeid) {
  if (senderyoumeid != NULL) {
    set_has_senderyoumeid();
  } else {
    clear_has_senderyoumeid();
  }
  senderyoumeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), senderyoumeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.senderYOUMEID)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 4;
inline bool YouMeIM_Command_ServerToClientVoice::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_ServerToClientVoice::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_ServerToClientVoice::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_ServerToClientVoice::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.chatType)
}

// required string YOUMEGROUPID = 5;
inline bool YouMeIM_Command_ServerToClientVoice::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_ServerToClientVoice::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_ServerToClientVoice::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_ServerToClientVoice::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientVoice::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientVoice::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
}
inline void YouMeIM_Command_ServerToClientVoice::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_ServerToClientVoice::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_ServerToClientVoice::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_ServerToClientVoice::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_ServerToClientVoice.YOUMEGROUPID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_MessageAck

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_MessageAck::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_MessageAck::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_MessageAck::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_MessageAck::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_MessageAck::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_MessageAck.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_MessageAck::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_MessageAck.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_MessageAck::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_MessageAck::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_MessageAck.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetOfflineMsg

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetOfflineMsg::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsg::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetOfflineMsg::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetOfflineMsg::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetOfflineMsg::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetOfflineMsg::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 2;
inline bool YouMeIM_Command_GetOfflineMsg::has_chattype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsg::set_has_chattype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_GetOfflineMsg::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_GetOfflineMsg::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.chatType)
}

// required string YOUMEGROUPID = 3;
inline bool YouMeIM_Command_GetOfflineMsg::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsg::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_GetOfflineMsg::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetOfflineMsg::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
}
inline void YouMeIM_Command_GetOfflineMsg::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
}
inline void YouMeIM_Command_GetOfflineMsg::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_GetOfflineMsg::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetOfflineMsg::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetOfflineMsg::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.YOUMEGROUPID)
}

// optional uint64 lastMsgSerial = 4;
inline bool YouMeIM_Command_GetOfflineMsg::has_lastmsgserial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsg::set_has_lastmsgserial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_has_lastmsgserial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_GetOfflineMsg::clear_lastmsgserial() {
  lastmsgserial_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmsgserial();
}
inline ::youmecommon::protobuf::uint64 YouMeIM_Command_GetOfflineMsg::lastmsgserial() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.lastMsgSerial)
  return lastmsgserial_;
}
inline void YouMeIM_Command_GetOfflineMsg::set_lastmsgserial(::youmecommon::protobuf::uint64 value) {
  set_has_lastmsgserial();
  lastmsgserial_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsg.lastMsgSerial)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetOfflineMsgResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetOfflineMsgResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetOfflineMsgResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetOfflineMsgResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetOfflineMsgResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgHead)
}

// required .YouMeIMProtocol.YouMeIM_ChatType chatType = 2;
inline bool YouMeIM_Command_GetOfflineMsgResponse::has_chattype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_has_chattype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::YouMeIMProtocol::YouMeIM_ChatType YouMeIM_Command_GetOfflineMsgResponse::chattype() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.chatType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_ChatType >(chattype_);
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_chattype(::YouMeIMProtocol::YouMeIM_ChatType value) {
  assert(::YouMeIMProtocol::YouMeIM_ChatType_IsValid(value));
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.chatType)
}

// required string YOUMEGROUPID = 3;
inline bool YouMeIM_Command_GetOfflineMsgResponse::has_youmegroupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_has_youmegroupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_has_youmegroupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_youmegroupid() {
  youmegroupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmegroupid();
}
inline const ::std::string& YouMeIM_Command_GetOfflineMsgResponse::youmegroupid() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
  return youmegroupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_youmegroupid(const ::std::string& value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_youmegroupid(const char* value) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_youmegroupid(const char* value, size_t size) {
  set_has_youmegroupid();
  youmegroupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
}
inline ::std::string* YouMeIM_Command_GetOfflineMsgResponse::mutable_youmegroupid() {
  set_has_youmegroupid();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
  return youmegroupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetOfflineMsgResponse::release_youmegroupid() {
  clear_has_youmegroupid();
  return youmegroupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_allocated_youmegroupid(::std::string* youmegroupid) {
  if (youmegroupid != NULL) {
    set_has_youmegroupid();
  } else {
    clear_has_youmegroupid();
  }
  youmegroupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmegroupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.YOUMEGROUPID)
}

// repeated bytes msgLists = 4;
inline int YouMeIM_Command_GetOfflineMsgResponse::msglists_size() const {
  return msglists_.size();
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_msglists() {
  msglists_.Clear();
}
inline const ::std::string& YouMeIM_Command_GetOfflineMsgResponse::msglists(int index) const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
  return msglists_.Get(index);
}
inline ::std::string* YouMeIM_Command_GetOfflineMsgResponse::mutable_msglists(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
  return msglists_.Mutable(index);
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_msglists(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
  msglists_.Mutable(index)->assign(value);
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_msglists(int index, const char* value) {
  msglists_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_msglists(int index, const void* value, size_t size) {
  msglists_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
}
inline ::std::string* YouMeIM_Command_GetOfflineMsgResponse::add_msglists() {
  return msglists_.Add();
}
inline void YouMeIM_Command_GetOfflineMsgResponse::add_msglists(const ::std::string& value) {
  msglists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
}
inline void YouMeIM_Command_GetOfflineMsgResponse::add_msglists(const char* value) {
  msglists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
}
inline void YouMeIM_Command_GetOfflineMsgResponse::add_msglists(const void* value, size_t size) {
  msglists_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>&
YouMeIM_Command_GetOfflineMsgResponse::msglists() const {
  // @@protoc_insertion_point(field_list:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
  return msglists_;
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::std::string>*
YouMeIM_Command_GetOfflineMsgResponse::mutable_msglists() {
  // @@protoc_insertion_point(field_mutable_list:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.msgLists)
  return &msglists_;
}

// optional uint64 lastMsgSerial = 5;
inline bool YouMeIM_Command_GetOfflineMsgResponse::has_lastmsgserial() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_has_lastmsgserial() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_has_lastmsgserial() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::clear_lastmsgserial() {
  lastmsgserial_ = GOOGLE_ULONGLONG(0);
  clear_has_lastmsgserial();
}
inline ::youmecommon::protobuf::uint64 YouMeIM_Command_GetOfflineMsgResponse::lastmsgserial() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.lastMsgSerial)
  return lastmsgserial_;
}
inline void YouMeIM_Command_GetOfflineMsgResponse::set_lastmsgserial(::youmecommon::protobuf::uint64 value) {
  set_has_lastmsgserial();
  lastmsgserial_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetOfflineMsgResponse.lastMsgSerial)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetUploadToken

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetUploadToken::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetUploadToken::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetUploadToken::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetUploadToken::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetUploadToken::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetUploadToken::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.msgHead)
}

// optional string uploadpolicy = 2;
inline bool YouMeIM_Command_GetUploadToken::has_uploadpolicy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_uploadpolicy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_uploadpolicy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetUploadToken::clear_uploadpolicy() {
  uploadpolicy_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uploadpolicy();
}
inline const ::std::string& YouMeIM_Command_GetUploadToken::uploadpolicy() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
  return uploadpolicy_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_uploadpolicy(const ::std::string& value) {
  set_has_uploadpolicy();
  uploadpolicy_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
}
inline void YouMeIM_Command_GetUploadToken::set_uploadpolicy(const char* value) {
  set_has_uploadpolicy();
  uploadpolicy_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
}
inline void YouMeIM_Command_GetUploadToken::set_uploadpolicy(const char* value, size_t size) {
  set_has_uploadpolicy();
  uploadpolicy_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
}
inline ::std::string* YouMeIM_Command_GetUploadToken::mutable_uploadpolicy() {
  set_has_uploadpolicy();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
  return uploadpolicy_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetUploadToken::release_uploadpolicy() {
  clear_has_uploadpolicy();
  return uploadpolicy_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_allocated_uploadpolicy(::std::string* uploadpolicy) {
  if (uploadpolicy != NULL) {
    set_has_uploadpolicy();
  } else {
    clear_has_uploadpolicy();
  }
  uploadpolicy_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), uploadpolicy);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.uploadpolicy)
}

// optional uint32 areaCode = 3;
inline bool YouMeIM_Command_GetUploadToken::has_areacode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_areacode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_areacode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_GetUploadToken::clear_areacode() {
  areacode_ = 0u;
  clear_has_areacode();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_Command_GetUploadToken::areacode() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.areaCode)
  return areacode_;
}
inline void YouMeIM_Command_GetUploadToken::set_areacode(::youmecommon::protobuf::uint32 value) {
  set_has_areacode();
  areacode_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.areaCode)
}

// optional uint32 fileSize = 4;
inline bool YouMeIM_Command_GetUploadToken::has_filesize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_filesize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_GetUploadToken::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::youmecommon::protobuf::uint32 YouMeIM_Command_GetUploadToken::filesize() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.fileSize)
  return filesize_;
}
inline void YouMeIM_Command_GetUploadToken::set_filesize(::youmecommon::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.fileSize)
}

// optional string md5 = 5;
inline bool YouMeIM_Command_GetUploadToken::has_md5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_md5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_md5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YouMeIM_Command_GetUploadToken::clear_md5() {
  md5_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& YouMeIM_Command_GetUploadToken::md5() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
  return md5_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
}
inline void YouMeIM_Command_GetUploadToken::set_md5(const char* value) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
}
inline void YouMeIM_Command_GetUploadToken::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
}
inline ::std::string* YouMeIM_Command_GetUploadToken::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
  return md5_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetUploadToken::release_md5() {
  clear_has_md5();
  return md5_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.md5)
}

// optional string suffix = 6;
inline bool YouMeIM_Command_GetUploadToken::has_suffix() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YouMeIM_Command_GetUploadToken::set_has_suffix() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YouMeIM_Command_GetUploadToken::clear_has_suffix() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YouMeIM_Command_GetUploadToken::clear_suffix() {
  suffix_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suffix();
}
inline const ::std::string& YouMeIM_Command_GetUploadToken::suffix() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
  return suffix_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_suffix(const ::std::string& value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
}
inline void YouMeIM_Command_GetUploadToken::set_suffix(const char* value) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
}
inline void YouMeIM_Command_GetUploadToken::set_suffix(const char* value, size_t size) {
  set_has_suffix();
  suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
}
inline ::std::string* YouMeIM_Command_GetUploadToken::mutable_suffix() {
  set_has_suffix();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
  return suffix_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetUploadToken::release_suffix() {
  clear_has_suffix();
  return suffix_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadToken::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    set_has_suffix();
  } else {
    clear_has_suffix();
  }
  suffix_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), suffix);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadToken.suffix)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetUploadTokenResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetUploadTokenResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetUploadTokenResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetUploadTokenResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetUploadTokenResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetUploadTokenResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetUploadTokenResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.msgHead)
}

// required string uploadtoken = 2;
inline bool YouMeIM_Command_GetUploadTokenResponse::has_uploadtoken() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_has_uploadtoken() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetUploadTokenResponse::clear_has_uploadtoken() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetUploadTokenResponse::clear_uploadtoken() {
  uploadtoken_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uploadtoken();
}
inline const ::std::string& YouMeIM_Command_GetUploadTokenResponse::uploadtoken() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
  return uploadtoken_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_uploadtoken(const ::std::string& value) {
  set_has_uploadtoken();
  uploadtoken_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_uploadtoken(const char* value) {
  set_has_uploadtoken();
  uploadtoken_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_uploadtoken(const char* value, size_t size) {
  set_has_uploadtoken();
  uploadtoken_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
}
inline ::std::string* YouMeIM_Command_GetUploadTokenResponse::mutable_uploadtoken() {
  set_has_uploadtoken();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
  return uploadtoken_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetUploadTokenResponse::release_uploadtoken() {
  clear_has_uploadtoken();
  return uploadtoken_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetUploadTokenResponse::set_allocated_uploadtoken(::std::string* uploadtoken) {
  if (uploadtoken != NULL) {
    set_has_uploadtoken();
  } else {
    clear_has_uploadtoken();
  }
  uploadtoken_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), uploadtoken);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.uploadtoken)
}

// repeated .YouMeIMProtocol.NameValue headInfo = 3;
inline int YouMeIM_Command_GetUploadTokenResponse::headinfo_size() const {
  return headinfo_.size();
}
inline void YouMeIM_Command_GetUploadTokenResponse::clear_headinfo() {
  headinfo_.Clear();
}
inline const ::YouMeIMProtocol::NameValue& YouMeIM_Command_GetUploadTokenResponse::headinfo(int index) const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.headInfo)
  return headinfo_.Get(index);
}
inline ::YouMeIMProtocol::NameValue* YouMeIM_Command_GetUploadTokenResponse::mutable_headinfo(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.headInfo)
  return headinfo_.Mutable(index);
}
inline ::YouMeIMProtocol::NameValue* YouMeIM_Command_GetUploadTokenResponse::add_headinfo() {
  // @@protoc_insertion_point(field_add:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.headInfo)
  return headinfo_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >*
YouMeIM_Command_GetUploadTokenResponse::mutable_headinfo() {
  // @@protoc_insertion_point(field_mutable_list:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.headInfo)
  return &headinfo_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::NameValue >&
YouMeIM_Command_GetUploadTokenResponse::headinfo() const {
  // @@protoc_insertion_point(field_list:YouMeIMProtocol.YouMeIM_Command_GetUploadTokenResponse.headInfo)
  return headinfo_;
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetDownloadToken

// required .YouMeIMProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetDownloadToken::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetDownloadToken::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetDownloadToken::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetDownloadToken::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetDownloadToken::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetDownloadToken::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetDownloadToken::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetDownloadToken::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.msgHead)
}

// required string key = 2;
inline bool YouMeIM_Command_GetDownloadToken::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetDownloadToken::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetDownloadToken::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetDownloadToken::clear_key() {
  key_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& YouMeIM_Command_GetDownloadToken::key() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
  return key_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetDownloadToken::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
}
inline void YouMeIM_Command_GetDownloadToken::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
}
inline void YouMeIM_Command_GetDownloadToken::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
}
inline ::std::string* YouMeIM_Command_GetDownloadToken::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
  return key_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetDownloadToken::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetDownloadToken::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetDownloadToken.key)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetDownloadTokenResponse

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetDownloadTokenResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetDownloadTokenResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetDownloadTokenResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetDownloadTokenResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.msgHead)
}

// required string downloadurl = 2;
inline bool YouMeIM_Command_GetDownloadTokenResponse::has_downloadurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_has_downloadurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetDownloadTokenResponse::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
inline const ::std::string& YouMeIM_Command_GetDownloadTokenResponse::downloadurl() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
  return downloadurl_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_downloadurl(const char* value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
}
inline ::std::string* YouMeIM_Command_GetDownloadTokenResponse::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
  return downloadurl_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetDownloadTokenResponse::release_downloadurl() {
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetDownloadTokenResponse::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetDownloadTokenResponse.downloadurl)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetMessageNotify

// required .YouMeIMProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetMessageNotify::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetMessageNotify::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetMessageNotify::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetMessageNotify::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetMessageNotify::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeIMProtocol.YouMeIM_Command_GetMessageNotify.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetMessageNotify::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeIMProtocol.YouMeIM_Command_GetMessageNotify.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetMessageNotify::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetMessageNotify::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeIMProtocol.YouMeIM_Command_GetMessageNotify.msgHead)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeIMProtocol

#ifndef SWIG
namespace youmecommon {
namespace protobuf {

template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_ChatType> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_MessageBodyType> : ::youmecommon::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_im_5fmessage_2eproto__INCLUDED
