// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_redirect.proto

#ifndef PROTOBUF_im_5fredirect_2eproto__INCLUDED
#define PROTOBUF_im_5fredirect_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "im_common.pb.h"
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_im_5fredirect_2eproto();
void protobuf_AssignDesc_im_5fredirect_2eproto();
void protobuf_ShutdownFile_im_5fredirect_2eproto();

class YouMeIM_Command_Redirect;
class YouMeIM_Command_RedirectResponse;

// ===================================================================

class YouMeIM_Command_Redirect : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_Redirect();
  virtual ~YouMeIM_Command_Redirect();

  YouMeIM_Command_Redirect(const YouMeIM_Command_Redirect& from);

  inline YouMeIM_Command_Redirect& operator=(const YouMeIM_Command_Redirect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_Redirect& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_Redirect* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_Redirect* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_Redirect* New() const { return New(NULL); }

  YouMeIM_Command_Redirect* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_Redirect& from);
  void MergeFrom(const YouMeIM_Command_Redirect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_Redirect* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_Redirect)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fredirect_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fredirect_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fredirect_2eproto();
  friend void protobuf_ShutdownFile_im_5fredirect_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_Redirect* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_RedirectResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_RedirectResponse();
  virtual ~YouMeIM_Command_RedirectResponse();

  YouMeIM_Command_RedirectResponse(const YouMeIM_Command_RedirectResponse& from);

  inline YouMeIM_Command_RedirectResponse& operator=(const YouMeIM_Command_RedirectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_RedirectResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_RedirectResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_RedirectResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_RedirectResponse* New() const { return New(NULL); }

  YouMeIM_Command_RedirectResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_RedirectResponse& from);
  void MergeFrom(const YouMeIM_Command_RedirectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_RedirectResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required int32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::youmecommon::protobuf::int32 port() const;
  void set_port(::youmecommon::protobuf::int32 value);

  // optional int32 timeout = 4;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 4;
  ::youmecommon::protobuf::int32 timeout() const;
  void set_timeout(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_RedirectResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_timeout();
  inline void clear_has_timeout();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr ip_;
  ::youmecommon::protobuf::int32 port_;
  ::youmecommon::protobuf::int32 timeout_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fredirect_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fredirect_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fredirect_2eproto();
  friend void protobuf_ShutdownFile_im_5fredirect_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_RedirectResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_Redirect

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_Redirect::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_Redirect::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_Redirect::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_Redirect::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_Redirect::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_Redirect.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Redirect::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_Redirect.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_Redirect::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_Redirect::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_Redirect.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_RedirectResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_RedirectResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_RedirectResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_RedirectResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_RedirectResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_RedirectResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RedirectResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_RedirectResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RedirectResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_RedirectResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_RedirectResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RedirectResponse.msgHead)
}

// required string ip = 2;
inline bool YouMeIM_Command_RedirectResponse::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_RedirectResponse::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_RedirectResponse::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_RedirectResponse::clear_ip() {
  ip_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& YouMeIM_Command_RedirectResponse::ip() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
  return ip_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RedirectResponse::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
}
inline void YouMeIM_Command_RedirectResponse::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
}
inline void YouMeIM_Command_RedirectResponse::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
}
inline ::std::string* YouMeIM_Command_RedirectResponse::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
  return ip_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RedirectResponse::release_ip() {
  clear_has_ip();
  return ip_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RedirectResponse::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RedirectResponse.ip)
}

// required int32 port = 3;
inline bool YouMeIM_Command_RedirectResponse::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_RedirectResponse::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_RedirectResponse::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_RedirectResponse::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::youmecommon::protobuf::int32 YouMeIM_Command_RedirectResponse::port() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RedirectResponse.port)
  return port_;
}
inline void YouMeIM_Command_RedirectResponse::set_port(::youmecommon::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RedirectResponse.port)
}

// optional int32 timeout = 4;
inline bool YouMeIM_Command_RedirectResponse::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_RedirectResponse::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_RedirectResponse::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_RedirectResponse::clear_timeout() {
  timeout_ = 0;
  clear_has_timeout();
}
inline ::youmecommon::protobuf::int32 YouMeIM_Command_RedirectResponse::timeout() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RedirectResponse.timeout)
  return timeout_;
}
inline void YouMeIM_Command_RedirectResponse::set_timeout(::youmecommon::protobuf::int32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RedirectResponse.timeout)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_im_5fredirect_2eproto__INCLUDED
