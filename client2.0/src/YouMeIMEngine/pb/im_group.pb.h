// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_group.proto

#ifndef PROTOBUF_im_5fgroup_2eproto__INCLUDED
#define PROTOBUF_im_5fgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include "im_common.pb.h"
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_im_5fgroup_2eproto();
void protobuf_AssignDesc_im_5fgroup_2eproto();
void protobuf_ShutdownFile_im_5fgroup_2eproto();

class YouMeIM_Command_AgreeGroupInvited;
class YouMeIM_Command_CreateGroup;
class YouMeIM_Command_CreateGroupResponse;
class YouMeIM_Command_DestroyGroup;
class YouMeIM_Command_DestroyGroupResponse;
class YouMeIM_Command_GetAllGroup;
class YouMeIM_Command_GetAllGroupResponse;
class YouMeIM_Command_GetGroupInfo;
class YouMeIM_Command_GetGroupInfoResponse;
class YouMeIM_Command_GetGroupMembers;
class YouMeIM_Command_GetGroupMembersResponse;
class YouMeIM_Command_GroupDestroyed;
class YouMeIM_Command_GroupInvitedResponse;
class YouMeIM_Command_JoinGroup;
class YouMeIM_Command_JoinGroupInvited;
class YouMeIM_Command_JoinGroupResponse;
class YouMeIM_Command_JoinGroupResquest;
class YouMeIM_Command_KickoutMember;
class YouMeIM_Command_KickoutMemberResponse;
class YouMeIM_Command_LeaveGroup;
class YouMeIM_Command_LeaveGroupResponse;
class YouMeIM_Command_OtherJoinGroup;
class YouMeIM_Command_OtherKickoutedFromGroup;
class YouMeIM_Command_OtherLeaveGroup;
class YouMeIM_Command_RefuseGroupInvited;
class YouMeIM_GroupInfo;
class YouMeIM_MemberInfo;

enum YouMeIM_GroupType {
  GroupType_Group = 0,
  GroupType_ChatRoom = 1
};
bool YouMeIM_GroupType_IsValid(int value);
const YouMeIM_GroupType YouMeIM_GroupType_MIN = GroupType_Group;
const YouMeIM_GroupType YouMeIM_GroupType_MAX = GroupType_ChatRoom;
const int YouMeIM_GroupType_ARRAYSIZE = YouMeIM_GroupType_MAX + 1;

enum YouMeIM_GroupPermission {
  GroupPermission_None = 0,
  GroupPermission_Common = 1,
  GroupPermission_AddMember = 2,
  GroupPermission_Kickout = 4,
  GroupPermission_ModifyGroupInfo = 8,
  GroupPermission_ModifyMemberInfo = 16,
  GroupPermission_All = -1
};
bool YouMeIM_GroupPermission_IsValid(int value);
const YouMeIM_GroupPermission YouMeIM_GroupPermission_MIN = GroupPermission_All;
const YouMeIM_GroupPermission YouMeIM_GroupPermission_MAX = GroupPermission_ModifyMemberInfo;
const int YouMeIM_GroupPermission_ARRAYSIZE = YouMeIM_GroupPermission_MAX + 1;

enum YouMeIM_JoinGroupEvent {
  JoinGroupEvent_Agree = 0,
  JoinGroupEvent_Refuse = 1
};
bool YouMeIM_JoinGroupEvent_IsValid(int value);
const YouMeIM_JoinGroupEvent YouMeIM_JoinGroupEvent_MIN = JoinGroupEvent_Agree;
const YouMeIM_JoinGroupEvent YouMeIM_JoinGroupEvent_MAX = JoinGroupEvent_Refuse;
const int YouMeIM_JoinGroupEvent_ARRAYSIZE = YouMeIM_JoinGroupEvent_MAX + 1;

// ===================================================================

class YouMeIM_GroupInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_GroupInfo();
  virtual ~YouMeIM_GroupInfo();

  YouMeIM_GroupInfo(const YouMeIM_GroupInfo& from);

  inline YouMeIM_GroupInfo& operator=(const YouMeIM_GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_GroupInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_GroupInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_GroupInfo* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_GroupInfo* New() const { return New(NULL); }

  YouMeIM_GroupInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_GroupInfo& from);
  void MergeFrom(const YouMeIM_GroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_GroupInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string groupID = 1;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string groupName = 2;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
  bool has_grouptype() const;
  void clear_grouptype();
  static const int kGroupTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_GroupType grouptype() const;
  void set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_GroupInfo)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_groupname();
  inline void clear_has_groupname();
  inline void set_has_grouptype();
  inline void clear_has_grouptype();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupname_;
  int grouptype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_GroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_MemberInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_MemberInfo();
  virtual ~YouMeIM_MemberInfo();

  YouMeIM_MemberInfo(const YouMeIM_MemberInfo& from);

  inline YouMeIM_MemberInfo& operator=(const YouMeIM_MemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_MemberInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_MemberInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_MemberInfo* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_MemberInfo* New() const { return New(NULL); }

  YouMeIM_MemberInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_MemberInfo& from);
  void MergeFrom(const YouMeIM_MemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_MemberInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string YOUMEID = 1;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 1;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::youmecommon::protobuf::int32 status() const;
  void set_status(::youmecommon::protobuf::int32 value);

  // required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
  bool has_memberpower() const;
  void clear_memberpower();
  static const int kMemberPowerFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_GroupPermission memberpower() const;
  void set_memberpower(::YouMeIMProtocol::YouMeIM_GroupPermission value);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_MemberInfo)
 private:
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_memberpower();
  inline void clear_has_memberpower();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::int32 status_;
  int memberpower_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_MemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetGroupInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetGroupInfo();
  virtual ~YouMeIM_Command_GetGroupInfo();

  YouMeIM_Command_GetGroupInfo(const YouMeIM_Command_GetGroupInfo& from);

  inline YouMeIM_Command_GetGroupInfo& operator=(const YouMeIM_Command_GetGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetGroupInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetGroupInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetGroupInfo* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetGroupInfo* New() const { return New(NULL); }

  YouMeIM_Command_GetGroupInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetGroupInfo& from);
  void MergeFrom(const YouMeIM_Command_GetGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetGroupInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetGroupInfoResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetGroupInfoResponse();
  virtual ~YouMeIM_Command_GetGroupInfoResponse();

  YouMeIM_Command_GetGroupInfoResponse(const YouMeIM_Command_GetGroupInfoResponse& from);

  inline YouMeIM_Command_GetGroupInfoResponse& operator=(const YouMeIM_Command_GetGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetGroupInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetGroupInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetGroupInfoResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetGroupInfoResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetGroupInfoResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetGroupInfoResponse& from);
  void MergeFrom(const YouMeIM_Command_GetGroupInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetGroupInfoResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_GroupInfo& groupinfo() const;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* mutable_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* release_groupinfo();
  void set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetGroupInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetAllGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetAllGroup();
  virtual ~YouMeIM_Command_GetAllGroup();

  YouMeIM_Command_GetAllGroup(const YouMeIM_Command_GetAllGroup& from);

  inline YouMeIM_Command_GetAllGroup& operator=(const YouMeIM_Command_GetAllGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetAllGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetAllGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetAllGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetAllGroup* New() const { return New(NULL); }

  YouMeIM_Command_GetAllGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetAllGroup& from);
  void MergeFrom(const YouMeIM_Command_GetAllGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetAllGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetAllGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetAllGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetAllGroupResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetAllGroupResponse();
  virtual ~YouMeIM_Command_GetAllGroupResponse();

  YouMeIM_Command_GetAllGroupResponse(const YouMeIM_Command_GetAllGroupResponse& from);

  inline YouMeIM_Command_GetAllGroupResponse& operator=(const YouMeIM_Command_GetAllGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetAllGroupResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetAllGroupResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetAllGroupResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetAllGroupResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetAllGroupResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetAllGroupResponse& from);
  void MergeFrom(const YouMeIM_Command_GetAllGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetAllGroupResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
  int groupinfos_size() const;
  void clear_groupinfos();
  static const int kGroupInfosFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_GroupInfo& groupinfos(int index) const;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* mutable_groupinfos(int index);
  ::YouMeIMProtocol::YouMeIM_GroupInfo* add_groupinfos();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >*
      mutable_groupinfos();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >&
      groupinfos() const;

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo > groupinfos_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetAllGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_CreateGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_CreateGroup();
  virtual ~YouMeIM_Command_CreateGroup();

  YouMeIM_Command_CreateGroup(const YouMeIM_Command_CreateGroup& from);

  inline YouMeIM_Command_CreateGroup& operator=(const YouMeIM_Command_CreateGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_CreateGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_CreateGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_CreateGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_CreateGroup* New() const { return New(NULL); }

  YouMeIM_Command_CreateGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_CreateGroup& from);
  void MergeFrom(const YouMeIM_Command_CreateGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_CreateGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
  bool has_grouptype() const;
  void clear_grouptype();
  static const int kGroupTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_GroupType grouptype() const;
  void set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value);

  // required string groupName = 3;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupNameFieldNumber = 3;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_CreateGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_grouptype();
  inline void clear_has_grouptype();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupname_;
  int grouptype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_CreateGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_CreateGroupResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_CreateGroupResponse();
  virtual ~YouMeIM_Command_CreateGroupResponse();

  YouMeIM_Command_CreateGroupResponse(const YouMeIM_Command_CreateGroupResponse& from);

  inline YouMeIM_Command_CreateGroupResponse& operator=(const YouMeIM_Command_CreateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_CreateGroupResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_CreateGroupResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_CreateGroupResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_CreateGroupResponse* New() const { return New(NULL); }

  YouMeIM_Command_CreateGroupResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_CreateGroupResponse& from);
  void MergeFrom(const YouMeIM_Command_CreateGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_CreateGroupResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 2;
  const ::YouMeIMProtocol::YouMeIM_GroupInfo& groupinfo() const;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* mutable_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* release_groupinfo();
  void set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_CreateGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_DestroyGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_DestroyGroup();
  virtual ~YouMeIM_Command_DestroyGroup();

  YouMeIM_Command_DestroyGroup(const YouMeIM_Command_DestroyGroup& from);

  inline YouMeIM_Command_DestroyGroup& operator=(const YouMeIM_Command_DestroyGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_DestroyGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_DestroyGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_DestroyGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_DestroyGroup* New() const { return New(NULL); }

  YouMeIM_Command_DestroyGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_DestroyGroup& from);
  void MergeFrom(const YouMeIM_Command_DestroyGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_DestroyGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_DestroyGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_DestroyGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_DestroyGroupResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_DestroyGroupResponse();
  virtual ~YouMeIM_Command_DestroyGroupResponse();

  YouMeIM_Command_DestroyGroupResponse(const YouMeIM_Command_DestroyGroupResponse& from);

  inline YouMeIM_Command_DestroyGroupResponse& operator=(const YouMeIM_Command_DestroyGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_DestroyGroupResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_DestroyGroupResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_DestroyGroupResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_DestroyGroupResponse* New() const { return New(NULL); }

  YouMeIM_Command_DestroyGroupResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_DestroyGroupResponse& from);
  void MergeFrom(const YouMeIM_Command_DestroyGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_DestroyGroupResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_DestroyGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GroupDestroyed : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GroupDestroyed();
  virtual ~YouMeIM_Command_GroupDestroyed();

  YouMeIM_Command_GroupDestroyed(const YouMeIM_Command_GroupDestroyed& from);

  inline YouMeIM_Command_GroupDestroyed& operator=(const YouMeIM_Command_GroupDestroyed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GroupDestroyed& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GroupDestroyed* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GroupDestroyed* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GroupDestroyed* New() const { return New(NULL); }

  YouMeIM_Command_GroupDestroyed* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GroupDestroyed& from);
  void MergeFrom(const YouMeIM_Command_GroupDestroyed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GroupDestroyed* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GroupDestroyed* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_JoinGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_JoinGroup();
  virtual ~YouMeIM_Command_JoinGroup();

  YouMeIM_Command_JoinGroup(const YouMeIM_Command_JoinGroup& from);

  inline YouMeIM_Command_JoinGroup& operator=(const YouMeIM_Command_JoinGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_JoinGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_JoinGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_JoinGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_JoinGroup* New() const { return New(NULL); }

  YouMeIM_Command_JoinGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_JoinGroup& from);
  void MergeFrom(const YouMeIM_Command_JoinGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_JoinGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
  bool has_grouptype() const;
  void clear_grouptype();
  static const int kGroupTypeFieldNumber = 3;
  ::YouMeIMProtocol::YouMeIM_GroupType grouptype() const;
  void set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value);

  // optional string reason = 4;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_JoinGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_grouptype();
  inline void clear_has_grouptype();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  int grouptype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_JoinGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_JoinGroupResquest : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_JoinGroupResquest();
  virtual ~YouMeIM_Command_JoinGroupResquest();

  YouMeIM_Command_JoinGroupResquest(const YouMeIM_Command_JoinGroupResquest& from);

  inline YouMeIM_Command_JoinGroupResquest& operator=(const YouMeIM_Command_JoinGroupResquest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_JoinGroupResquest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_JoinGroupResquest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_JoinGroupResquest* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_JoinGroupResquest* New() const { return New(NULL); }

  YouMeIM_Command_JoinGroupResquest* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_JoinGroupResquest& from);
  void MergeFrom(const YouMeIM_Command_JoinGroupResquest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_JoinGroupResquest* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_JoinGroupResquest* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_JoinGroupInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_JoinGroupInvited();
  virtual ~YouMeIM_Command_JoinGroupInvited();

  YouMeIM_Command_JoinGroupInvited(const YouMeIM_Command_JoinGroupInvited& from);

  inline YouMeIM_Command_JoinGroupInvited& operator=(const YouMeIM_Command_JoinGroupInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_JoinGroupInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_JoinGroupInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_JoinGroupInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_JoinGroupInvited* New() const { return New(NULL); }

  YouMeIM_Command_JoinGroupInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_JoinGroupInvited& from);
  void MergeFrom(const YouMeIM_Command_JoinGroupInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_JoinGroupInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // optional string reason = 4;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_JoinGroupInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_AgreeGroupInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_AgreeGroupInvited();
  virtual ~YouMeIM_Command_AgreeGroupInvited();

  YouMeIM_Command_AgreeGroupInvited(const YouMeIM_Command_AgreeGroupInvited& from);

  inline YouMeIM_Command_AgreeGroupInvited& operator=(const YouMeIM_Command_AgreeGroupInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_AgreeGroupInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_AgreeGroupInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_AgreeGroupInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_AgreeGroupInvited* New() const { return New(NULL); }

  YouMeIM_Command_AgreeGroupInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_AgreeGroupInvited& from);
  void MergeFrom(const YouMeIM_Command_AgreeGroupInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_AgreeGroupInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_AgreeGroupInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_RefuseGroupInvited : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_RefuseGroupInvited();
  virtual ~YouMeIM_Command_RefuseGroupInvited();

  YouMeIM_Command_RefuseGroupInvited(const YouMeIM_Command_RefuseGroupInvited& from);

  inline YouMeIM_Command_RefuseGroupInvited& operator=(const YouMeIM_Command_RefuseGroupInvited& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_RefuseGroupInvited& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_RefuseGroupInvited* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_RefuseGroupInvited* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_RefuseGroupInvited* New() const { return New(NULL); }

  YouMeIM_Command_RefuseGroupInvited* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_RefuseGroupInvited& from);
  void MergeFrom(const YouMeIM_Command_RefuseGroupInvited& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_RefuseGroupInvited* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // optional string reaseon = 4;
  bool has_reaseon() const;
  void clear_reaseon();
  static const int kReaseonFieldNumber = 4;
  const ::std::string& reaseon() const;
  void set_reaseon(const ::std::string& value);
  void set_reaseon(const char* value);
  void set_reaseon(const char* value, size_t size);
  ::std::string* mutable_reaseon();
  ::std::string* release_reaseon();
  void set_allocated_reaseon(::std::string* reaseon);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_reaseon();
  inline void clear_has_reaseon();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reaseon_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_RefuseGroupInvited* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GroupInvitedResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GroupInvitedResponse();
  virtual ~YouMeIM_Command_GroupInvitedResponse();

  YouMeIM_Command_GroupInvitedResponse(const YouMeIM_Command_GroupInvitedResponse& from);

  inline YouMeIM_Command_GroupInvitedResponse& operator=(const YouMeIM_Command_GroupInvitedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GroupInvitedResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GroupInvitedResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GroupInvitedResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GroupInvitedResponse* New() const { return New(NULL); }

  YouMeIM_Command_GroupInvitedResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GroupInvitedResponse& from);
  void MergeFrom(const YouMeIM_Command_GroupInvitedResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GroupInvitedResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
  bool has_evttype() const;
  void clear_evttype();
  static const int kEvtTypeFieldNumber = 4;
  ::YouMeIMProtocol::YouMeIM_JoinGroupEvent evttype() const;
  void set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();
  inline void set_has_evttype();
  inline void clear_has_evttype();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  int evttype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GroupInvitedResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_JoinGroupResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_JoinGroupResponse();
  virtual ~YouMeIM_Command_JoinGroupResponse();

  YouMeIM_Command_JoinGroupResponse(const YouMeIM_Command_JoinGroupResponse& from);

  inline YouMeIM_Command_JoinGroupResponse& operator=(const YouMeIM_Command_JoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_JoinGroupResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_JoinGroupResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_JoinGroupResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_JoinGroupResponse* New() const { return New(NULL); }

  YouMeIM_Command_JoinGroupResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_JoinGroupResponse& from);
  void MergeFrom(const YouMeIM_Command_JoinGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_JoinGroupResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
  bool has_evttype() const;
  void clear_evttype();
  static const int kEvtTypeFieldNumber = 2;
  ::YouMeIMProtocol::YouMeIM_JoinGroupEvent evttype() const;
  void set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value);

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 3;
  const ::YouMeIMProtocol::YouMeIM_GroupInfo& groupinfo() const;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* mutable_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* release_groupinfo();
  void set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_evttype();
  inline void clear_has_evttype();
  inline void set_has_groupinfo();
  inline void clear_has_groupinfo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo_;
  int evttype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_JoinGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_OtherJoinGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_OtherJoinGroup();
  virtual ~YouMeIM_Command_OtherJoinGroup();

  YouMeIM_Command_OtherJoinGroup(const YouMeIM_Command_OtherJoinGroup& from);

  inline YouMeIM_Command_OtherJoinGroup& operator=(const YouMeIM_Command_OtherJoinGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_OtherJoinGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_OtherJoinGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_OtherJoinGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_OtherJoinGroup* New() const { return New(NULL); }

  YouMeIM_Command_OtherJoinGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_OtherJoinGroup& from);
  void MergeFrom(const YouMeIM_Command_OtherJoinGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_OtherJoinGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
  bool has_memberinfo() const;
  void clear_memberinfo();
  static const int kMemberInfoFieldNumber = 3;
  const ::YouMeIMProtocol::YouMeIM_MemberInfo& memberinfo() const;
  ::YouMeIMProtocol::YouMeIM_MemberInfo* mutable_memberinfo();
  ::YouMeIMProtocol::YouMeIM_MemberInfo* release_memberinfo();
  void set_allocated_memberinfo(::YouMeIMProtocol::YouMeIM_MemberInfo* memberinfo);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_memberinfo();
  inline void clear_has_memberinfo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::YouMeIMProtocol::YouMeIM_MemberInfo* memberinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_OtherJoinGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_LeaveGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_LeaveGroup();
  virtual ~YouMeIM_Command_LeaveGroup();

  YouMeIM_Command_LeaveGroup(const YouMeIM_Command_LeaveGroup& from);

  inline YouMeIM_Command_LeaveGroup& operator=(const YouMeIM_Command_LeaveGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_LeaveGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_LeaveGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_LeaveGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_LeaveGroup* New() const { return New(NULL); }

  YouMeIM_Command_LeaveGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_LeaveGroup& from);
  void MergeFrom(const YouMeIM_Command_LeaveGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_LeaveGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_LeaveGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_LeaveGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_LeaveGroupResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_LeaveGroupResponse();
  virtual ~YouMeIM_Command_LeaveGroupResponse();

  YouMeIM_Command_LeaveGroupResponse(const YouMeIM_Command_LeaveGroupResponse& from);

  inline YouMeIM_Command_LeaveGroupResponse& operator=(const YouMeIM_Command_LeaveGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_LeaveGroupResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_LeaveGroupResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_LeaveGroupResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_LeaveGroupResponse* New() const { return New(NULL); }

  YouMeIM_Command_LeaveGroupResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_LeaveGroupResponse& from);
  void MergeFrom(const YouMeIM_Command_LeaveGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_LeaveGroupResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_LeaveGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_OtherLeaveGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_OtherLeaveGroup();
  virtual ~YouMeIM_Command_OtherLeaveGroup();

  YouMeIM_Command_OtherLeaveGroup(const YouMeIM_Command_OtherLeaveGroup& from);

  inline YouMeIM_Command_OtherLeaveGroup& operator=(const YouMeIM_Command_OtherLeaveGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_OtherLeaveGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_OtherLeaveGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_OtherLeaveGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_OtherLeaveGroup* New() const { return New(NULL); }

  YouMeIM_Command_OtherLeaveGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_OtherLeaveGroup& from);
  void MergeFrom(const YouMeIM_Command_OtherLeaveGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_OtherLeaveGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 3;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 4;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 4;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_OtherLeaveGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_KickoutMember : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_KickoutMember();
  virtual ~YouMeIM_Command_KickoutMember();

  YouMeIM_Command_KickoutMember(const YouMeIM_Command_KickoutMember& from);

  inline YouMeIM_Command_KickoutMember& operator=(const YouMeIM_Command_KickoutMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_KickoutMember& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_KickoutMember* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_KickoutMember* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_KickoutMember* New() const { return New(NULL); }

  YouMeIM_Command_KickoutMember* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_KickoutMember& from);
  void MergeFrom(const YouMeIM_Command_KickoutMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_KickoutMember* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_KickoutMember)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_KickoutMember* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_KickoutMemberResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_KickoutMemberResponse();
  virtual ~YouMeIM_Command_KickoutMemberResponse();

  YouMeIM_Command_KickoutMemberResponse(const YouMeIM_Command_KickoutMemberResponse& from);

  inline YouMeIM_Command_KickoutMemberResponse& operator=(const YouMeIM_Command_KickoutMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_KickoutMemberResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_KickoutMemberResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_KickoutMemberResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_KickoutMemberResponse* New() const { return New(NULL); }

  YouMeIM_Command_KickoutMemberResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_KickoutMemberResponse& from);
  void MergeFrom(const YouMeIM_Command_KickoutMemberResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_KickoutMemberResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEID = 3;
  bool has_youmeid() const;
  void clear_youmeid();
  static const int kYOUMEIDFieldNumber = 3;
  const ::std::string& youmeid() const;
  void set_youmeid(const ::std::string& value);
  void set_youmeid(const char* value);
  void set_youmeid(const char* value, size_t size);
  ::std::string* mutable_youmeid();
  ::std::string* release_youmeid();
  void set_allocated_youmeid(::std::string* youmeid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeid();
  inline void clear_has_youmeid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_KickoutMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_OtherKickoutedFromGroup : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_OtherKickoutedFromGroup();
  virtual ~YouMeIM_Command_OtherKickoutedFromGroup();

  YouMeIM_Command_OtherKickoutedFromGroup(const YouMeIM_Command_OtherKickoutedFromGroup& from);

  inline YouMeIM_Command_OtherKickoutedFromGroup& operator=(const YouMeIM_Command_OtherKickoutedFromGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_OtherKickoutedFromGroup& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_OtherKickoutedFromGroup* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_OtherKickoutedFromGroup* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_OtherKickoutedFromGroup* New() const { return New(NULL); }

  YouMeIM_Command_OtherKickoutedFromGroup* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_OtherKickoutedFromGroup& from);
  void MergeFrom(const YouMeIM_Command_OtherKickoutedFromGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_OtherKickoutedFromGroup* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // required string YOUMEIID = 3;
  bool has_youmeiid() const;
  void clear_youmeiid();
  static const int kYOUMEIIDFieldNumber = 3;
  const ::std::string& youmeiid() const;
  void set_youmeiid(const ::std::string& value);
  void set_youmeiid(const char* value);
  void set_youmeiid(const char* value, size_t size);
  ::std::string* mutable_youmeiid();
  ::std::string* release_youmeiid();
  void set_allocated_youmeiid(::std::string* youmeiid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_youmeiid();
  inline void clear_has_youmeiid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr youmeiid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_OtherKickoutedFromGroup* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetGroupMembers : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetGroupMembers();
  virtual ~YouMeIM_Command_GetGroupMembers();

  YouMeIM_Command_GetGroupMembers(const YouMeIM_Command_GetGroupMembers& from);

  inline YouMeIM_Command_GetGroupMembers& operator=(const YouMeIM_Command_GetGroupMembers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetGroupMembers& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetGroupMembers* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetGroupMembers* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetGroupMembers* New() const { return New(NULL); }

  YouMeIM_Command_GetGroupMembers* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetGroupMembers& from);
  void MergeFrom(const YouMeIM_Command_GetGroupMembers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetGroupMembers* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.PacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::PacketHead& msghead() const;
  ::YouMeIMProtocol::PacketHead* mutable_msghead();
  ::YouMeIMProtocol::PacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::PacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetGroupMembers* default_instance_;
};
// -------------------------------------------------------------------

class YouMeIM_Command_GetGroupMembersResponse : public ::youmecommon::protobuf::MessageLite {
 public:
  YouMeIM_Command_GetGroupMembersResponse();
  virtual ~YouMeIM_Command_GetGroupMembersResponse();

  YouMeIM_Command_GetGroupMembersResponse(const YouMeIM_Command_GetGroupMembersResponse& from);

  inline YouMeIM_Command_GetGroupMembersResponse& operator=(const YouMeIM_Command_GetGroupMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YouMeIM_Command_GetGroupMembersResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YouMeIM_Command_GetGroupMembersResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YouMeIM_Command_GetGroupMembersResponse* other);

  // implements Message ----------------------------------------------

  inline YouMeIM_Command_GetGroupMembersResponse* New() const { return New(NULL); }

  YouMeIM_Command_GetGroupMembersResponse* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YouMeIM_Command_GetGroupMembersResponse& from);
  void MergeFrom(const YouMeIM_Command_GetGroupMembersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YouMeIM_Command_GetGroupMembersResponse* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::YouMeIMProtocol::ServerPacketHead& msghead() const;
  ::YouMeIMProtocol::ServerPacketHead* mutable_msghead();
  ::YouMeIMProtocol::ServerPacketHead* release_msghead();
  void set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead);

  // required string groupID = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  const ::std::string& groupid() const;
  void set_groupid(const ::std::string& value);
  void set_groupid(const char* value);
  void set_groupid(const char* value, size_t size);
  ::std::string* mutable_groupid();
  ::std::string* release_groupid();
  void set_allocated_groupid(::std::string* groupid);

  // repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
  int memberinfo_size() const;
  void clear_memberinfo();
  static const int kMemberInfoFieldNumber = 3;
  const ::YouMeIMProtocol::YouMeIM_MemberInfo& memberinfo(int index) const;
  ::YouMeIMProtocol::YouMeIM_MemberInfo* mutable_memberinfo(int index);
  ::YouMeIMProtocol::YouMeIM_MemberInfo* add_memberinfo();
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >*
      mutable_memberinfo();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >&
      memberinfo() const;

  // @@protoc_insertion_point(class_scope:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_groupid();
  inline void clear_has_groupid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::YouMeIMProtocol::ServerPacketHead* msghead_;
  ::youmecommon::protobuf::internal::ArenaStringPtr groupid_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo > memberinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_im_5fgroup_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_im_5fgroup_2eproto();
  #endif
  friend void protobuf_AssignDesc_im_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_im_5fgroup_2eproto();

  void InitAsDefaultInstance();
  static YouMeIM_Command_GetGroupMembersResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_GroupInfo

// required string groupID = 1;
inline bool YouMeIM_GroupInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_GroupInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_GroupInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_GroupInfo::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_GroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_GroupInfo::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
inline void YouMeIM_GroupInfo::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
inline void YouMeIM_GroupInfo::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
inline ::std::string* YouMeIM_GroupInfo::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_GroupInfo.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_GroupInfo::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_GroupInfo::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}

// required string groupName = 2;
inline bool YouMeIM_GroupInfo::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_GroupInfo::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_GroupInfo::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_GroupInfo::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& YouMeIM_GroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupName)
  return groupname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_GroupInfo::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
inline void YouMeIM_GroupInfo::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
inline void YouMeIM_GroupInfo::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
inline ::std::string* YouMeIM_GroupInfo::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_GroupInfo.groupName)
  return groupname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_GroupInfo::release_groupname() {
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_GroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
inline bool YouMeIM_GroupInfo::has_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_GroupInfo::set_has_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_GroupInfo::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_GroupInfo::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
inline ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_GroupInfo::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
inline void YouMeIM_GroupInfo::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupType)
}

// -------------------------------------------------------------------

// YouMeIM_MemberInfo

// required string YOUMEID = 1;
inline bool YouMeIM_MemberInfo::has_youmeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_MemberInfo::set_has_youmeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_MemberInfo::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_MemberInfo::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_MemberInfo::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MemberInfo::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
inline void YouMeIM_MemberInfo::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
inline void YouMeIM_MemberInfo::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
inline ::std::string* YouMeIM_MemberInfo::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_MemberInfo::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_MemberInfo::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}

// required int32 status = 2;
inline bool YouMeIM_MemberInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_MemberInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_MemberInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_MemberInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::youmecommon::protobuf::int32 YouMeIM_MemberInfo::status() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.status)
  return status_;
}
inline void YouMeIM_MemberInfo::set_status(::youmecommon::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.status)
}

// required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
inline bool YouMeIM_MemberInfo::has_memberpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_MemberInfo::set_has_memberpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_MemberInfo::clear_has_memberpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_MemberInfo::clear_memberpower() {
  memberpower_ = 0;
  clear_has_memberpower();
}
inline ::YouMeIMProtocol::YouMeIM_GroupPermission YouMeIM_MemberInfo::memberpower() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.memberPower)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupPermission >(memberpower_);
}
inline void YouMeIM_MemberInfo::set_memberpower(::YouMeIMProtocol::YouMeIM_GroupPermission value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupPermission_IsValid(value));
  set_has_memberpower();
  memberpower_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.memberPower)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetGroupInfo

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetGroupInfo::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetGroupInfo::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetGroupInfo::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetGroupInfo::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetGroupInfo::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupInfo::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupInfo::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetGroupInfo::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_GetGroupInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetGroupInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetGroupInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetGroupInfo::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_GetGroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupInfo::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
inline void YouMeIM_Command_GetGroupInfo::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
inline void YouMeIM_Command_GetGroupInfo::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
inline ::std::string* YouMeIM_Command_GetGroupInfo::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetGroupInfo::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupInfo::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetGroupInfoResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetGroupInfoResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetGroupInfoResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetGroupInfoResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetGroupInfoResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetGroupInfoResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupInfoResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupInfoResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetGroupInfoResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
inline bool YouMeIM_Command_GetGroupInfoResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetGroupInfoResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetGroupInfoResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetGroupInfoResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_GetGroupInfoResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetGroupInfoResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
  return groupinfo_;
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetGroupInfoResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetGroupInfoResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetAllGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetAllGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetAllGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetAllGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetAllGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetAllGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetAllGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetAllGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetAllGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetAllGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetAllGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetAllGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetAllGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetAllGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetAllGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetAllGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetAllGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetAllGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
}

// repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
inline int YouMeIM_Command_GetAllGroupResponse::groupinfos_size() const {
  return groupinfos_.size();
}
inline void YouMeIM_Command_GetAllGroupResponse::clear_groupinfos() {
  groupinfos_.Clear();
}
inline const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_GetAllGroupResponse::groupinfos(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Get(index);
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetAllGroupResponse::mutable_groupinfos(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Mutable(index);
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetAllGroupResponse::add_groupinfos() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >*
YouMeIM_Command_GetAllGroupResponse::mutable_groupinfos() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return &groupinfos_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >&
YouMeIM_Command_GetAllGroupResponse::groupinfos() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_;
}

// -------------------------------------------------------------------

// YouMeIM_Command_CreateGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_CreateGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_CreateGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_CreateGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_CreateGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_CreateGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_CreateGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_CreateGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_CreateGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
inline bool YouMeIM_Command_CreateGroup::has_grouptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_CreateGroup::set_has_grouptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_CreateGroup::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_CreateGroup::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
inline ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_Command_CreateGroup::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
inline void YouMeIM_Command_CreateGroup::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_CreateGroup.groupType)
}

// required string groupName = 3;
inline bool YouMeIM_Command_CreateGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_CreateGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_CreateGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_CreateGroup::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& YouMeIM_Command_CreateGroup::groupname() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
  return groupname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_CreateGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
inline void YouMeIM_Command_CreateGroup::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
inline void YouMeIM_Command_CreateGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
inline ::std::string* YouMeIM_Command_CreateGroup::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
  return groupname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_CreateGroup::release_groupname() {
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_CreateGroup::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}

// -------------------------------------------------------------------

// YouMeIM_Command_CreateGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_CreateGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_CreateGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_CreateGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_CreateGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_CreateGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_CreateGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_CreateGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_CreateGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
inline bool YouMeIM_Command_CreateGroupResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_CreateGroupResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_CreateGroupResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_CreateGroupResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_CreateGroupResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_CreateGroupResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
  return groupinfo_;
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_CreateGroupResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_CreateGroupResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
}

// -------------------------------------------------------------------

// YouMeIM_Command_DestroyGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_DestroyGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_DestroyGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_DestroyGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_DestroyGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_DestroyGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DestroyGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_DestroyGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_DestroyGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_DestroyGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_DestroyGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_DestroyGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_DestroyGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_DestroyGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DestroyGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
inline void YouMeIM_Command_DestroyGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
inline void YouMeIM_Command_DestroyGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
inline ::std::string* YouMeIM_Command_DestroyGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_DestroyGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DestroyGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_DestroyGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_DestroyGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_DestroyGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_DestroyGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_DestroyGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_DestroyGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DestroyGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DestroyGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_DestroyGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_DestroyGroupResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_DestroyGroupResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_DestroyGroupResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_DestroyGroupResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_DestroyGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DestroyGroupResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
inline void YouMeIM_Command_DestroyGroupResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
inline void YouMeIM_Command_DestroyGroupResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
inline ::std::string* YouMeIM_Command_DestroyGroupResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_DestroyGroupResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_DestroyGroupResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GroupDestroyed

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GroupDestroyed::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GroupDestroyed::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GroupDestroyed::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GroupDestroyed::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GroupDestroyed::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupDestroyed::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupDestroyed::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GroupDestroyed::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_GroupDestroyed::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GroupDestroyed::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GroupDestroyed::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GroupDestroyed::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_GroupDestroyed::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupDestroyed::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
inline void YouMeIM_Command_GroupDestroyed::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
inline void YouMeIM_Command_GroupDestroyed::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
inline ::std::string* YouMeIM_Command_GroupDestroyed::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GroupDestroyed::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupDestroyed::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_JoinGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_JoinGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_JoinGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_JoinGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_JoinGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_JoinGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_JoinGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_JoinGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_JoinGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_JoinGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_JoinGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_JoinGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_JoinGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_JoinGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
inline void YouMeIM_Command_JoinGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
inline void YouMeIM_Command_JoinGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
inline ::std::string* YouMeIM_Command_JoinGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
inline bool YouMeIM_Command_JoinGroup::has_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_JoinGroup::set_has_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_JoinGroup::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_JoinGroup::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
inline ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_Command_JoinGroup::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
inline void YouMeIM_Command_JoinGroup::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.groupType)
}

// optional string reason = 4;
inline bool YouMeIM_Command_JoinGroup::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_JoinGroup::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_JoinGroup::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_JoinGroup::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& YouMeIM_Command_JoinGroup::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroup::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
inline void YouMeIM_Command_JoinGroup::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
inline void YouMeIM_Command_JoinGroup::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
inline ::std::string* YouMeIM_Command_JoinGroup::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroup::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroup::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}

// -------------------------------------------------------------------

// YouMeIM_Command_JoinGroupResquest

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_JoinGroupResquest::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_JoinGroupResquest::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_JoinGroupResquest::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_JoinGroupResquest::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupResquest::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResquest::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResquest::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_JoinGroupResquest::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_JoinGroupResquest::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_JoinGroupResquest::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_JoinGroupResquest::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_JoinGroupResquest::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_JoinGroupResquest::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupResquest::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
inline void YouMeIM_Command_JoinGroupResquest::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
inline void YouMeIM_Command_JoinGroupResquest::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
inline ::std::string* YouMeIM_Command_JoinGroupResquest::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroupResquest::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupResquest::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_JoinGroupInvited

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_JoinGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_JoinGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_JoinGroupInvited::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_JoinGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_JoinGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_JoinGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
inline void YouMeIM_Command_JoinGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
inline void YouMeIM_Command_JoinGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_JoinGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_JoinGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_JoinGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_JoinGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_JoinGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}

// optional string reason = 4;
inline bool YouMeIM_Command_JoinGroupInvited::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_JoinGroupInvited::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_JoinGroupInvited::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& YouMeIM_Command_JoinGroupInvited::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
inline void YouMeIM_Command_JoinGroupInvited::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
inline void YouMeIM_Command_JoinGroupInvited::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_JoinGroupInvited::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_JoinGroupInvited::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}

// -------------------------------------------------------------------

// YouMeIM_Command_AgreeGroupInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_AgreeGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_AgreeGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_AgreeGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_AgreeGroupInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_AgreeGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_AgreeGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_AgreeGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
inline void YouMeIM_Command_AgreeGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
inline void YouMeIM_Command_AgreeGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
inline ::std::string* YouMeIM_Command_AgreeGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AgreeGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_AgreeGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_AgreeGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_AgreeGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_AgreeGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
inline ::std::string* YouMeIM_Command_AgreeGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_AgreeGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_AgreeGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_RefuseGroupInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_RefuseGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_RefuseGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_RefuseGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_RefuseGroupInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_RefuseGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_RefuseGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_RefuseGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_RefuseGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_RefuseGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_RefuseGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}

// optional string reaseon = 4;
inline bool YouMeIM_Command_RefuseGroupInvited::has_reaseon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_RefuseGroupInvited::set_has_reaseon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_has_reaseon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_RefuseGroupInvited::clear_reaseon() {
  reaseon_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reaseon();
}
inline const ::std::string& YouMeIM_Command_RefuseGroupInvited::reaseon() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
  return reaseon_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const ::std::string& value) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const char* value) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
inline void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const char* value, size_t size) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_reaseon() {
  set_has_reaseon();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
  return reaseon_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_RefuseGroupInvited::release_reaseon() {
  clear_has_reaseon();
  return reaseon_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_RefuseGroupInvited::set_allocated_reaseon(::std::string* reaseon) {
  if (reaseon != NULL) {
    set_has_reaseon();
  } else {
    clear_has_reaseon();
  }
  reaseon_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reaseon);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GroupInvitedResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GroupInvitedResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GroupInvitedResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GroupInvitedResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupInvitedResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupInvitedResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GroupInvitedResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_GroupInvitedResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GroupInvitedResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_GroupInvitedResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupInvitedResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
inline void YouMeIM_Command_GroupInvitedResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
inline void YouMeIM_Command_GroupInvitedResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
inline ::std::string* YouMeIM_Command_GroupInvitedResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GroupInvitedResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupInvitedResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_GroupInvitedResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_GroupInvitedResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_GroupInvitedResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
inline void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
inline void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_GroupInvitedResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GroupInvitedResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GroupInvitedResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}

// required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
inline bool YouMeIM_Command_GroupInvitedResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YouMeIM_Command_GroupInvitedResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YouMeIM_Command_GroupInvitedResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
inline ::YouMeIMProtocol::YouMeIM_JoinGroupEvent YouMeIM_Command_GroupInvitedResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(evttype_);
}
inline void YouMeIM_Command_GroupInvitedResponse::set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.evtType)
}

// -------------------------------------------------------------------

// YouMeIM_Command_JoinGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_JoinGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_JoinGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_JoinGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
}

// required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
inline bool YouMeIM_Command_JoinGroupResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_JoinGroupResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
inline ::YouMeIMProtocol::YouMeIM_JoinGroupEvent YouMeIM_Command_JoinGroupResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(evttype_);
}
inline void YouMeIM_Command_JoinGroupResponse::set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.evtType)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
inline bool YouMeIM_Command_JoinGroupResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_JoinGroupResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_JoinGroupResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
inline const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_JoinGroupResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_JoinGroupResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
  return groupinfo_;
}
inline ::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_JoinGroupResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_JoinGroupResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
}

// -------------------------------------------------------------------

// YouMeIM_Command_OtherJoinGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_OtherJoinGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_OtherJoinGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherJoinGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherJoinGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherJoinGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_OtherJoinGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_OtherJoinGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_OtherJoinGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_OtherJoinGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherJoinGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
inline void YouMeIM_Command_OtherJoinGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
inline void YouMeIM_Command_OtherJoinGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
inline ::std::string* YouMeIM_Command_OtherJoinGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_OtherJoinGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherJoinGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}

// required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
inline bool YouMeIM_Command_OtherJoinGroup::has_memberinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_OtherJoinGroup::set_has_memberinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_has_memberinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_OtherJoinGroup::clear_memberinfo() {
  if (memberinfo_ != NULL) memberinfo_->::YouMeIMProtocol::YouMeIM_MemberInfo::Clear();
  clear_has_memberinfo();
}
inline const ::YouMeIMProtocol::YouMeIM_MemberInfo& YouMeIM_Command_OtherJoinGroup::memberinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance().memberinfo_;
#else
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance_->memberinfo_;
#endif
}
inline ::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_OtherJoinGroup::mutable_memberinfo() {
  set_has_memberinfo();
  if (memberinfo_ == NULL) {
    memberinfo_ = new ::YouMeIMProtocol::YouMeIM_MemberInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
  return memberinfo_;
}
inline ::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_OtherJoinGroup::release_memberinfo() {
  clear_has_memberinfo();
  ::YouMeIMProtocol::YouMeIM_MemberInfo* temp = memberinfo_;
  memberinfo_ = NULL;
  return temp;
}
inline void YouMeIM_Command_OtherJoinGroup::set_allocated_memberinfo(::YouMeIMProtocol::YouMeIM_MemberInfo* memberinfo) {
  delete memberinfo_;
  memberinfo_ = memberinfo;
  if (memberinfo) {
    set_has_memberinfo();
  } else {
    clear_has_memberinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
}

// -------------------------------------------------------------------

// YouMeIM_Command_LeaveGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_LeaveGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_LeaveGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_LeaveGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_LeaveGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_LeaveGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_LeaveGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_LeaveGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_LeaveGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_LeaveGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_LeaveGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_LeaveGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_LeaveGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_LeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LeaveGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
inline void YouMeIM_Command_LeaveGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
inline void YouMeIM_Command_LeaveGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
inline ::std::string* YouMeIM_Command_LeaveGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LeaveGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LeaveGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_LeaveGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_LeaveGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_LeaveGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_LeaveGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_LeaveGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_LeaveGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LeaveGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LeaveGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_LeaveGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_LeaveGroupResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_LeaveGroupResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_LeaveGroupResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_LeaveGroupResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_LeaveGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LeaveGroupResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
inline void YouMeIM_Command_LeaveGroupResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
inline void YouMeIM_Command_LeaveGroupResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
inline ::std::string* YouMeIM_Command_LeaveGroupResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_LeaveGroupResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_LeaveGroupResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_OtherLeaveGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_OtherLeaveGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_OtherLeaveGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherLeaveGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherLeaveGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherLeaveGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_OtherLeaveGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
}

// required string groupID = 3;
inline bool YouMeIM_Command_OtherLeaveGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_OtherLeaveGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_OtherLeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherLeaveGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
inline void YouMeIM_Command_OtherLeaveGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
inline void YouMeIM_Command_OtherLeaveGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
inline ::std::string* YouMeIM_Command_OtherLeaveGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_OtherLeaveGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherLeaveGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}

// required string YOUMEID = 4;
inline bool YouMeIM_Command_OtherLeaveGroup::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_OtherLeaveGroup::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_OtherLeaveGroup::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_OtherLeaveGroup::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
inline void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
inline void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
inline ::std::string* YouMeIM_Command_OtherLeaveGroup::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_OtherLeaveGroup::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherLeaveGroup::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_KickoutMember

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_KickoutMember::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_KickoutMember::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_KickoutMember::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_KickoutMember::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_KickoutMember::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickoutMember::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickoutMember::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_KickoutMember::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_KickoutMember::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_KickoutMember::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_KickoutMember::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_KickoutMember::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_KickoutMember::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMember::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
inline void YouMeIM_Command_KickoutMember::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
inline void YouMeIM_Command_KickoutMember::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
inline ::std::string* YouMeIM_Command_KickoutMember::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickoutMember::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMember::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_KickoutMember::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_KickoutMember::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_KickoutMember::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_KickoutMember::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_KickoutMember::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMember::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
inline void YouMeIM_Command_KickoutMember::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
inline void YouMeIM_Command_KickoutMember::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
inline ::std::string* YouMeIM_Command_KickoutMember::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickoutMember::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMember::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_KickoutMemberResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_KickoutMemberResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_KickoutMemberResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_KickoutMemberResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickoutMemberResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickoutMemberResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_KickoutMemberResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_KickoutMemberResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_KickoutMemberResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_KickoutMemberResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMemberResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
inline void YouMeIM_Command_KickoutMemberResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
inline void YouMeIM_Command_KickoutMemberResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
inline ::std::string* YouMeIM_Command_KickoutMemberResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickoutMemberResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMemberResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}

// required string YOUMEID = 3;
inline bool YouMeIM_Command_KickoutMemberResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_KickoutMemberResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_KickoutMemberResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
inline const ::std::string& YouMeIM_Command_KickoutMemberResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
inline void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
inline void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
inline ::std::string* YouMeIM_Command_KickoutMemberResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_KickoutMemberResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_KickoutMemberResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_OtherKickoutedFromGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_OtherKickoutedFromGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherKickoutedFromGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherKickoutedFromGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherKickoutedFromGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_OtherKickoutedFromGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_OtherKickoutedFromGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
inline ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}

// required string YOUMEIID = 3;
inline bool YouMeIM_Command_OtherKickoutedFromGroup::has_youmeiid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_has_youmeiid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_youmeiid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::clear_youmeiid() {
  youmeiid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeiid();
}
inline const ::std::string& YouMeIM_Command_OtherKickoutedFromGroup::youmeiid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
  return youmeiid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const ::std::string& value) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const char* value) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const char* value, size_t size) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
inline ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::mutable_youmeiid() {
  set_has_youmeiid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
  return youmeiid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::release_youmeiid() {
  clear_has_youmeiid();
  return youmeiid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_youmeiid(::std::string* youmeiid) {
  if (youmeiid != NULL) {
    set_has_youmeiid();
  } else {
    clear_has_youmeiid();
  }
  youmeiid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeiid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetGroupMembers

// required .YouMeProtocol.PacketHead msgHead = 1;
inline bool YouMeIM_Command_GetGroupMembers::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetGroupMembers::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetGroupMembers::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetGroupMembers::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetGroupMembers::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupMembers::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupMembers::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetGroupMembers::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_GetGroupMembers::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetGroupMembers::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetGroupMembers::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetGroupMembers::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_GetGroupMembers::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupMembers::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
inline void YouMeIM_Command_GetGroupMembers::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
inline void YouMeIM_Command_GetGroupMembers::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
inline ::std::string* YouMeIM_Command_GetGroupMembers::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetGroupMembers::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupMembers::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}

// -------------------------------------------------------------------

// YouMeIM_Command_GetGroupMembersResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
inline bool YouMeIM_Command_GetGroupMembersResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YouMeIM_Command_GetGroupMembersResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YouMeIM_Command_GetGroupMembersResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
inline const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetGroupMembersResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupMembersResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
  return msghead_;
}
inline ::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupMembersResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
}

// required string groupID = 2;
inline bool YouMeIM_Command_GetGroupMembersResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YouMeIM_Command_GetGroupMembersResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YouMeIM_Command_GetGroupMembersResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
inline const ::std::string& YouMeIM_Command_GetGroupMembersResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
inline ::std::string* YouMeIM_Command_GetGroupMembersResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YouMeIM_Command_GetGroupMembersResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YouMeIM_Command_GetGroupMembersResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}

// repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
inline int YouMeIM_Command_GetGroupMembersResponse::memberinfo_size() const {
  return memberinfo_.size();
}
inline void YouMeIM_Command_GetGroupMembersResponse::clear_memberinfo() {
  memberinfo_.Clear();
}
inline const ::YouMeIMProtocol::YouMeIM_MemberInfo& YouMeIM_Command_GetGroupMembersResponse::memberinfo(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Get(index);
}
inline ::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_GetGroupMembersResponse::mutable_memberinfo(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Mutable(index);
}
inline ::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_GetGroupMembersResponse::add_memberinfo() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >*
YouMeIM_Command_GetGroupMembersResponse::mutable_memberinfo() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return &memberinfo_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >&
YouMeIM_Command_GetGroupMembersResponse::memberinfo() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeProtocol

#ifndef SWIG
namespace youmecommon {
namespace protobuf {

template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_GroupType> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_GroupPermission> : ::youmecommon::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent> : ::youmecommon::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_im_5fgroup_2eproto__INCLUDED
