// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im_group.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "im_group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace YouMeIMProtocol {

void protobuf_ShutdownFile_im_5fgroup_2eproto() {
  delete YouMeIM_GroupInfo::default_instance_;
  delete YouMeIM_MemberInfo::default_instance_;
  delete YouMeIM_Command_GetGroupInfo::default_instance_;
  delete YouMeIM_Command_GetGroupInfoResponse::default_instance_;
  delete YouMeIM_Command_GetAllGroup::default_instance_;
  delete YouMeIM_Command_GetAllGroupResponse::default_instance_;
  delete YouMeIM_Command_CreateGroup::default_instance_;
  delete YouMeIM_Command_CreateGroupResponse::default_instance_;
  delete YouMeIM_Command_DestroyGroup::default_instance_;
  delete YouMeIM_Command_DestroyGroupResponse::default_instance_;
  delete YouMeIM_Command_GroupDestroyed::default_instance_;
  delete YouMeIM_Command_JoinGroup::default_instance_;
  delete YouMeIM_Command_JoinGroupResquest::default_instance_;
  delete YouMeIM_Command_JoinGroupInvited::default_instance_;
  delete YouMeIM_Command_AgreeGroupInvited::default_instance_;
  delete YouMeIM_Command_RefuseGroupInvited::default_instance_;
  delete YouMeIM_Command_GroupInvitedResponse::default_instance_;
  delete YouMeIM_Command_JoinGroupResponse::default_instance_;
  delete YouMeIM_Command_OtherJoinGroup::default_instance_;
  delete YouMeIM_Command_LeaveGroup::default_instance_;
  delete YouMeIM_Command_LeaveGroupResponse::default_instance_;
  delete YouMeIM_Command_OtherLeaveGroup::default_instance_;
  delete YouMeIM_Command_KickoutMember::default_instance_;
  delete YouMeIM_Command_KickoutMemberResponse::default_instance_;
  delete YouMeIM_Command_OtherKickoutedFromGroup::default_instance_;
  delete YouMeIM_Command_GetGroupMembers::default_instance_;
  delete YouMeIM_Command_GetGroupMembersResponse::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_im_5fgroup_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_im_5fgroup_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::YouMeIMProtocol::protobuf_AddDesc_im_5fcommon_2eproto();
  YouMeIM_GroupInfo::default_instance_ = new YouMeIM_GroupInfo();
  YouMeIM_MemberInfo::default_instance_ = new YouMeIM_MemberInfo();
  YouMeIM_Command_GetGroupInfo::default_instance_ = new YouMeIM_Command_GetGroupInfo();
  YouMeIM_Command_GetGroupInfoResponse::default_instance_ = new YouMeIM_Command_GetGroupInfoResponse();
  YouMeIM_Command_GetAllGroup::default_instance_ = new YouMeIM_Command_GetAllGroup();
  YouMeIM_Command_GetAllGroupResponse::default_instance_ = new YouMeIM_Command_GetAllGroupResponse();
  YouMeIM_Command_CreateGroup::default_instance_ = new YouMeIM_Command_CreateGroup();
  YouMeIM_Command_CreateGroupResponse::default_instance_ = new YouMeIM_Command_CreateGroupResponse();
  YouMeIM_Command_DestroyGroup::default_instance_ = new YouMeIM_Command_DestroyGroup();
  YouMeIM_Command_DestroyGroupResponse::default_instance_ = new YouMeIM_Command_DestroyGroupResponse();
  YouMeIM_Command_GroupDestroyed::default_instance_ = new YouMeIM_Command_GroupDestroyed();
  YouMeIM_Command_JoinGroup::default_instance_ = new YouMeIM_Command_JoinGroup();
  YouMeIM_Command_JoinGroupResquest::default_instance_ = new YouMeIM_Command_JoinGroupResquest();
  YouMeIM_Command_JoinGroupInvited::default_instance_ = new YouMeIM_Command_JoinGroupInvited();
  YouMeIM_Command_AgreeGroupInvited::default_instance_ = new YouMeIM_Command_AgreeGroupInvited();
  YouMeIM_Command_RefuseGroupInvited::default_instance_ = new YouMeIM_Command_RefuseGroupInvited();
  YouMeIM_Command_GroupInvitedResponse::default_instance_ = new YouMeIM_Command_GroupInvitedResponse();
  YouMeIM_Command_JoinGroupResponse::default_instance_ = new YouMeIM_Command_JoinGroupResponse();
  YouMeIM_Command_OtherJoinGroup::default_instance_ = new YouMeIM_Command_OtherJoinGroup();
  YouMeIM_Command_LeaveGroup::default_instance_ = new YouMeIM_Command_LeaveGroup();
  YouMeIM_Command_LeaveGroupResponse::default_instance_ = new YouMeIM_Command_LeaveGroupResponse();
  YouMeIM_Command_OtherLeaveGroup::default_instance_ = new YouMeIM_Command_OtherLeaveGroup();
  YouMeIM_Command_KickoutMember::default_instance_ = new YouMeIM_Command_KickoutMember();
  YouMeIM_Command_KickoutMemberResponse::default_instance_ = new YouMeIM_Command_KickoutMemberResponse();
  YouMeIM_Command_OtherKickoutedFromGroup::default_instance_ = new YouMeIM_Command_OtherKickoutedFromGroup();
  YouMeIM_Command_GetGroupMembers::default_instance_ = new YouMeIM_Command_GetGroupMembers();
  YouMeIM_Command_GetGroupMembersResponse::default_instance_ = new YouMeIM_Command_GetGroupMembersResponse();
  YouMeIM_GroupInfo::default_instance_->InitAsDefaultInstance();
  YouMeIM_MemberInfo::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetGroupInfo::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetGroupInfoResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetAllGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetAllGroupResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_CreateGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_CreateGroupResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_DestroyGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_DestroyGroupResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GroupDestroyed::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_JoinGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_JoinGroupResquest::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_JoinGroupInvited::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_AgreeGroupInvited::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_RefuseGroupInvited::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GroupInvitedResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_JoinGroupResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_OtherJoinGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_LeaveGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_LeaveGroupResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_OtherLeaveGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_KickoutMember::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_KickoutMemberResponse::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_OtherKickoutedFromGroup::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetGroupMembers::default_instance_->InitAsDefaultInstance();
  YouMeIM_Command_GetGroupMembersResponse::default_instance_->InitAsDefaultInstance();
  ::youmecommon::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_im_5fgroup_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_im_5fgroup_2eproto_once_);
void protobuf_AddDesc_im_5fgroup_2eproto() {
  ::youmecommon::protobuf::GoogleOnceInit(&protobuf_AddDesc_im_5fgroup_2eproto_once_,
                 &protobuf_AddDesc_im_5fgroup_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_im_5fgroup_2eproto {
  StaticDescriptorInitializer_im_5fgroup_2eproto() {
    protobuf_AddDesc_im_5fgroup_2eproto();
  }
} static_descriptor_initializer_im_5fgroup_2eproto_;
#endif
bool YouMeIM_GroupType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

bool YouMeIM_GroupPermission_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

bool YouMeIM_JoinGroupEvent_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_GroupInfo::kGroupIDFieldNumber;
const int YouMeIM_GroupInfo::kGroupNameFieldNumber;
const int YouMeIM_GroupInfo::kGroupTypeFieldNumber;
#endif  // !_MSC_VER

YouMeIM_GroupInfo::YouMeIM_GroupInfo()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_GroupInfo)
}

void YouMeIM_GroupInfo::InitAsDefaultInstance() {
}

YouMeIM_GroupInfo::YouMeIM_GroupInfo(const YouMeIM_GroupInfo& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_GroupInfo)
}

void YouMeIM_GroupInfo::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  grouptype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_GroupInfo::~YouMeIM_GroupInfo() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_GroupInfo)
  SharedDtor();
}

void YouMeIM_GroupInfo::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void YouMeIM_GroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_GroupInfo& YouMeIM_GroupInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_GroupInfo* YouMeIM_GroupInfo::default_instance_ = NULL;

YouMeIM_GroupInfo* YouMeIM_GroupInfo::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_GroupInfo* n = new YouMeIM_GroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_GroupInfo::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_groupname()) {
      groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    grouptype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_GroupInfo::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_GroupInfo)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string groupID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupName;
        break;
      }

      // required string groupName = 2;
      case 2: {
        if (tag == 18) {
         parse_groupName:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupType;
        break;
      }

      // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
      case 3: {
        if (tag == 24) {
         parse_groupType:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value)) {
            set_grouptype(static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_GroupInfo)
  return false;
#undef DO_
}

void YouMeIM_GroupInfo::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_GroupInfo)
  // required string groupID = 1;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->groupid(), output);
  }

  // required string groupName = 2;
  if (has_groupname()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
  if (has_grouptype()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->grouptype(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_GroupInfo)
}

int YouMeIM_GroupInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_groupid()) {
    // required string groupID = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_groupname()) {
    // required string groupName = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  if (has_grouptype()) {
    // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());
  }

  return total_size;
}
int YouMeIM_GroupInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string groupID = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string groupName = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());

    // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_GroupInfo::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_GroupInfo*>(&from));
}

void YouMeIM_GroupInfo::MergeFrom(const YouMeIM_GroupInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_groupname()) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (from.has_grouptype()) {
      set_grouptype(from.grouptype());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_GroupInfo::CopyFrom(const YouMeIM_GroupInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_GroupInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void YouMeIM_GroupInfo::Swap(YouMeIM_GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_GroupInfo::InternalSwap(YouMeIM_GroupInfo* other) {
  groupid_.Swap(&other->groupid_);
  groupname_.Swap(&other->groupname_);
  std::swap(grouptype_, other->grouptype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_GroupInfo::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_GroupInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_GroupInfo

// required string groupID = 1;
bool YouMeIM_GroupInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_GroupInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_GroupInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_GroupInfo::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_GroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_GroupInfo::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
 void YouMeIM_GroupInfo::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
 void YouMeIM_GroupInfo::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}
 ::std::string* YouMeIM_GroupInfo::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_GroupInfo.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_GroupInfo::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_GroupInfo::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_GroupInfo.groupID)
}

// required string groupName = 2;
bool YouMeIM_GroupInfo::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_GroupInfo::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_GroupInfo::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_GroupInfo::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
 const ::std::string& YouMeIM_GroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupName)
  return groupname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_GroupInfo::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
 void YouMeIM_GroupInfo::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
 void YouMeIM_GroupInfo::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}
 ::std::string* YouMeIM_GroupInfo::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_GroupInfo.groupName)
  return groupname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_GroupInfo::release_groupname() {
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_GroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_GroupInfo.groupName)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
bool YouMeIM_GroupInfo::has_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_GroupInfo::set_has_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_GroupInfo::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_GroupInfo::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
 ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_GroupInfo::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_GroupInfo.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
 void YouMeIM_GroupInfo::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_GroupInfo.groupType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_MemberInfo::kYOUMEIDFieldNumber;
const int YouMeIM_MemberInfo::kStatusFieldNumber;
const int YouMeIM_MemberInfo::kMemberPowerFieldNumber;
#endif  // !_MSC_VER

YouMeIM_MemberInfo::YouMeIM_MemberInfo()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_MemberInfo)
}

void YouMeIM_MemberInfo::InitAsDefaultInstance() {
}

YouMeIM_MemberInfo::YouMeIM_MemberInfo(const YouMeIM_MemberInfo& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_MemberInfo)
}

void YouMeIM_MemberInfo::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  memberpower_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_MemberInfo::~YouMeIM_MemberInfo() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_MemberInfo)
  SharedDtor();
}

void YouMeIM_MemberInfo::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void YouMeIM_MemberInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_MemberInfo& YouMeIM_MemberInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_MemberInfo* YouMeIM_MemberInfo::default_instance_ = NULL;

YouMeIM_MemberInfo* YouMeIM_MemberInfo::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_MemberInfo* n = new YouMeIM_MemberInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_MemberInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YouMeIM_MemberInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(status_, memberpower_);
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_MemberInfo::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_MemberInfo)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string YOUMEID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_memberPower;
        break;
      }

      // required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
      case 3: {
        if (tag == 24) {
         parse_memberPower:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_GroupPermission_IsValid(value)) {
            set_memberpower(static_cast< ::YouMeIMProtocol::YouMeIM_GroupPermission >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_MemberInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_MemberInfo)
  return false;
#undef DO_
}

void YouMeIM_MemberInfo::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_MemberInfo)
  // required string YOUMEID = 1;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->youmeid(), output);
  }

  // required int32 status = 2;
  if (has_status()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
  if (has_memberpower()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->memberpower(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_MemberInfo)
}

int YouMeIM_MemberInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_youmeid()) {
    // required string YOUMEID = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  if (has_status()) {
    // required int32 status = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  if (has_memberpower()) {
    // required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->memberpower());
  }

  return total_size;
}
int YouMeIM_MemberInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string YOUMEID = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

    // required int32 status = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

    // required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->memberpower());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_MemberInfo::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_MemberInfo*>(&from));
}

void YouMeIM_MemberInfo::MergeFrom(const YouMeIM_MemberInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_memberpower()) {
      set_memberpower(from.memberpower());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_MemberInfo::CopyFrom(const YouMeIM_MemberInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_MemberInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void YouMeIM_MemberInfo::Swap(YouMeIM_MemberInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_MemberInfo::InternalSwap(YouMeIM_MemberInfo* other) {
  youmeid_.Swap(&other->youmeid_);
  std::swap(status_, other->status_);
  std::swap(memberpower_, other->memberpower_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_MemberInfo::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_MemberInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_MemberInfo

// required string YOUMEID = 1;
bool YouMeIM_MemberInfo::has_youmeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_MemberInfo::set_has_youmeid() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_MemberInfo::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_MemberInfo::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_MemberInfo::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_MemberInfo::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
 void YouMeIM_MemberInfo::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
 void YouMeIM_MemberInfo::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}
 ::std::string* YouMeIM_MemberInfo::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_MemberInfo::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_MemberInfo::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_MemberInfo.YOUMEID)
}

// required int32 status = 2;
bool YouMeIM_MemberInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_MemberInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_MemberInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_MemberInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::youmecommon::protobuf::int32 YouMeIM_MemberInfo::status() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.status)
  return status_;
}
 void YouMeIM_MemberInfo::set_status(::youmecommon::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.status)
}

// required .YouMeProtocol.YouMeIM_GroupPermission memberPower = 3;
bool YouMeIM_MemberInfo::has_memberpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_MemberInfo::set_has_memberpower() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_MemberInfo::clear_has_memberpower() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_MemberInfo::clear_memberpower() {
  memberpower_ = 0;
  clear_has_memberpower();
}
 ::YouMeIMProtocol::YouMeIM_GroupPermission YouMeIM_MemberInfo::memberpower() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_MemberInfo.memberPower)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupPermission >(memberpower_);
}
 void YouMeIM_MemberInfo::set_memberpower(::YouMeIMProtocol::YouMeIM_GroupPermission value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupPermission_IsValid(value));
  set_has_memberpower();
  memberpower_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_MemberInfo.memberPower)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetGroupInfo::kMsgHeadFieldNumber;
const int YouMeIM_Command_GetGroupInfo::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetGroupInfo::YouMeIM_Command_GetGroupInfo()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
}

void YouMeIM_Command_GetGroupInfo::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_GetGroupInfo::YouMeIM_Command_GetGroupInfo(const YouMeIM_Command_GetGroupInfo& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
}

void YouMeIM_Command_GetGroupInfo::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetGroupInfo::~YouMeIM_Command_GetGroupInfo() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
  SharedDtor();
}

void YouMeIM_Command_GetGroupInfo::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GetGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetGroupInfo& YouMeIM_Command_GetGroupInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetGroupInfo* YouMeIM_Command_GetGroupInfo::default_instance_ = NULL;

YouMeIM_Command_GetGroupInfo* YouMeIM_Command_GetGroupInfo::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetGroupInfo* n = new YouMeIM_Command_GetGroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetGroupInfo::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetGroupInfo::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
  return false;
#undef DO_
}

void YouMeIM_Command_GetGroupInfo::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetGroupInfo)
}

int YouMeIM_Command_GetGroupInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_GetGroupInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetGroupInfo::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetGroupInfo*>(&from));
}

void YouMeIM_Command_GetGroupInfo::MergeFrom(const YouMeIM_Command_GetGroupInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetGroupInfo::CopyFrom(const YouMeIM_Command_GetGroupInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetGroupInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GetGroupInfo::Swap(YouMeIM_Command_GetGroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetGroupInfo::InternalSwap(YouMeIM_Command_GetGroupInfo* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetGroupInfo::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetGroupInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetGroupInfo

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_GetGroupInfo::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetGroupInfo::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetGroupInfo::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetGroupInfo::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetGroupInfo::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupInfo::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupInfo::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetGroupInfo::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfo.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_GetGroupInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GetGroupInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GetGroupInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GetGroupInfo::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_GetGroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupInfo::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
 void YouMeIM_Command_GetGroupInfo::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
 void YouMeIM_Command_GetGroupInfo::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}
 ::std::string* YouMeIM_Command_GetGroupInfo::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GetGroupInfo::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupInfo::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfo.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetGroupInfoResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_GetGroupInfoResponse::kGroupInfoFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetGroupInfoResponse::YouMeIM_Command_GetGroupInfoResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
}

void YouMeIM_Command_GetGroupInfoResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(
      ::YouMeIMProtocol::YouMeIM_GroupInfo::internal_default_instance());
#else
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(&::YouMeIMProtocol::YouMeIM_GroupInfo::default_instance());
#endif
}

YouMeIM_Command_GetGroupInfoResponse::YouMeIM_Command_GetGroupInfoResponse(const YouMeIM_Command_GetGroupInfoResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
}

void YouMeIM_Command_GetGroupInfoResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetGroupInfoResponse::~YouMeIM_Command_GetGroupInfoResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
  SharedDtor();
}

void YouMeIM_Command_GetGroupInfoResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
    delete groupinfo_;
  }
}

void YouMeIM_Command_GetGroupInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetGroupInfoResponse& YouMeIM_Command_GetGroupInfoResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetGroupInfoResponse* YouMeIM_Command_GetGroupInfoResponse::default_instance_ = NULL;

YouMeIM_Command_GetGroupInfoResponse* YouMeIM_Command_GetGroupInfoResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetGroupInfoResponse* n = new YouMeIM_Command_GetGroupInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetGroupInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupinfo()) {
      if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetGroupInfoResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupInfo;
        break;
      }

      // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_groupInfo:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_GetGroupInfoResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  if (has_groupinfo()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->groupinfo_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse)
}

int YouMeIM_Command_GetGroupInfoResponse::ByteSize() const {
  int total_size = 0;

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }
  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  if (has_groupinfo()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupinfo_);
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetGroupInfoResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetGroupInfoResponse*>(&from));
}

void YouMeIM_Command_GetGroupInfoResponse::MergeFrom(const YouMeIM_Command_GetGroupInfoResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupinfo()) {
      mutable_groupinfo()->::YouMeIMProtocol::YouMeIM_GroupInfo::MergeFrom(from.groupinfo());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetGroupInfoResponse::CopyFrom(const YouMeIM_Command_GetGroupInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetGroupInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (has_groupinfo()) {
    if (!this->groupinfo_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GetGroupInfoResponse::Swap(YouMeIM_Command_GetGroupInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetGroupInfoResponse::InternalSwap(YouMeIM_Command_GetGroupInfoResponse* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(groupinfo_, other->groupinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetGroupInfoResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetGroupInfoResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_GetGroupInfoResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetGroupInfoResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetGroupInfoResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetGroupInfoResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetGroupInfoResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupInfoResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupInfoResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetGroupInfoResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.msgHead)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
bool YouMeIM_Command_GetGroupInfoResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GetGroupInfoResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GetGroupInfoResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GetGroupInfoResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_GetGroupInfoResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetGroupInfoResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
  return groupinfo_;
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetGroupInfoResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
void YouMeIM_Command_GetGroupInfoResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupInfoResponse.groupInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetAllGroup::kMsgHeadFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetAllGroup::YouMeIM_Command_GetAllGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetAllGroup)
}

void YouMeIM_Command_GetAllGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_GetAllGroup::YouMeIM_Command_GetAllGroup(const YouMeIM_Command_GetAllGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetAllGroup)
}

void YouMeIM_Command_GetAllGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetAllGroup::~YouMeIM_Command_GetAllGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetAllGroup)
  SharedDtor();
}

void YouMeIM_Command_GetAllGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GetAllGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetAllGroup& YouMeIM_Command_GetAllGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetAllGroup* YouMeIM_Command_GetAllGroup::default_instance_ = NULL;

YouMeIM_Command_GetAllGroup* YouMeIM_Command_GetAllGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetAllGroup* n = new YouMeIM_Command_GetAllGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetAllGroup::Clear() {
  if (has_msghead()) {
    if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetAllGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetAllGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetAllGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetAllGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_GetAllGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetAllGroup)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetAllGroup)
}

int YouMeIM_Command_GetAllGroup::ByteSize() const {
  int total_size = 0;

  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetAllGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetAllGroup*>(&from));
}

void YouMeIM_Command_GetAllGroup::MergeFrom(const YouMeIM_Command_GetAllGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetAllGroup::CopyFrom(const YouMeIM_Command_GetAllGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetAllGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GetAllGroup::Swap(YouMeIM_Command_GetAllGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetAllGroup::InternalSwap(YouMeIM_Command_GetAllGroup* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetAllGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetAllGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetAllGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_GetAllGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetAllGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetAllGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetAllGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetAllGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetAllGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetAllGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetAllGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetAllGroup.msgHead)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetAllGroupResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_GetAllGroupResponse::kGroupInfosFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetAllGroupResponse::YouMeIM_Command_GetAllGroupResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
}

void YouMeIM_Command_GetAllGroupResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_GetAllGroupResponse::YouMeIM_Command_GetAllGroupResponse(const YouMeIM_Command_GetAllGroupResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
}

void YouMeIM_Command_GetAllGroupResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetAllGroupResponse::~YouMeIM_Command_GetAllGroupResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
  SharedDtor();
}

void YouMeIM_Command_GetAllGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GetAllGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetAllGroupResponse& YouMeIM_Command_GetAllGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetAllGroupResponse* YouMeIM_Command_GetAllGroupResponse::default_instance_ = NULL;

YouMeIM_Command_GetAllGroupResponse* YouMeIM_Command_GetAllGroupResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetAllGroupResponse* n = new YouMeIM_Command_GetAllGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetAllGroupResponse::Clear() {
  if (has_msghead()) {
    if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  }
  groupinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetAllGroupResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupInfos;
        break;
      }

      // repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
      case 2: {
        if (tag == 18) {
         parse_groupInfos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_groupInfos:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_groupinfos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_groupInfos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_GetAllGroupResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
  for (unsigned int i = 0, n = this->groupinfos_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->groupinfos(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse)
}

int YouMeIM_Command_GetAllGroupResponse::ByteSize() const {
  int total_size = 0;

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }
  // repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
  total_size += 1 * this->groupinfos_size();
  for (int i = 0; i < this->groupinfos_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groupinfos(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetAllGroupResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetAllGroupResponse*>(&from));
}

void YouMeIM_Command_GetAllGroupResponse::MergeFrom(const YouMeIM_Command_GetAllGroupResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  groupinfos_.MergeFrom(from.groupinfos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetAllGroupResponse::CopyFrom(const YouMeIM_Command_GetAllGroupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetAllGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->groupinfos())) return false;
  return true;
}

void YouMeIM_Command_GetAllGroupResponse::Swap(YouMeIM_Command_GetAllGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetAllGroupResponse::InternalSwap(YouMeIM_Command_GetAllGroupResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupinfos_.UnsafeArenaSwap(&other->groupinfos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetAllGroupResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetAllGroupResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetAllGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_GetAllGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetAllGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetAllGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetAllGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetAllGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetAllGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetAllGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetAllGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.msgHead)
}

// repeated .YouMeProtocol.YouMeIM_GroupInfo groupInfos = 2;
int YouMeIM_Command_GetAllGroupResponse::groupinfos_size() const {
  return groupinfos_.size();
}
void YouMeIM_Command_GetAllGroupResponse::clear_groupinfos() {
  groupinfos_.Clear();
}
const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_GetAllGroupResponse::groupinfos(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Get(index);
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetAllGroupResponse::mutable_groupinfos(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Mutable(index);
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_GetAllGroupResponse::add_groupinfos() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >*
YouMeIM_Command_GetAllGroupResponse::mutable_groupinfos() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return &groupinfos_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_GroupInfo >&
YouMeIM_Command_GetAllGroupResponse::groupinfos() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetAllGroupResponse.groupInfos)
  return groupinfos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_CreateGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_CreateGroup::kGroupTypeFieldNumber;
const int YouMeIM_Command_CreateGroup::kGroupNameFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_CreateGroup::YouMeIM_Command_CreateGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_CreateGroup)
}

void YouMeIM_Command_CreateGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_CreateGroup::YouMeIM_Command_CreateGroup(const YouMeIM_Command_CreateGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_CreateGroup)
}

void YouMeIM_Command_CreateGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  grouptype_ = 0;
  groupname_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_CreateGroup::~YouMeIM_Command_CreateGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_CreateGroup)
  SharedDtor();
}

void YouMeIM_Command_CreateGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_CreateGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_CreateGroup& YouMeIM_Command_CreateGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_CreateGroup* YouMeIM_Command_CreateGroup::default_instance_ = NULL;

YouMeIM_Command_CreateGroup* YouMeIM_Command_CreateGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_CreateGroup* n = new YouMeIM_Command_CreateGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_CreateGroup::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    grouptype_ = 0;
    if (has_groupname()) {
      groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_CreateGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_CreateGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupType;
        break;
      }

      // required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
      case 2: {
        if (tag == 16) {
         parse_groupType:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value)) {
            set_grouptype(static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_groupName;
        break;
      }

      // required string groupName = 3;
      case 3: {
        if (tag == 26) {
         parse_groupName:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_CreateGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_CreateGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_CreateGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_CreateGroup)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
  if (has_grouptype()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->grouptype(), output);
  }

  // required string groupName = 3;
  if (has_groupname()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->groupname(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_CreateGroup)
}

int YouMeIM_Command_CreateGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_grouptype()) {
    // required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());
  }

  if (has_groupname()) {
    // required string groupName = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  return total_size;
}
int YouMeIM_Command_CreateGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());

    // required string groupName = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_CreateGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_CreateGroup*>(&from));
}

void YouMeIM_Command_CreateGroup::MergeFrom(const YouMeIM_Command_CreateGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_grouptype()) {
      set_grouptype(from.grouptype());
    }
    if (from.has_groupname()) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_CreateGroup::CopyFrom(const YouMeIM_Command_CreateGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_CreateGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_CreateGroup::Swap(YouMeIM_Command_CreateGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_CreateGroup::InternalSwap(YouMeIM_Command_CreateGroup* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(grouptype_, other->grouptype_);
  groupname_.Swap(&other->groupname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_CreateGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_CreateGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_CreateGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_CreateGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_CreateGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_CreateGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_CreateGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_CreateGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_CreateGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_CreateGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_CreateGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroup.msgHead)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 2;
bool YouMeIM_Command_CreateGroup::has_grouptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_CreateGroup::set_has_grouptype() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_CreateGroup::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_CreateGroup::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
 ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_Command_CreateGroup::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
 void YouMeIM_Command_CreateGroup::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_CreateGroup.groupType)
}

// required string groupName = 3;
bool YouMeIM_Command_CreateGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_CreateGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_CreateGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_CreateGroup::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
 const ::std::string& YouMeIM_Command_CreateGroup::groupname() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
  return groupname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_CreateGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
 void YouMeIM_Command_CreateGroup::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
 void YouMeIM_Command_CreateGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}
 ::std::string* YouMeIM_Command_CreateGroup::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
  return groupname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_CreateGroup::release_groupname() {
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_CreateGroup::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroup.groupName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_CreateGroupResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_CreateGroupResponse::kGroupInfoFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_CreateGroupResponse::YouMeIM_Command_CreateGroupResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
}

void YouMeIM_Command_CreateGroupResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(
      ::YouMeIMProtocol::YouMeIM_GroupInfo::internal_default_instance());
#else
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(&::YouMeIMProtocol::YouMeIM_GroupInfo::default_instance());
#endif
}

YouMeIM_Command_CreateGroupResponse::YouMeIM_Command_CreateGroupResponse(const YouMeIM_Command_CreateGroupResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
}

void YouMeIM_Command_CreateGroupResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_CreateGroupResponse::~YouMeIM_Command_CreateGroupResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
  SharedDtor();
}

void YouMeIM_Command_CreateGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
    delete groupinfo_;
  }
}

void YouMeIM_Command_CreateGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_CreateGroupResponse& YouMeIM_Command_CreateGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_CreateGroupResponse* YouMeIM_Command_CreateGroupResponse::default_instance_ = NULL;

YouMeIM_Command_CreateGroupResponse* YouMeIM_Command_CreateGroupResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_CreateGroupResponse* n = new YouMeIM_Command_CreateGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_CreateGroupResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupinfo()) {
      if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_CreateGroupResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupInfo;
        break;
      }

      // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_groupInfo:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_CreateGroupResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  if (has_groupinfo()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->groupinfo_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_CreateGroupResponse)
}

int YouMeIM_Command_CreateGroupResponse::ByteSize() const {
  int total_size = 0;

  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }
  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
  if (has_groupinfo()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupinfo_);
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_CreateGroupResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_CreateGroupResponse*>(&from));
}

void YouMeIM_Command_CreateGroupResponse::MergeFrom(const YouMeIM_Command_CreateGroupResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupinfo()) {
      mutable_groupinfo()->::YouMeIMProtocol::YouMeIM_GroupInfo::MergeFrom(from.groupinfo());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_CreateGroupResponse::CopyFrom(const YouMeIM_Command_CreateGroupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_CreateGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (has_groupinfo()) {
    if (!this->groupinfo_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_CreateGroupResponse::Swap(YouMeIM_Command_CreateGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_CreateGroupResponse::InternalSwap(YouMeIM_Command_CreateGroupResponse* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(groupinfo_, other->groupinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_CreateGroupResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_CreateGroupResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_CreateGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_CreateGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_CreateGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_CreateGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_CreateGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_CreateGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_CreateGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_CreateGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_CreateGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.msgHead)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 2;
bool YouMeIM_Command_CreateGroupResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_CreateGroupResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_CreateGroupResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_CreateGroupResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_CreateGroupResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_CreateGroupResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
  return groupinfo_;
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_CreateGroupResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
void YouMeIM_Command_CreateGroupResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_CreateGroupResponse.groupInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_DestroyGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_DestroyGroup::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_DestroyGroup::YouMeIM_Command_DestroyGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_DestroyGroup)
}

void YouMeIM_Command_DestroyGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_DestroyGroup::YouMeIM_Command_DestroyGroup(const YouMeIM_Command_DestroyGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_DestroyGroup)
}

void YouMeIM_Command_DestroyGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_DestroyGroup::~YouMeIM_Command_DestroyGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_DestroyGroup)
  SharedDtor();
}

void YouMeIM_Command_DestroyGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_DestroyGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_DestroyGroup& YouMeIM_Command_DestroyGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_DestroyGroup* YouMeIM_Command_DestroyGroup::default_instance_ = NULL;

YouMeIM_Command_DestroyGroup* YouMeIM_Command_DestroyGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_DestroyGroup* n = new YouMeIM_Command_DestroyGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_DestroyGroup::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_DestroyGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_DestroyGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_DestroyGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_DestroyGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_DestroyGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_DestroyGroup)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_DestroyGroup)
}

int YouMeIM_Command_DestroyGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_DestroyGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_DestroyGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_DestroyGroup*>(&from));
}

void YouMeIM_Command_DestroyGroup::MergeFrom(const YouMeIM_Command_DestroyGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_DestroyGroup::CopyFrom(const YouMeIM_Command_DestroyGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_DestroyGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_DestroyGroup::Swap(YouMeIM_Command_DestroyGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_DestroyGroup::InternalSwap(YouMeIM_Command_DestroyGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_DestroyGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_DestroyGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_DestroyGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_DestroyGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_DestroyGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_DestroyGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_DestroyGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_DestroyGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_DestroyGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_DestroyGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_DestroyGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroup.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_DestroyGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_DestroyGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_DestroyGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_DestroyGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_DestroyGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_DestroyGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
 void YouMeIM_Command_DestroyGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
 void YouMeIM_Command_DestroyGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}
 ::std::string* YouMeIM_Command_DestroyGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_DestroyGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_DestroyGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroup.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_DestroyGroupResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_DestroyGroupResponse::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_DestroyGroupResponse::YouMeIM_Command_DestroyGroupResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
}

void YouMeIM_Command_DestroyGroupResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_DestroyGroupResponse::YouMeIM_Command_DestroyGroupResponse(const YouMeIM_Command_DestroyGroupResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
}

void YouMeIM_Command_DestroyGroupResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_DestroyGroupResponse::~YouMeIM_Command_DestroyGroupResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
  SharedDtor();
}

void YouMeIM_Command_DestroyGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_DestroyGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_DestroyGroupResponse& YouMeIM_Command_DestroyGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_DestroyGroupResponse* YouMeIM_Command_DestroyGroupResponse::default_instance_ = NULL;

YouMeIM_Command_DestroyGroupResponse* YouMeIM_Command_DestroyGroupResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_DestroyGroupResponse* n = new YouMeIM_Command_DestroyGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_DestroyGroupResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_DestroyGroupResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_DestroyGroupResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse)
}

int YouMeIM_Command_DestroyGroupResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_DestroyGroupResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_DestroyGroupResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_DestroyGroupResponse*>(&from));
}

void YouMeIM_Command_DestroyGroupResponse::MergeFrom(const YouMeIM_Command_DestroyGroupResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_DestroyGroupResponse::CopyFrom(const YouMeIM_Command_DestroyGroupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_DestroyGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_DestroyGroupResponse::Swap(YouMeIM_Command_DestroyGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_DestroyGroupResponse::InternalSwap(YouMeIM_Command_DestroyGroupResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_DestroyGroupResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_DestroyGroupResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_DestroyGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_DestroyGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_DestroyGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_DestroyGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_DestroyGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_DestroyGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DestroyGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_DestroyGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_DestroyGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_DestroyGroupResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_DestroyGroupResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_DestroyGroupResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_DestroyGroupResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_DestroyGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_DestroyGroupResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
 void YouMeIM_Command_DestroyGroupResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
 void YouMeIM_Command_DestroyGroupResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}
 ::std::string* YouMeIM_Command_DestroyGroupResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_DestroyGroupResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_DestroyGroupResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_DestroyGroupResponse.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GroupDestroyed::kMsgHeadFieldNumber;
const int YouMeIM_Command_GroupDestroyed::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GroupDestroyed::YouMeIM_Command_GroupDestroyed()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
}

void YouMeIM_Command_GroupDestroyed::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_GroupDestroyed::YouMeIM_Command_GroupDestroyed(const YouMeIM_Command_GroupDestroyed& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
}

void YouMeIM_Command_GroupDestroyed::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GroupDestroyed::~YouMeIM_Command_GroupDestroyed() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
  SharedDtor();
}

void YouMeIM_Command_GroupDestroyed::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GroupDestroyed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GroupDestroyed& YouMeIM_Command_GroupDestroyed::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GroupDestroyed* YouMeIM_Command_GroupDestroyed::default_instance_ = NULL;

YouMeIM_Command_GroupDestroyed* YouMeIM_Command_GroupDestroyed::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GroupDestroyed* n = new YouMeIM_Command_GroupDestroyed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GroupDestroyed::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GroupDestroyed::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
  return false;
#undef DO_
}

void YouMeIM_Command_GroupDestroyed::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GroupDestroyed)
}

int YouMeIM_Command_GroupDestroyed::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_GroupDestroyed::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GroupDestroyed::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GroupDestroyed*>(&from));
}

void YouMeIM_Command_GroupDestroyed::MergeFrom(const YouMeIM_Command_GroupDestroyed& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GroupDestroyed::CopyFrom(const YouMeIM_Command_GroupDestroyed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GroupDestroyed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GroupDestroyed::Swap(YouMeIM_Command_GroupDestroyed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GroupDestroyed::InternalSwap(YouMeIM_Command_GroupDestroyed* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GroupDestroyed::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GroupDestroyed";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GroupDestroyed

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_GroupDestroyed::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GroupDestroyed::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GroupDestroyed::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GroupDestroyed::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GroupDestroyed::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupDestroyed::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupDestroyed::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GroupDestroyed::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupDestroyed.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_GroupDestroyed::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GroupDestroyed::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GroupDestroyed::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GroupDestroyed::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_GroupDestroyed::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupDestroyed::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
 void YouMeIM_Command_GroupDestroyed::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
 void YouMeIM_Command_GroupDestroyed::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}
 ::std::string* YouMeIM_Command_GroupDestroyed::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GroupDestroyed::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupDestroyed::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupDestroyed.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_JoinGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_JoinGroup::kGroupIDFieldNumber;
const int YouMeIM_Command_JoinGroup::kGroupTypeFieldNumber;
const int YouMeIM_Command_JoinGroup::kReasonFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_JoinGroup::YouMeIM_Command_JoinGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_JoinGroup)
}

void YouMeIM_Command_JoinGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_JoinGroup::YouMeIM_Command_JoinGroup(const YouMeIM_Command_JoinGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_JoinGroup)
}

void YouMeIM_Command_JoinGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  grouptype_ = 0;
  reason_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_JoinGroup::~YouMeIM_Command_JoinGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_JoinGroup)
  SharedDtor();
}

void YouMeIM_Command_JoinGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_JoinGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_JoinGroup& YouMeIM_Command_JoinGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_JoinGroup* YouMeIM_Command_JoinGroup::default_instance_ = NULL;

YouMeIM_Command_JoinGroup* YouMeIM_Command_JoinGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_JoinGroup* n = new YouMeIM_Command_JoinGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_JoinGroup::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    grouptype_ = 0;
    if (has_reason()) {
      reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_JoinGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_JoinGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupType;
        break;
      }

      // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
      case 3: {
        if (tag == 24) {
         parse_groupType:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value)) {
            set_grouptype(static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reason;
        break;
      }

      // optional string reason = 4;
      case 4: {
        if (tag == 34) {
         parse_reason:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_JoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_JoinGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_JoinGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_JoinGroup)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
  if (has_grouptype()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->grouptype(), output);
  }

  // optional string reason = 4;
  if (has_reason()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_JoinGroup)
}

int YouMeIM_Command_JoinGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_grouptype()) {
    // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());
  }

  return total_size;
}
int YouMeIM_Command_JoinGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->grouptype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reason = 4;
  if (has_reason()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_JoinGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_JoinGroup*>(&from));
}

void YouMeIM_Command_JoinGroup::MergeFrom(const YouMeIM_Command_JoinGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_grouptype()) {
      set_grouptype(from.grouptype());
    }
    if (from.has_reason()) {
      set_has_reason();
      reason_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_JoinGroup::CopyFrom(const YouMeIM_Command_JoinGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_JoinGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_JoinGroup::Swap(YouMeIM_Command_JoinGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_JoinGroup::InternalSwap(YouMeIM_Command_JoinGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(grouptype_, other->grouptype_);
  reason_.Swap(&other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_JoinGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_JoinGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_JoinGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_JoinGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_JoinGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_JoinGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_JoinGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_JoinGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_JoinGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_JoinGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_JoinGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_JoinGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_JoinGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_JoinGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_JoinGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_JoinGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
 void YouMeIM_Command_JoinGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
 void YouMeIM_Command_JoinGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}
 ::std::string* YouMeIM_Command_JoinGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.groupID)
}

// required .YouMeProtocol.YouMeIM_GroupType groupType = 3;
bool YouMeIM_Command_JoinGroup::has_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_JoinGroup::set_has_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_JoinGroup::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_JoinGroup::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
 ::YouMeIMProtocol::YouMeIM_GroupType YouMeIM_Command_JoinGroup::grouptype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.groupType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_GroupType >(grouptype_);
}
 void YouMeIM_Command_JoinGroup::set_grouptype(::YouMeIMProtocol::YouMeIM_GroupType value) {
  assert(::YouMeIMProtocol::YouMeIM_GroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.groupType)
}

// optional string reason = 4;
bool YouMeIM_Command_JoinGroup::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YouMeIM_Command_JoinGroup::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
void YouMeIM_Command_JoinGroup::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
void YouMeIM_Command_JoinGroup::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
 const ::std::string& YouMeIM_Command_JoinGroup::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroup::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
 void YouMeIM_Command_JoinGroup::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
 void YouMeIM_Command_JoinGroup::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}
 ::std::string* YouMeIM_Command_JoinGroup::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroup::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroup::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroup.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_JoinGroupResquest::kMsgHeadFieldNumber;
const int YouMeIM_Command_JoinGroupResquest::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_JoinGroupResquest::YouMeIM_Command_JoinGroupResquest()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
}

void YouMeIM_Command_JoinGroupResquest::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_JoinGroupResquest::YouMeIM_Command_JoinGroupResquest(const YouMeIM_Command_JoinGroupResquest& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
}

void YouMeIM_Command_JoinGroupResquest::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_JoinGroupResquest::~YouMeIM_Command_JoinGroupResquest() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
  SharedDtor();
}

void YouMeIM_Command_JoinGroupResquest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_JoinGroupResquest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_JoinGroupResquest& YouMeIM_Command_JoinGroupResquest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_JoinGroupResquest* YouMeIM_Command_JoinGroupResquest::default_instance_ = NULL;

YouMeIM_Command_JoinGroupResquest* YouMeIM_Command_JoinGroupResquest::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_JoinGroupResquest* n = new YouMeIM_Command_JoinGroupResquest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_JoinGroupResquest::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_JoinGroupResquest::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
  return false;
#undef DO_
}

void YouMeIM_Command_JoinGroupResquest::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_JoinGroupResquest)
}

int YouMeIM_Command_JoinGroupResquest::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_JoinGroupResquest::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_JoinGroupResquest::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_JoinGroupResquest*>(&from));
}

void YouMeIM_Command_JoinGroupResquest::MergeFrom(const YouMeIM_Command_JoinGroupResquest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_JoinGroupResquest::CopyFrom(const YouMeIM_Command_JoinGroupResquest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_JoinGroupResquest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_JoinGroupResquest::Swap(YouMeIM_Command_JoinGroupResquest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_JoinGroupResquest::InternalSwap(YouMeIM_Command_JoinGroupResquest* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_JoinGroupResquest::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_JoinGroupResquest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_JoinGroupResquest

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_JoinGroupResquest::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_JoinGroupResquest::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_JoinGroupResquest::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_JoinGroupResquest::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupResquest::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResquest::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResquest::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_JoinGroupResquest::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_JoinGroupResquest::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_JoinGroupResquest::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_JoinGroupResquest::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_JoinGroupResquest::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_JoinGroupResquest::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupResquest::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
 void YouMeIM_Command_JoinGroupResquest::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
 void YouMeIM_Command_JoinGroupResquest::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}
 ::std::string* YouMeIM_Command_JoinGroupResquest::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroupResquest::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupResquest::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResquest.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_JoinGroupInvited::kMsgHeadFieldNumber;
const int YouMeIM_Command_JoinGroupInvited::kGroupIDFieldNumber;
const int YouMeIM_Command_JoinGroupInvited::kYOUMEIDFieldNumber;
const int YouMeIM_Command_JoinGroupInvited::kReasonFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_JoinGroupInvited::YouMeIM_Command_JoinGroupInvited()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
}

void YouMeIM_Command_JoinGroupInvited::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_JoinGroupInvited::YouMeIM_Command_JoinGroupInvited(const YouMeIM_Command_JoinGroupInvited& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
}

void YouMeIM_Command_JoinGroupInvited::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_JoinGroupInvited::~YouMeIM_Command_JoinGroupInvited() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
  SharedDtor();
}

void YouMeIM_Command_JoinGroupInvited::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_JoinGroupInvited::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_JoinGroupInvited& YouMeIM_Command_JoinGroupInvited::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_JoinGroupInvited* YouMeIM_Command_JoinGroupInvited::default_instance_ = NULL;

YouMeIM_Command_JoinGroupInvited* YouMeIM_Command_JoinGroupInvited::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_JoinGroupInvited* n = new YouMeIM_Command_JoinGroupInvited;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_JoinGroupInvited::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reason()) {
      reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_JoinGroupInvited::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reason;
        break;
      }

      // optional string reason = 4;
      case 4: {
        if (tag == 34) {
         parse_reason:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
  return false;
#undef DO_
}

void YouMeIM_Command_JoinGroupInvited::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  // optional string reason = 4;
  if (has_reason()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_JoinGroupInvited)
}

int YouMeIM_Command_JoinGroupInvited::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_JoinGroupInvited::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reason = 4;
  if (has_reason()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_JoinGroupInvited::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_JoinGroupInvited*>(&from));
}

void YouMeIM_Command_JoinGroupInvited::MergeFrom(const YouMeIM_Command_JoinGroupInvited& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
    if (from.has_reason()) {
      set_has_reason();
      reason_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_JoinGroupInvited::CopyFrom(const YouMeIM_Command_JoinGroupInvited& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_JoinGroupInvited::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_JoinGroupInvited::Swap(YouMeIM_Command_JoinGroupInvited* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_JoinGroupInvited::InternalSwap(YouMeIM_Command_JoinGroupInvited* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  reason_.Swap(&other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_JoinGroupInvited::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_JoinGroupInvited";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_JoinGroupInvited

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_JoinGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_JoinGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_JoinGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_JoinGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_JoinGroupInvited::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_JoinGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_JoinGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_JoinGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_JoinGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_JoinGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
 void YouMeIM_Command_JoinGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
 void YouMeIM_Command_JoinGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_JoinGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_JoinGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_JoinGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_JoinGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_JoinGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
 void YouMeIM_Command_JoinGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
 void YouMeIM_Command_JoinGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.YOUMEID)
}

// optional string reason = 4;
bool YouMeIM_Command_JoinGroupInvited::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YouMeIM_Command_JoinGroupInvited::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
void YouMeIM_Command_JoinGroupInvited::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
void YouMeIM_Command_JoinGroupInvited::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
 const ::std::string& YouMeIM_Command_JoinGroupInvited::reason() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
 void YouMeIM_Command_JoinGroupInvited::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
 void YouMeIM_Command_JoinGroupInvited::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_JoinGroupInvited::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_JoinGroupInvited::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupInvited.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_AgreeGroupInvited::kMsgHeadFieldNumber;
const int YouMeIM_Command_AgreeGroupInvited::kGroupIDFieldNumber;
const int YouMeIM_Command_AgreeGroupInvited::kYOUMEIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_AgreeGroupInvited::YouMeIM_Command_AgreeGroupInvited()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
}

void YouMeIM_Command_AgreeGroupInvited::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_AgreeGroupInvited::YouMeIM_Command_AgreeGroupInvited(const YouMeIM_Command_AgreeGroupInvited& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
}

void YouMeIM_Command_AgreeGroupInvited::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_AgreeGroupInvited::~YouMeIM_Command_AgreeGroupInvited() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
  SharedDtor();
}

void YouMeIM_Command_AgreeGroupInvited::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_AgreeGroupInvited::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_AgreeGroupInvited& YouMeIM_Command_AgreeGroupInvited::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_AgreeGroupInvited* YouMeIM_Command_AgreeGroupInvited::default_instance_ = NULL;

YouMeIM_Command_AgreeGroupInvited* YouMeIM_Command_AgreeGroupInvited::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_AgreeGroupInvited* n = new YouMeIM_Command_AgreeGroupInvited;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_AgreeGroupInvited::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_AgreeGroupInvited::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
  return false;
#undef DO_
}

void YouMeIM_Command_AgreeGroupInvited::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited)
}

int YouMeIM_Command_AgreeGroupInvited::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_AgreeGroupInvited::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_AgreeGroupInvited::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_AgreeGroupInvited*>(&from));
}

void YouMeIM_Command_AgreeGroupInvited::MergeFrom(const YouMeIM_Command_AgreeGroupInvited& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_AgreeGroupInvited::CopyFrom(const YouMeIM_Command_AgreeGroupInvited& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_AgreeGroupInvited::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_AgreeGroupInvited::Swap(YouMeIM_Command_AgreeGroupInvited* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_AgreeGroupInvited::InternalSwap(YouMeIM_Command_AgreeGroupInvited* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_AgreeGroupInvited::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_AgreeGroupInvited";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_AgreeGroupInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_AgreeGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_AgreeGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_AgreeGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_AgreeGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_AgreeGroupInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_AgreeGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_AgreeGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_AgreeGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_AgreeGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
 void YouMeIM_Command_AgreeGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
 void YouMeIM_Command_AgreeGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}
 ::std::string* YouMeIM_Command_AgreeGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_AgreeGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_AgreeGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_AgreeGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_AgreeGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_AgreeGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_AgreeGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
 void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
 void YouMeIM_Command_AgreeGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}
 ::std::string* YouMeIM_Command_AgreeGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_AgreeGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_AgreeGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_AgreeGroupInvited.YOUMEID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_RefuseGroupInvited::kMsgHeadFieldNumber;
const int YouMeIM_Command_RefuseGroupInvited::kGroupIDFieldNumber;
const int YouMeIM_Command_RefuseGroupInvited::kYOUMEIDFieldNumber;
const int YouMeIM_Command_RefuseGroupInvited::kReaseonFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_RefuseGroupInvited::YouMeIM_Command_RefuseGroupInvited()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
}

void YouMeIM_Command_RefuseGroupInvited::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_RefuseGroupInvited::YouMeIM_Command_RefuseGroupInvited(const YouMeIM_Command_RefuseGroupInvited& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
}

void YouMeIM_Command_RefuseGroupInvited::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  reaseon_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_RefuseGroupInvited::~YouMeIM_Command_RefuseGroupInvited() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
  SharedDtor();
}

void YouMeIM_Command_RefuseGroupInvited::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  reaseon_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_RefuseGroupInvited::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_RefuseGroupInvited& YouMeIM_Command_RefuseGroupInvited::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_RefuseGroupInvited* YouMeIM_Command_RefuseGroupInvited::default_instance_ = NULL;

YouMeIM_Command_RefuseGroupInvited* YouMeIM_Command_RefuseGroupInvited::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_RefuseGroupInvited* n = new YouMeIM_Command_RefuseGroupInvited;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_RefuseGroupInvited::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reaseon()) {
      reaseon_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_RefuseGroupInvited::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reaseon;
        break;
      }

      // optional string reaseon = 4;
      case 4: {
        if (tag == 34) {
         parse_reaseon:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reaseon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
  return false;
#undef DO_
}

void YouMeIM_Command_RefuseGroupInvited::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  // optional string reaseon = 4;
  if (has_reaseon()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reaseon(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited)
}

int YouMeIM_Command_RefuseGroupInvited::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_RefuseGroupInvited::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string reaseon = 4;
  if (has_reaseon()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->reaseon());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_RefuseGroupInvited::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_RefuseGroupInvited*>(&from));
}

void YouMeIM_Command_RefuseGroupInvited::MergeFrom(const YouMeIM_Command_RefuseGroupInvited& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
    if (from.has_reaseon()) {
      set_has_reaseon();
      reaseon_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.reaseon_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_RefuseGroupInvited::CopyFrom(const YouMeIM_Command_RefuseGroupInvited& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_RefuseGroupInvited::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_RefuseGroupInvited::Swap(YouMeIM_Command_RefuseGroupInvited* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_RefuseGroupInvited::InternalSwap(YouMeIM_Command_RefuseGroupInvited* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  reaseon_.Swap(&other->reaseon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_RefuseGroupInvited::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_RefuseGroupInvited";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_RefuseGroupInvited

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_RefuseGroupInvited::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_RefuseGroupInvited::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_RefuseGroupInvited::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseGroupInvited::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_RefuseGroupInvited::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_RefuseGroupInvited::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_RefuseGroupInvited::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_RefuseGroupInvited::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_RefuseGroupInvited::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
 void YouMeIM_Command_RefuseGroupInvited::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
 void YouMeIM_Command_RefuseGroupInvited::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_RefuseGroupInvited::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_RefuseGroupInvited::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_RefuseGroupInvited::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
 void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
 void YouMeIM_Command_RefuseGroupInvited::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.YOUMEID)
}

// optional string reaseon = 4;
bool YouMeIM_Command_RefuseGroupInvited::has_reaseon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YouMeIM_Command_RefuseGroupInvited::set_has_reaseon() {
  _has_bits_[0] |= 0x00000008u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_has_reaseon() {
  _has_bits_[0] &= ~0x00000008u;
}
void YouMeIM_Command_RefuseGroupInvited::clear_reaseon() {
  reaseon_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reaseon();
}
 const ::std::string& YouMeIM_Command_RefuseGroupInvited::reaseon() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
  return reaseon_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const ::std::string& value) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
 void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const char* value) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
 void YouMeIM_Command_RefuseGroupInvited::set_reaseon(const char* value, size_t size) {
  set_has_reaseon();
  reaseon_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::mutable_reaseon() {
  set_has_reaseon();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
  return reaseon_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_RefuseGroupInvited::release_reaseon() {
  clear_has_reaseon();
  return reaseon_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_RefuseGroupInvited::set_allocated_reaseon(::std::string* reaseon) {
  if (reaseon != NULL) {
    set_has_reaseon();
  } else {
    clear_has_reaseon();
  }
  reaseon_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reaseon);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_RefuseGroupInvited.reaseon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GroupInvitedResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_GroupInvitedResponse::kGroupIDFieldNumber;
const int YouMeIM_Command_GroupInvitedResponse::kYOUMEIDFieldNumber;
const int YouMeIM_Command_GroupInvitedResponse::kEvtTypeFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GroupInvitedResponse::YouMeIM_Command_GroupInvitedResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
}

void YouMeIM_Command_GroupInvitedResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_GroupInvitedResponse::YouMeIM_Command_GroupInvitedResponse(const YouMeIM_Command_GroupInvitedResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
}

void YouMeIM_Command_GroupInvitedResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  evttype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GroupInvitedResponse::~YouMeIM_Command_GroupInvitedResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
  SharedDtor();
}

void YouMeIM_Command_GroupInvitedResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GroupInvitedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GroupInvitedResponse& YouMeIM_Command_GroupInvitedResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GroupInvitedResponse* YouMeIM_Command_GroupInvitedResponse::default_instance_ = NULL;

YouMeIM_Command_GroupInvitedResponse* YouMeIM_Command_GroupInvitedResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GroupInvitedResponse* n = new YouMeIM_Command_GroupInvitedResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GroupInvitedResponse::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    evttype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GroupInvitedResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_evtType;
        break;
      }

      // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
      case 4: {
        if (tag == 32) {
         parse_evtType:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value)) {
            set_evttype(static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_GroupInvitedResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
  if (has_evttype()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->evttype(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse)
}

int YouMeIM_Command_GroupInvitedResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  if (has_evttype()) {
    // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->evttype());
  }

  return total_size;
}
int YouMeIM_Command_GroupInvitedResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

    // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->evttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GroupInvitedResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GroupInvitedResponse*>(&from));
}

void YouMeIM_Command_GroupInvitedResponse::MergeFrom(const YouMeIM_Command_GroupInvitedResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
    if (from.has_evttype()) {
      set_evttype(from.evttype());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GroupInvitedResponse::CopyFrom(const YouMeIM_Command_GroupInvitedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GroupInvitedResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GroupInvitedResponse::Swap(YouMeIM_Command_GroupInvitedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GroupInvitedResponse::InternalSwap(YouMeIM_Command_GroupInvitedResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  std::swap(evttype_, other->evttype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GroupInvitedResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GroupInvitedResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GroupInvitedResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_GroupInvitedResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GroupInvitedResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GroupInvitedResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupInvitedResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GroupInvitedResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GroupInvitedResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_GroupInvitedResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GroupInvitedResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_GroupInvitedResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupInvitedResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
 void YouMeIM_Command_GroupInvitedResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
 void YouMeIM_Command_GroupInvitedResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}
 ::std::string* YouMeIM_Command_GroupInvitedResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GroupInvitedResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupInvitedResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_GroupInvitedResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_GroupInvitedResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_GroupInvitedResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
 void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
 void YouMeIM_Command_GroupInvitedResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}
 ::std::string* YouMeIM_Command_GroupInvitedResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GroupInvitedResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GroupInvitedResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.YOUMEID)
}

// required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 4;
bool YouMeIM_Command_GroupInvitedResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YouMeIM_Command_GroupInvitedResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000008u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000008u;
}
void YouMeIM_Command_GroupInvitedResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
 ::YouMeIMProtocol::YouMeIM_JoinGroupEvent YouMeIM_Command_GroupInvitedResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(evttype_);
}
 void YouMeIM_Command_GroupInvitedResponse::set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GroupInvitedResponse.evtType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_JoinGroupResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_JoinGroupResponse::kEvtTypeFieldNumber;
const int YouMeIM_Command_JoinGroupResponse::kGroupInfoFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_JoinGroupResponse::YouMeIM_Command_JoinGroupResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
}

void YouMeIM_Command_JoinGroupResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(
      ::YouMeIMProtocol::YouMeIM_GroupInfo::internal_default_instance());
#else
  groupinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_GroupInfo*>(&::YouMeIMProtocol::YouMeIM_GroupInfo::default_instance());
#endif
}

YouMeIM_Command_JoinGroupResponse::YouMeIM_Command_JoinGroupResponse(const YouMeIM_Command_JoinGroupResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
}

void YouMeIM_Command_JoinGroupResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  evttype_ = 0;
  groupinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_JoinGroupResponse::~YouMeIM_Command_JoinGroupResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
  SharedDtor();
}

void YouMeIM_Command_JoinGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
    delete groupinfo_;
  }
}

void YouMeIM_Command_JoinGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_JoinGroupResponse& YouMeIM_Command_JoinGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_JoinGroupResponse* YouMeIM_Command_JoinGroupResponse::default_instance_ = NULL;

YouMeIM_Command_JoinGroupResponse* YouMeIM_Command_JoinGroupResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_JoinGroupResponse* n = new YouMeIM_Command_JoinGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_JoinGroupResponse::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    evttype_ = 0;
    if (has_groupinfo()) {
      if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_JoinGroupResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_evtType;
        break;
      }

      // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
      case 2: {
        if (tag == 16) {
         parse_evtType:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value)) {
            set_evttype(static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_groupInfo;
        break;
      }

      // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_groupInfo:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_JoinGroupResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
  if (has_evttype()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->evttype(), output);
  }

  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
  if (has_groupinfo()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->groupinfo_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_JoinGroupResponse)
}

int YouMeIM_Command_JoinGroupResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_evttype()) {
    // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->evttype());
  }

  return total_size;
}
int YouMeIM_Command_JoinGroupResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->evttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
  if (has_groupinfo()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupinfo_);
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_JoinGroupResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_JoinGroupResponse*>(&from));
}

void YouMeIM_Command_JoinGroupResponse::MergeFrom(const YouMeIM_Command_JoinGroupResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_evttype()) {
      set_evttype(from.evttype());
    }
    if (from.has_groupinfo()) {
      mutable_groupinfo()->::YouMeIMProtocol::YouMeIM_GroupInfo::MergeFrom(from.groupinfo());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_JoinGroupResponse::CopyFrom(const YouMeIM_Command_JoinGroupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_JoinGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (has_groupinfo()) {
    if (!this->groupinfo_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_JoinGroupResponse::Swap(YouMeIM_Command_JoinGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_JoinGroupResponse::InternalSwap(YouMeIM_Command_JoinGroupResponse* other) {
  std::swap(msghead_, other->msghead_);
  std::swap(evttype_, other->evttype_);
  std::swap(groupinfo_, other->groupinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_JoinGroupResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_JoinGroupResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_JoinGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_JoinGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_JoinGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_JoinGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_JoinGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_JoinGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_JoinGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_JoinGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.msgHead)
}

// required .YouMeProtocol.YouMeIM_JoinGroupEvent evtType = 2;
bool YouMeIM_Command_JoinGroupResponse::has_evttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_JoinGroupResponse::set_has_evttype() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_JoinGroupResponse::clear_has_evttype() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_JoinGroupResponse::clear_evttype() {
  evttype_ = 0;
  clear_has_evttype();
}
 ::YouMeIMProtocol::YouMeIM_JoinGroupEvent YouMeIM_Command_JoinGroupResponse::evttype() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.evtType)
  return static_cast< ::YouMeIMProtocol::YouMeIM_JoinGroupEvent >(evttype_);
}
 void YouMeIM_Command_JoinGroupResponse::set_evttype(::YouMeIMProtocol::YouMeIM_JoinGroupEvent value) {
  assert(::YouMeIMProtocol::YouMeIM_JoinGroupEvent_IsValid(value));
  set_has_evttype();
  evttype_ = value;
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.evtType)
}

// optional .YouMeProtocol.YouMeIM_GroupInfo groupInfo = 3;
bool YouMeIM_Command_JoinGroupResponse::has_groupinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_JoinGroupResponse::set_has_groupinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_JoinGroupResponse::clear_has_groupinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_JoinGroupResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::YouMeIMProtocol::YouMeIM_GroupInfo::Clear();
  clear_has_groupinfo();
}
const ::YouMeIMProtocol::YouMeIM_GroupInfo& YouMeIM_Command_JoinGroupResponse::groupinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance().groupinfo_;
#else
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
#endif
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_JoinGroupResponse::mutable_groupinfo() {
  set_has_groupinfo();
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::YouMeIMProtocol::YouMeIM_GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
  return groupinfo_;
}
::YouMeIMProtocol::YouMeIM_GroupInfo* YouMeIM_Command_JoinGroupResponse::release_groupinfo() {
  clear_has_groupinfo();
  ::YouMeIMProtocol::YouMeIM_GroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
void YouMeIM_Command_JoinGroupResponse::set_allocated_groupinfo(::YouMeIMProtocol::YouMeIM_GroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    set_has_groupinfo();
  } else {
    clear_has_groupinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_JoinGroupResponse.groupInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_OtherJoinGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_OtherJoinGroup::kGroupIDFieldNumber;
const int YouMeIM_Command_OtherJoinGroup::kMemberInfoFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_OtherJoinGroup::YouMeIM_Command_OtherJoinGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
}

void YouMeIM_Command_OtherJoinGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  memberinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_MemberInfo*>(
      ::YouMeIMProtocol::YouMeIM_MemberInfo::internal_default_instance());
#else
  memberinfo_ = const_cast< ::YouMeIMProtocol::YouMeIM_MemberInfo*>(&::YouMeIMProtocol::YouMeIM_MemberInfo::default_instance());
#endif
}

YouMeIM_Command_OtherJoinGroup::YouMeIM_Command_OtherJoinGroup(const YouMeIM_Command_OtherJoinGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
}

void YouMeIM_Command_OtherJoinGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  memberinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_OtherJoinGroup::~YouMeIM_Command_OtherJoinGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
  SharedDtor();
}

void YouMeIM_Command_OtherJoinGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
    delete memberinfo_;
  }
}

void YouMeIM_Command_OtherJoinGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_OtherJoinGroup& YouMeIM_Command_OtherJoinGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_OtherJoinGroup* YouMeIM_Command_OtherJoinGroup::default_instance_ = NULL;

YouMeIM_Command_OtherJoinGroup* YouMeIM_Command_OtherJoinGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_OtherJoinGroup* n = new YouMeIM_Command_OtherJoinGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_OtherJoinGroup::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_memberinfo()) {
      if (memberinfo_ != NULL) memberinfo_->::YouMeIMProtocol::YouMeIM_MemberInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_OtherJoinGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_memberInfo;
        break;
      }

      // required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_memberInfo:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_memberinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_OtherJoinGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
  if (has_memberinfo()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->memberinfo_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_OtherJoinGroup)
}

int YouMeIM_Command_OtherJoinGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_memberinfo()) {
    // required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->memberinfo_);
  }

  return total_size;
}
int YouMeIM_Command_OtherJoinGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->memberinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_OtherJoinGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_OtherJoinGroup*>(&from));
}

void YouMeIM_Command_OtherJoinGroup::MergeFrom(const YouMeIM_Command_OtherJoinGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_memberinfo()) {
      mutable_memberinfo()->::YouMeIMProtocol::YouMeIM_MemberInfo::MergeFrom(from.memberinfo());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_OtherJoinGroup::CopyFrom(const YouMeIM_Command_OtherJoinGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_OtherJoinGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (has_memberinfo()) {
    if (!this->memberinfo_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_OtherJoinGroup::Swap(YouMeIM_Command_OtherJoinGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_OtherJoinGroup::InternalSwap(YouMeIM_Command_OtherJoinGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(memberinfo_, other->memberinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_OtherJoinGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_OtherJoinGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_OtherJoinGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_OtherJoinGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_OtherJoinGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_OtherJoinGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_OtherJoinGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherJoinGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherJoinGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherJoinGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_OtherJoinGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_OtherJoinGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_OtherJoinGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_OtherJoinGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_OtherJoinGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_OtherJoinGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherJoinGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
 void YouMeIM_Command_OtherJoinGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
 void YouMeIM_Command_OtherJoinGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}
 ::std::string* YouMeIM_Command_OtherJoinGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_OtherJoinGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherJoinGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.groupID)
}

// required .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
bool YouMeIM_Command_OtherJoinGroup::has_memberinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_OtherJoinGroup::set_has_memberinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_OtherJoinGroup::clear_has_memberinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_OtherJoinGroup::clear_memberinfo() {
  if (memberinfo_ != NULL) memberinfo_->::YouMeIMProtocol::YouMeIM_MemberInfo::Clear();
  clear_has_memberinfo();
}
const ::YouMeIMProtocol::YouMeIM_MemberInfo& YouMeIM_Command_OtherJoinGroup::memberinfo() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance().memberinfo_;
#else
  return memberinfo_ != NULL ? *memberinfo_ : *default_instance_->memberinfo_;
#endif
}
::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_OtherJoinGroup::mutable_memberinfo() {
  set_has_memberinfo();
  if (memberinfo_ == NULL) {
    memberinfo_ = new ::YouMeIMProtocol::YouMeIM_MemberInfo;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
  return memberinfo_;
}
::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_OtherJoinGroup::release_memberinfo() {
  clear_has_memberinfo();
  ::YouMeIMProtocol::YouMeIM_MemberInfo* temp = memberinfo_;
  memberinfo_ = NULL;
  return temp;
}
void YouMeIM_Command_OtherJoinGroup::set_allocated_memberinfo(::YouMeIMProtocol::YouMeIM_MemberInfo* memberinfo) {
  delete memberinfo_;
  memberinfo_ = memberinfo;
  if (memberinfo) {
    set_has_memberinfo();
  } else {
    clear_has_memberinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherJoinGroup.memberInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_LeaveGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_LeaveGroup::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_LeaveGroup::YouMeIM_Command_LeaveGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_LeaveGroup)
}

void YouMeIM_Command_LeaveGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_LeaveGroup::YouMeIM_Command_LeaveGroup(const YouMeIM_Command_LeaveGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_LeaveGroup)
}

void YouMeIM_Command_LeaveGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_LeaveGroup::~YouMeIM_Command_LeaveGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_LeaveGroup)
  SharedDtor();
}

void YouMeIM_Command_LeaveGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_LeaveGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_LeaveGroup& YouMeIM_Command_LeaveGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_LeaveGroup* YouMeIM_Command_LeaveGroup::default_instance_ = NULL;

YouMeIM_Command_LeaveGroup* YouMeIM_Command_LeaveGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_LeaveGroup* n = new YouMeIM_Command_LeaveGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_LeaveGroup::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_LeaveGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_LeaveGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_LeaveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_LeaveGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_LeaveGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_LeaveGroup)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_LeaveGroup)
}

int YouMeIM_Command_LeaveGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_LeaveGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_LeaveGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_LeaveGroup*>(&from));
}

void YouMeIM_Command_LeaveGroup::MergeFrom(const YouMeIM_Command_LeaveGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_LeaveGroup::CopyFrom(const YouMeIM_Command_LeaveGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_LeaveGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_LeaveGroup::Swap(YouMeIM_Command_LeaveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_LeaveGroup::InternalSwap(YouMeIM_Command_LeaveGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_LeaveGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_LeaveGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_LeaveGroup

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_LeaveGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_LeaveGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_LeaveGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_LeaveGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_LeaveGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_LeaveGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_LeaveGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_LeaveGroup::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroup.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_LeaveGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_LeaveGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_LeaveGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_LeaveGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_LeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_LeaveGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
 void YouMeIM_Command_LeaveGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
 void YouMeIM_Command_LeaveGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}
 ::std::string* YouMeIM_Command_LeaveGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_LeaveGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_LeaveGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroup.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_LeaveGroupResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_LeaveGroupResponse::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_LeaveGroupResponse::YouMeIM_Command_LeaveGroupResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
}

void YouMeIM_Command_LeaveGroupResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_LeaveGroupResponse::YouMeIM_Command_LeaveGroupResponse(const YouMeIM_Command_LeaveGroupResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
}

void YouMeIM_Command_LeaveGroupResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_LeaveGroupResponse::~YouMeIM_Command_LeaveGroupResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
  SharedDtor();
}

void YouMeIM_Command_LeaveGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_LeaveGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_LeaveGroupResponse& YouMeIM_Command_LeaveGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_LeaveGroupResponse* YouMeIM_Command_LeaveGroupResponse::default_instance_ = NULL;

YouMeIM_Command_LeaveGroupResponse* YouMeIM_Command_LeaveGroupResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_LeaveGroupResponse* n = new YouMeIM_Command_LeaveGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_LeaveGroupResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_LeaveGroupResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_LeaveGroupResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse)
}

int YouMeIM_Command_LeaveGroupResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_LeaveGroupResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_LeaveGroupResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_LeaveGroupResponse*>(&from));
}

void YouMeIM_Command_LeaveGroupResponse::MergeFrom(const YouMeIM_Command_LeaveGroupResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_LeaveGroupResponse::CopyFrom(const YouMeIM_Command_LeaveGroupResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_LeaveGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_LeaveGroupResponse::Swap(YouMeIM_Command_LeaveGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_LeaveGroupResponse::InternalSwap(YouMeIM_Command_LeaveGroupResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_LeaveGroupResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_LeaveGroupResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_LeaveGroupResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_LeaveGroupResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_LeaveGroupResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_LeaveGroupResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_LeaveGroupResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_LeaveGroupResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LeaveGroupResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_LeaveGroupResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_LeaveGroupResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_LeaveGroupResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_LeaveGroupResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_LeaveGroupResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_LeaveGroupResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_LeaveGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_LeaveGroupResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
 void YouMeIM_Command_LeaveGroupResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
 void YouMeIM_Command_LeaveGroupResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}
 ::std::string* YouMeIM_Command_LeaveGroupResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_LeaveGroupResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_LeaveGroupResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_LeaveGroupResponse.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_OtherLeaveGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_OtherLeaveGroup::kGroupIDFieldNumber;
const int YouMeIM_Command_OtherLeaveGroup::kYOUMEIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_OtherLeaveGroup::YouMeIM_Command_OtherLeaveGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
}

void YouMeIM_Command_OtherLeaveGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_OtherLeaveGroup::YouMeIM_Command_OtherLeaveGroup(const YouMeIM_Command_OtherLeaveGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
}

void YouMeIM_Command_OtherLeaveGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_OtherLeaveGroup::~YouMeIM_Command_OtherLeaveGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
  SharedDtor();
}

void YouMeIM_Command_OtherLeaveGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_OtherLeaveGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_OtherLeaveGroup& YouMeIM_Command_OtherLeaveGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_OtherLeaveGroup* YouMeIM_Command_OtherLeaveGroup::default_instance_ = NULL;

YouMeIM_Command_OtherLeaveGroup* YouMeIM_Command_OtherLeaveGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_OtherLeaveGroup* n = new YouMeIM_Command_OtherLeaveGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_OtherLeaveGroup::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_OtherLeaveGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_groupID;
        break;
      }

      // required string groupID = 3;
      case 3: {
        if (tag == 26) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 4;
      case 4: {
        if (tag == 34) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_OtherLeaveGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 3;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->groupid(), output);
  }

  // required string YOUMEID = 4;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->youmeid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup)
}

int YouMeIM_Command_OtherLeaveGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_OtherLeaveGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_OtherLeaveGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_OtherLeaveGroup*>(&from));
}

void YouMeIM_Command_OtherLeaveGroup::MergeFrom(const YouMeIM_Command_OtherLeaveGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_OtherLeaveGroup::CopyFrom(const YouMeIM_Command_OtherLeaveGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_OtherLeaveGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_OtherLeaveGroup::Swap(YouMeIM_Command_OtherLeaveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_OtherLeaveGroup::InternalSwap(YouMeIM_Command_OtherLeaveGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_OtherLeaveGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_OtherLeaveGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_OtherLeaveGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_OtherLeaveGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_OtherLeaveGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherLeaveGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherLeaveGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherLeaveGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_OtherLeaveGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.msgHead)
}

// required string groupID = 3;
bool YouMeIM_Command_OtherLeaveGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_OtherLeaveGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_OtherLeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherLeaveGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
 void YouMeIM_Command_OtherLeaveGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
 void YouMeIM_Command_OtherLeaveGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}
 ::std::string* YouMeIM_Command_OtherLeaveGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_OtherLeaveGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherLeaveGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.groupID)
}

// required string YOUMEID = 4;
bool YouMeIM_Command_OtherLeaveGroup::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_OtherLeaveGroup::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_OtherLeaveGroup::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_OtherLeaveGroup::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
 void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
 void YouMeIM_Command_OtherLeaveGroup::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}
 ::std::string* YouMeIM_Command_OtherLeaveGroup::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_OtherLeaveGroup::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherLeaveGroup::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherLeaveGroup.YOUMEID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_KickoutMember::kMsgHeadFieldNumber;
const int YouMeIM_Command_KickoutMember::kGroupIDFieldNumber;
const int YouMeIM_Command_KickoutMember::kYOUMEIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_KickoutMember::YouMeIM_Command_KickoutMember()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_KickoutMember)
}

void YouMeIM_Command_KickoutMember::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_KickoutMember::YouMeIM_Command_KickoutMember(const YouMeIM_Command_KickoutMember& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_KickoutMember)
}

void YouMeIM_Command_KickoutMember::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_KickoutMember::~YouMeIM_Command_KickoutMember() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_KickoutMember)
  SharedDtor();
}

void YouMeIM_Command_KickoutMember::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_KickoutMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_KickoutMember& YouMeIM_Command_KickoutMember::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_KickoutMember* YouMeIM_Command_KickoutMember::default_instance_ = NULL;

YouMeIM_Command_KickoutMember* YouMeIM_Command_KickoutMember::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_KickoutMember* n = new YouMeIM_Command_KickoutMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_KickoutMember::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_KickoutMember::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_KickoutMember)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_KickoutMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_KickoutMember)
  return false;
#undef DO_
}

void YouMeIM_Command_KickoutMember::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_KickoutMember)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_KickoutMember)
}

int YouMeIM_Command_KickoutMember::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_KickoutMember::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_KickoutMember::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_KickoutMember*>(&from));
}

void YouMeIM_Command_KickoutMember::MergeFrom(const YouMeIM_Command_KickoutMember& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_KickoutMember::CopyFrom(const YouMeIM_Command_KickoutMember& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_KickoutMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_KickoutMember::Swap(YouMeIM_Command_KickoutMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_KickoutMember::InternalSwap(YouMeIM_Command_KickoutMember* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_KickoutMember::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_KickoutMember";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_KickoutMember

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_KickoutMember::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_KickoutMember::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_KickoutMember::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_KickoutMember::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_KickoutMember::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickoutMember::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_KickoutMember::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_KickoutMember::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_KickoutMember::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_KickoutMember::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_KickoutMember::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_KickoutMember::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_KickoutMember::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMember::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
 void YouMeIM_Command_KickoutMember::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
 void YouMeIM_Command_KickoutMember::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}
 ::std::string* YouMeIM_Command_KickoutMember::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_KickoutMember::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMember::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_KickoutMember::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_KickoutMember::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_KickoutMember::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_KickoutMember::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_KickoutMember::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMember::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
 void YouMeIM_Command_KickoutMember::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
 void YouMeIM_Command_KickoutMember::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}
 ::std::string* YouMeIM_Command_KickoutMember::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_KickoutMember::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMember::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMember.YOUMEID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_KickoutMemberResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_KickoutMemberResponse::kGroupIDFieldNumber;
const int YouMeIM_Command_KickoutMemberResponse::kYOUMEIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_KickoutMemberResponse::YouMeIM_Command_KickoutMemberResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
}

void YouMeIM_Command_KickoutMemberResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_KickoutMemberResponse::YouMeIM_Command_KickoutMemberResponse(const YouMeIM_Command_KickoutMemberResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
}

void YouMeIM_Command_KickoutMemberResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_KickoutMemberResponse::~YouMeIM_Command_KickoutMemberResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
  SharedDtor();
}

void YouMeIM_Command_KickoutMemberResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_KickoutMemberResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_KickoutMemberResponse& YouMeIM_Command_KickoutMemberResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_KickoutMemberResponse* YouMeIM_Command_KickoutMemberResponse::default_instance_ = NULL;

YouMeIM_Command_KickoutMemberResponse* YouMeIM_Command_KickoutMemberResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_KickoutMemberResponse* n = new YouMeIM_Command_KickoutMemberResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_KickoutMemberResponse::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeid()) {
      youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_KickoutMemberResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEID;
        break;
      }

      // required string YOUMEID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_KickoutMemberResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEID = 3;
  if (has_youmeid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse)
}

int YouMeIM_Command_KickoutMemberResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeid()) {
    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());
  }

  return total_size;
}
int YouMeIM_Command_KickoutMemberResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_KickoutMemberResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_KickoutMemberResponse*>(&from));
}

void YouMeIM_Command_KickoutMemberResponse::MergeFrom(const YouMeIM_Command_KickoutMemberResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeid()) {
      set_has_youmeid();
      youmeid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_KickoutMemberResponse::CopyFrom(const YouMeIM_Command_KickoutMemberResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_KickoutMemberResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_KickoutMemberResponse::Swap(YouMeIM_Command_KickoutMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_KickoutMemberResponse::InternalSwap(YouMeIM_Command_KickoutMemberResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeid_.Swap(&other->youmeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_KickoutMemberResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_KickoutMemberResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_KickoutMemberResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_KickoutMemberResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_KickoutMemberResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_KickoutMemberResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickoutMemberResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_KickoutMemberResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_KickoutMemberResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_KickoutMemberResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_KickoutMemberResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_KickoutMemberResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMemberResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
 void YouMeIM_Command_KickoutMemberResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
 void YouMeIM_Command_KickoutMemberResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}
 ::std::string* YouMeIM_Command_KickoutMemberResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_KickoutMemberResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMemberResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.groupID)
}

// required string YOUMEID = 3;
bool YouMeIM_Command_KickoutMemberResponse::has_youmeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_KickoutMemberResponse::set_has_youmeid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_has_youmeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_KickoutMemberResponse::clear_youmeid() {
  youmeid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeid();
}
 const ::std::string& YouMeIM_Command_KickoutMemberResponse::youmeid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
  return youmeid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const ::std::string& value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
 void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const char* value) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
 void YouMeIM_Command_KickoutMemberResponse::set_youmeid(const char* value, size_t size) {
  set_has_youmeid();
  youmeid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}
 ::std::string* YouMeIM_Command_KickoutMemberResponse::mutable_youmeid() {
  set_has_youmeid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
  return youmeid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_KickoutMemberResponse::release_youmeid() {
  clear_has_youmeid();
  return youmeid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_KickoutMemberResponse::set_allocated_youmeid(::std::string* youmeid) {
  if (youmeid != NULL) {
    set_has_youmeid();
  } else {
    clear_has_youmeid();
  }
  youmeid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_KickoutMemberResponse.YOUMEID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_OtherKickoutedFromGroup::kMsgHeadFieldNumber;
const int YouMeIM_Command_OtherKickoutedFromGroup::kGroupIDFieldNumber;
const int YouMeIM_Command_OtherKickoutedFromGroup::kYOUMEIIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_OtherKickoutedFromGroup::YouMeIM_Command_OtherKickoutedFromGroup()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
}

void YouMeIM_Command_OtherKickoutedFromGroup::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_OtherKickoutedFromGroup::YouMeIM_Command_OtherKickoutedFromGroup(const YouMeIM_Command_OtherKickoutedFromGroup& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
}

void YouMeIM_Command_OtherKickoutedFromGroup::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeiid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_OtherKickoutedFromGroup::~YouMeIM_Command_OtherKickoutedFromGroup() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
  SharedDtor();
}

void YouMeIM_Command_OtherKickoutedFromGroup::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  youmeiid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_OtherKickoutedFromGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_OtherKickoutedFromGroup& YouMeIM_Command_OtherKickoutedFromGroup::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_OtherKickoutedFromGroup* YouMeIM_Command_OtherKickoutedFromGroup::default_instance_ = NULL;

YouMeIM_Command_OtherKickoutedFromGroup* YouMeIM_Command_OtherKickoutedFromGroup::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_OtherKickoutedFromGroup* n = new YouMeIM_Command_OtherKickoutedFromGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_OtherKickoutedFromGroup::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_youmeiid()) {
      youmeiid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_OtherKickoutedFromGroup::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_YOUMEIID;
        break;
      }

      // required string YOUMEIID = 3;
      case 3: {
        if (tag == 26) {
         parse_YOUMEIID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youmeiid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
  return false;
#undef DO_
}

void YouMeIM_Command_OtherKickoutedFromGroup::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // required string YOUMEIID = 3;
  if (has_youmeiid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->youmeiid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup)
}

int YouMeIM_Command_OtherKickoutedFromGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  if (has_youmeiid()) {
    // required string YOUMEIID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeiid());
  }

  return total_size;
}
int YouMeIM_Command_OtherKickoutedFromGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

    // required string YOUMEIID = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->youmeiid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_OtherKickoutedFromGroup::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_OtherKickoutedFromGroup*>(&from));
}

void YouMeIM_Command_OtherKickoutedFromGroup::MergeFrom(const YouMeIM_Command_OtherKickoutedFromGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
    if (from.has_youmeiid()) {
      set_has_youmeiid();
      youmeiid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.youmeiid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_OtherKickoutedFromGroup::CopyFrom(const YouMeIM_Command_OtherKickoutedFromGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_OtherKickoutedFromGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_OtherKickoutedFromGroup::Swap(YouMeIM_Command_OtherKickoutedFromGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_OtherKickoutedFromGroup::InternalSwap(YouMeIM_Command_OtherKickoutedFromGroup* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  youmeiid_.Swap(&other->youmeiid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_OtherKickoutedFromGroup::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_OtherKickoutedFromGroup

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_OtherKickoutedFromGroup::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_OtherKickoutedFromGroup::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_OtherKickoutedFromGroup::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherKickoutedFromGroup::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_OtherKickoutedFromGroup::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_OtherKickoutedFromGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_OtherKickoutedFromGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_OtherKickoutedFromGroup::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}
 ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.groupID)
}

// required string YOUMEIID = 3;
bool YouMeIM_Command_OtherKickoutedFromGroup::has_youmeiid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YouMeIM_Command_OtherKickoutedFromGroup::set_has_youmeiid() {
  _has_bits_[0] |= 0x00000004u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_has_youmeiid() {
  _has_bits_[0] &= ~0x00000004u;
}
void YouMeIM_Command_OtherKickoutedFromGroup::clear_youmeiid() {
  youmeiid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youmeiid();
}
 const ::std::string& YouMeIM_Command_OtherKickoutedFromGroup::youmeiid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
  return youmeiid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const ::std::string& value) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const char* value) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_youmeiid(const char* value, size_t size) {
  set_has_youmeiid();
  youmeiid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}
 ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::mutable_youmeiid() {
  set_has_youmeiid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
  return youmeiid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_OtherKickoutedFromGroup::release_youmeiid() {
  clear_has_youmeiid();
  return youmeiid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_OtherKickoutedFromGroup::set_allocated_youmeiid(::std::string* youmeiid) {
  if (youmeiid != NULL) {
    set_has_youmeiid();
  } else {
    clear_has_youmeiid();
  }
  youmeiid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), youmeiid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_OtherKickoutedFromGroup.YOUMEIID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetGroupMembers::kMsgHeadFieldNumber;
const int YouMeIM_Command_GetGroupMembers::kGroupIDFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetGroupMembers::YouMeIM_Command_GetGroupMembers()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
}

void YouMeIM_Command_GetGroupMembers::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(
      ::YouMeIMProtocol::PacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::PacketHead*>(&::YouMeIMProtocol::PacketHead::default_instance());
#endif
}

YouMeIM_Command_GetGroupMembers::YouMeIM_Command_GetGroupMembers(const YouMeIM_Command_GetGroupMembers& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
}

void YouMeIM_Command_GetGroupMembers::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetGroupMembers::~YouMeIM_Command_GetGroupMembers() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
  SharedDtor();
}

void YouMeIM_Command_GetGroupMembers::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GetGroupMembers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetGroupMembers& YouMeIM_Command_GetGroupMembers::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetGroupMembers* YouMeIM_Command_GetGroupMembers::default_instance_ = NULL;

YouMeIM_Command_GetGroupMembers* YouMeIM_Command_GetGroupMembers::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetGroupMembers* n = new YouMeIM_Command_GetGroupMembers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetGroupMembers::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetGroupMembers::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.PacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
  return false;
#undef DO_
}

void YouMeIM_Command_GetGroupMembers::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
  // required .YouMeProtocol.PacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetGroupMembers)
}

int YouMeIM_Command_GetGroupMembers::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_GetGroupMembers::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.PacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetGroupMembers::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetGroupMembers*>(&from));
}

void YouMeIM_Command_GetGroupMembers::MergeFrom(const YouMeIM_Command_GetGroupMembers& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::PacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetGroupMembers::CopyFrom(const YouMeIM_Command_GetGroupMembers& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetGroupMembers::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  return true;
}

void YouMeIM_Command_GetGroupMembers::Swap(YouMeIM_Command_GetGroupMembers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetGroupMembers::InternalSwap(YouMeIM_Command_GetGroupMembers* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetGroupMembers::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetGroupMembers";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetGroupMembers

// required .YouMeProtocol.PacketHead msgHead = 1;
bool YouMeIM_Command_GetGroupMembers::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetGroupMembers::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetGroupMembers::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetGroupMembers::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::PacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::PacketHead& YouMeIM_Command_GetGroupMembers::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupMembers::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::PacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
  return msghead_;
}
::YouMeIMProtocol::PacketHead* YouMeIM_Command_GetGroupMembers::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::PacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetGroupMembers::set_allocated_msghead(::YouMeIMProtocol::PacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembers.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_GetGroupMembers::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GetGroupMembers::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GetGroupMembers::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GetGroupMembers::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_GetGroupMembers::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupMembers::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
 void YouMeIM_Command_GetGroupMembers::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
 void YouMeIM_Command_GetGroupMembers::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}
 ::std::string* YouMeIM_Command_GetGroupMembers::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GetGroupMembers::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupMembers::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembers.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int YouMeIM_Command_GetGroupMembersResponse::kMsgHeadFieldNumber;
const int YouMeIM_Command_GetGroupMembersResponse::kGroupIDFieldNumber;
const int YouMeIM_Command_GetGroupMembersResponse::kMemberInfoFieldNumber;
#endif  // !_MSC_VER

YouMeIM_Command_GetGroupMembersResponse::YouMeIM_Command_GetGroupMembersResponse()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
}

void YouMeIM_Command_GetGroupMembersResponse::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(
      ::YouMeIMProtocol::ServerPacketHead::internal_default_instance());
#else
  msghead_ = const_cast< ::YouMeIMProtocol::ServerPacketHead*>(&::YouMeIMProtocol::ServerPacketHead::default_instance());
#endif
}

YouMeIM_Command_GetGroupMembersResponse::YouMeIM_Command_GetGroupMembersResponse(const YouMeIM_Command_GetGroupMembersResponse& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
}

void YouMeIM_Command_GetGroupMembersResponse::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msghead_ = NULL;
  groupid_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YouMeIM_Command_GetGroupMembersResponse::~YouMeIM_Command_GetGroupMembersResponse() {
  // @@protoc_insertion_point(destructor:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
  SharedDtor();
}

void YouMeIM_Command_GetGroupMembersResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete msghead_;
  }
}

void YouMeIM_Command_GetGroupMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const YouMeIM_Command_GetGroupMembersResponse& YouMeIM_Command_GetGroupMembersResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_5fgroup_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_5fgroup_2eproto();
#endif
  return *default_instance_;
}

YouMeIM_Command_GetGroupMembersResponse* YouMeIM_Command_GetGroupMembersResponse::default_instance_ = NULL;

YouMeIM_Command_GetGroupMembersResponse* YouMeIM_Command_GetGroupMembersResponse::New(::youmecommon::protobuf::Arena* arena) const {
  YouMeIM_Command_GetGroupMembersResponse* n = new YouMeIM_Command_GetGroupMembersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YouMeIM_Command_GetGroupMembersResponse::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
    }
    if (has_groupid()) {
      groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  memberinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool YouMeIM_Command_GetGroupMembersResponse::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .YouMeProtocol.ServerPacketHead msgHead = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msghead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupID;
        break;
      }

      // required string groupID = 2;
      case 2: {
        if (tag == 18) {
         parse_groupID:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_memberInfo;
        break;
      }

      // repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_memberInfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_memberInfo:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_memberinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_memberInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
  return false;
#undef DO_
}

void YouMeIM_Command_GetGroupMembersResponse::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
  // required .YouMeProtocol.ServerPacketHead msgHead = 1;
  if (has_msghead()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->msghead_, output);
  }

  // required string groupID = 2;
  if (has_groupid()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupid(), output);
  }

  // repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
  for (unsigned int i = 0, n = this->memberinfo_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->memberinfo(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse)
}

int YouMeIM_Command_GetGroupMembersResponse::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_msghead()) {
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);
  }

  if (has_groupid()) {
    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  return total_size;
}
int YouMeIM_Command_GetGroupMembersResponse::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .YouMeProtocol.ServerPacketHead msgHead = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msghead_);

    // required string groupID = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
  total_size += 1 * this->memberinfo_size();
  for (int i = 0; i < this->memberinfo_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->memberinfo(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YouMeIM_Command_GetGroupMembersResponse::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const YouMeIM_Command_GetGroupMembersResponse*>(&from));
}

void YouMeIM_Command_GetGroupMembersResponse::MergeFrom(const YouMeIM_Command_GetGroupMembersResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  memberinfo_.MergeFrom(from.memberinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msghead()) {
      mutable_msghead()->::YouMeIMProtocol::ServerPacketHead::MergeFrom(from.msghead());
    }
    if (from.has_groupid()) {
      set_has_groupid();
      groupid_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void YouMeIM_Command_GetGroupMembersResponse::CopyFrom(const YouMeIM_Command_GetGroupMembersResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YouMeIM_Command_GetGroupMembersResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msghead()) {
    if (!this->msghead_->IsInitialized()) return false;
  }
  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->memberinfo())) return false;
  return true;
}

void YouMeIM_Command_GetGroupMembersResponse::Swap(YouMeIM_Command_GetGroupMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YouMeIM_Command_GetGroupMembersResponse::InternalSwap(YouMeIM_Command_GetGroupMembersResponse* other) {
  std::swap(msghead_, other->msghead_);
  groupid_.Swap(&other->groupid_);
  memberinfo_.UnsafeArenaSwap(&other->memberinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string YouMeIM_Command_GetGroupMembersResponse::GetTypeName() const {
  return "YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YouMeIM_Command_GetGroupMembersResponse

// required .YouMeProtocol.ServerPacketHead msgHead = 1;
bool YouMeIM_Command_GetGroupMembersResponse::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YouMeIM_Command_GetGroupMembersResponse::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void YouMeIM_Command_GetGroupMembersResponse::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void YouMeIM_Command_GetGroupMembersResponse::clear_msghead() {
  if (msghead_ != NULL) msghead_->::YouMeIMProtocol::ServerPacketHead::Clear();
  clear_has_msghead();
}
const ::YouMeIMProtocol::ServerPacketHead& YouMeIM_Command_GetGroupMembersResponse::msghead() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msghead_ != NULL ? *msghead_ : *default_instance().msghead_;
#else
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
#endif
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupMembersResponse::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::YouMeIMProtocol::ServerPacketHead;
  }
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
  return msghead_;
}
::YouMeIMProtocol::ServerPacketHead* YouMeIM_Command_GetGroupMembersResponse::release_msghead() {
  clear_has_msghead();
  ::YouMeIMProtocol::ServerPacketHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
void YouMeIM_Command_GetGroupMembersResponse::set_allocated_msghead(::YouMeIMProtocol::ServerPacketHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.msgHead)
}

// required string groupID = 2;
bool YouMeIM_Command_GetGroupMembersResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YouMeIM_Command_GetGroupMembersResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void YouMeIM_Command_GetGroupMembersResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void YouMeIM_Command_GetGroupMembersResponse::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupid();
}
 const ::std::string& YouMeIM_Command_GetGroupMembersResponse::groupid() const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
  return groupid_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const ::std::string& value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
 void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const char* value) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
 void YouMeIM_Command_GetGroupMembersResponse::set_groupid(const char* value, size_t size) {
  set_has_groupid();
  groupid_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}
 ::std::string* YouMeIM_Command_GetGroupMembersResponse::mutable_groupid() {
  set_has_groupid();
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
  return groupid_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* YouMeIM_Command_GetGroupMembersResponse::release_groupid() {
  clear_has_groupid();
  return groupid_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void YouMeIM_Command_GetGroupMembersResponse::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    set_has_groupid();
  } else {
    clear_has_groupid();
  }
  groupid_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.groupID)
}

// repeated .YouMeProtocol.YouMeIM_MemberInfo memberInfo = 3;
int YouMeIM_Command_GetGroupMembersResponse::memberinfo_size() const {
  return memberinfo_.size();
}
void YouMeIM_Command_GetGroupMembersResponse::clear_memberinfo() {
  memberinfo_.Clear();
}
const ::YouMeIMProtocol::YouMeIM_MemberInfo& YouMeIM_Command_GetGroupMembersResponse::memberinfo(int index) const {
  // @@protoc_insertion_point(field_get:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Get(index);
}
::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_GetGroupMembersResponse::mutable_memberinfo(int index) {
  // @@protoc_insertion_point(field_mutable:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Mutable(index);
}
::YouMeIMProtocol::YouMeIM_MemberInfo* YouMeIM_Command_GetGroupMembersResponse::add_memberinfo() {
  // @@protoc_insertion_point(field_add:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >*
YouMeIM_Command_GetGroupMembersResponse::mutable_memberinfo() {
  // @@protoc_insertion_point(field_mutable_list:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return &memberinfo_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YouMeIMProtocol::YouMeIM_MemberInfo >&
YouMeIM_Command_GetGroupMembersResponse::memberinfo() const {
  // @@protoc_insertion_point(field_list:YouMeProtocol.YouMeIM_Command_GetGroupMembersResponse.memberInfo)
  return memberinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YouMeProtocol

// @@protoc_insertion_point(global_scope)
